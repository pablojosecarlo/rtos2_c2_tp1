
examples_c/sapi/gpio/TP_PdM_10Ch/out/TP_PdM_10Ch.elf:     file format elf32-littlearm
examples_c/sapi/gpio/TP_PdM_10Ch/out/TP_PdM_10Ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x1a000641

Program Header:
0x70000001 off    0x00017acc vaddr 0x1a007acc paddr 0x1a007acc align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00000000 vaddr 0x10000000 paddr 0x10000000 align 2**16
         filesz 0x000000b4 memsz 0x00000b08 flags rw-
    LOAD off    0x00010000 vaddr 0x1a000000 paddr 0x1a000000 align 2**16
         filesz 0x00007ad4 memsz 0x00007ad4 flags rwx
    LOAD off    0x00020000 vaddr 0x10000000 paddr 0x1a007ad4 align 2**16
         filesz 0x00000a34 memsz 0x00000a34 flags rw-
private flags = 5000400: [Version5 EABI] [hard-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007ac8  1a000000  1a000000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000a34  10000000  1a007ad4  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .data_RAM2    00000000  10080000  10080000  00020a34  2**2
                  CONTENTS
  3 .data_RAM3    00000000  20000000  20000000  00020a34  2**2
                  CONTENTS
  4 .data_RAM4    00000000  20008000  20008000  00020a34  2**2
                  CONTENTS
  5 .data_RAM5    00000000  2000c000  2000c000  00020a34  2**2
                  CONTENTS
  6 .bss          000000d0  10000a38  10000a38  00000a38  2**3
                  ALLOC
  7 .bss_RAM2     00000000  10080000  10080000  00020a34  2**2
                  CONTENTS
  8 .bss_RAM3     00000000  20000000  20000000  00020a34  2**2
                  CONTENTS
  9 .bss_RAM4     00000000  20008000  20008000  00020a34  2**2
                  CONTENTS
 10 .bss_RAM5     00000000  2000c000  2000c000  00020a34  2**2
                  CONTENTS
 11 .init_array   00000004  1a007ac8  1a007ac8  00017ac8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .ARM.exidx    00000008  1a007acc  1a007acc  00017acc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 13 .uninit_RESERVED 00000000  10000000  10000000  00020a34  2**2
                  CONTENTS
 14 .noinit_RAM2  00000000  10080000  10080000  00020a34  2**2
                  CONTENTS
 15 .noinit_RAM3  00000000  20000000  20000000  00020a34  2**2
                  CONTENTS
 16 .noinit_RAM4  00000000  20008000  20008000  00020a34  2**2
                  CONTENTS
 17 .noinit_RAM5  00000000  2000c000  2000c000  00020a34  2**2
                  CONTENTS
 18 .noinit       00000000  10000b08  10000b08  00020a34  2**2
                  CONTENTS
 19 .debug_info   0001c2a9  00000000  00000000  00020a34  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_abbrev 00003d3d  00000000  00000000  0003ccdd  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_aranges 00000960  00000000  00000000  00040a1a  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_ranges 00000910  00000000  00000000  0004137a  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_macro  0000c73b  00000000  00000000  00041c8a  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_line   0000c894  00000000  00000000  0004e3c5  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .debug_str    0002690a  00000000  00000000  0005ac59  2**0
                  CONTENTS, READONLY, DEBUGGING
 26 .comment      0000007f  00000000  00000000  00081563  2**0
                  CONTENTS, READONLY
 27 .ARM.attributes 00000037  00000000  00000000  000815e2  2**0
                  CONTENTS, READONLY
 28 .debug_frame  00002714  00000000  00000000  0008161c  2**2
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_loc    0000662d  00000000  00000000  00083d30  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
1a000000 l    d  .text	00000000 .text
10000000 l    d  .data	00000000 .data
10080000 l    d  .data_RAM2	00000000 .data_RAM2
20000000 l    d  .data_RAM3	00000000 .data_RAM3
20008000 l    d  .data_RAM4	00000000 .data_RAM4
2000c000 l    d  .data_RAM5	00000000 .data_RAM5
10000a38 l    d  .bss	00000000 .bss
10080000 l    d  .bss_RAM2	00000000 .bss_RAM2
20000000 l    d  .bss_RAM3	00000000 .bss_RAM3
20008000 l    d  .bss_RAM4	00000000 .bss_RAM4
2000c000 l    d  .bss_RAM5	00000000 .bss_RAM5
1a007ac8 l    d  .init_array	00000000 .init_array
1a007acc l    d  .ARM.exidx	00000000 .ARM.exidx
10000000 l    d  .uninit_RESERVED	00000000 .uninit_RESERVED
10080000 l    d  .noinit_RAM2	00000000 .noinit_RAM2
20000000 l    d  .noinit_RAM3	00000000 .noinit_RAM3
20008000 l    d  .noinit_RAM4	00000000 .noinit_RAM4
2000c000 l    d  .noinit_RAM5	00000000 .noinit_RAM5
10000b08 l    d  .noinit	00000000 .noinit
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 armv7m_startup.c
00000000 l    df *ABS*	00000000 vendor_interrupt.c
00000000 l    df *ABS*	00000000 crp.c
00000000 l    df *ABS*	00000000 TP_PdM_10Ch.c
00000000 l    df *ABS*	00000000 keysMef.c
10000a38 l     O .bss	00000004 bKEY_ABA_LONG.13466
10000a3c l     O .bss	00000004 bKEY_ARR_LONG.13467
10000a40 l     O .bss	0000003c teclas
10000000 l     O .data	00000004 nKEYS
00000000 l    df *ABS*	00000000 system.c
10000a7c l     O .bss	00000004 heap_end.5778
00000000 l    df *ABS*	00000000 board.c
1a000794 l     F .text	00000044 Board_LED_Init
1a0007d8 l     F .text	00000040 Board_TEC_Init
1a000818 l     F .text	00000040 Board_GPIO_Init
1a000858 l     F .text	00000030 Board_ADC_Init
1a000888 l     F .text	00000038 Board_SPI_Init
1a0008c0 l     F .text	00000024 Board_I2C_Init
1a007594 l     O .text	00000008 GpioButtons
1a00759c l     O .text	0000000c GpioLeds
1a0075a8 l     O .text	00000012 GpioPorts
00000000 l    df *ABS*	00000000 board_sysinit.c
1a0075c0 l     O .text	00000004 InitClkStates
1a0075c4 l     O .text	00000074 pinmuxing
00000000 l    df *ABS*	00000000 uart_18xx_43xx.c
1a000a30 l     F .text	0000002c Chip_UART_GetIndex
1a007638 l     O .text	00000008 UART_BClock
1a007640 l     O .text	00000008 UART_PClock
00000000 l    df *ABS*	00000000 adc_18xx_43xx.c
1a000b98 l     F .text	00000014 Chip_ADC_GetClockIndex
1a000bac l     F .text	00000032 getClkDiv
00000000 l    df *ABS*	00000000 chip_18xx_43xx.c
00000000 l    df *ABS*	00000000 clock_18xx_43xx.c
1a000c74 l     F .text	000000a4 pll_calc_divs
1a000d18 l     F .text	0000010c pll_get_frac
1a000e24 l     F .text	0000004c Chip_Clock_FindBaseClock
1a001098 l     F .text	00000022 Chip_Clock_GetDivRate
10000a80 l     O .bss	00000008 audio_usb_pll_freq
1a007654 l     O .text	0000006c periph_to_base
00000000 l    df *ABS*	00000000 sysinit_18xx_43xx.c
1a0076c0 l     O .text	00000048 InitClkStates
00000000 l    df *ABS*	00000000 gpio_18xx_43xx.c
00000000 l    df *ABS*	00000000 ssp_18xx_43xx.c
1a00135c l     F .text	00000014 Chip_SSP_GetClockIndex
1a001370 l     F .text	00000018 Chip_SSP_GetPeriphClockIndex
00000000 l    df *ABS*	00000000 i2c_18xx_43xx.c
10000004 l     O .data	00000038 i2c
00000000 l    df *ABS*	00000000 sysinit.c
00000000 l    df *ABS*	00000000 sapi_cyclesCounter.c
1000003c l     O .data	00000004 ClockSpeed
00000000 l    df *ABS*	00000000 sapi_tick.c
10000a88 l     O .bss	00000004 callBackFuncParams
10000a90 l     O .bss	00000008 tickCounter
10000a98 l     O .bss	00000004 tickHookFunction
00000000 l    df *ABS*	00000000 sapi_gpio.c
1a0015b4 l     F .text	00000034 gpioObtainPinInit
00000000 l    df *ABS*	00000000 sapi_usb_device.c
10000a9c l     O .bss	00000004 g_hUsb
00000000 l    df *ABS*	00000000 sapi_board.c
00000000 l    df *ABS*	00000000 sapi_delay.c
00000000 l    df *ABS*	00000000 sapi_ultrasonic_hcsr04.c
1a001970 l     F .text	00000010 clearInterrupt
1a001980 l     F .text	0000005c serveInterrupt
10000040 l     O .data	00000048 ultrasonicSensors
1a007840 l     O .text	00000003 ultrasonicSensorsIrqMap
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 lib_a-memcpy.o
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 vfprintf.c
1a0042dc l     F .text	00000084 __sbprintf
1a007888 l     O .text	00000010 blanks.8605
1a007898 l     O .text	00000010 zeroes.8606
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
1a00442c l     F .text	00000124 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
1a005520 l     F .text	00000050 std
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lock.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 lib_a-memchr.o
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 mprec.c
1a0079a8 l     O .text	0000000c p05.7367
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_frexp.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 vfprintf.c
1a006e74 l     F .text	00000076 __sprint_r.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
10000090 l     O .data	00000428 impure_data
00000000 l    df *ABS*	00000000 
1a007acc l       .init_array	00000000 __init_array_end
1a007ac8 l       .bss_RAM5	00000000 __preinit_array_end
1a007ac8 l       .init_array	00000000 __init_array_start
1a007ac8 l       .bss_RAM5	00000000 __preinit_array_start
1a0073b0 g     F .text	0000002c .hidden __aeabi_dcmpun
1a000ebc g     F .text	0000001c Chip_Clock_GetDividerSource
1a0006e0 g     F .text	00000012 _isatty_r
1a007374 g     F .text	00000012 .hidden __aeabi_dcmple
1a0026d0 g     F .text	0000009c _puts_r
1a0001ba  w    F .text	00000002 TIMER2_IRQHandler
1a0072b0 g     F .text	0000007a .hidden __cmpdf2
1a0006f2 g     F .text	0000000a _lseek_r
1a000184  w    F .text	00000002 DebugMon_Handler
1a0001ba  w    F .text	00000002 RIT_IRQHandler
1a080000 g       *ABS*	00000000 __top_MFlashA512
1a0072b0 g     F .text	0000007a .hidden __eqdf2
1a0001ba  w    F .text	00000002 ADCHS_IRQHandler
1a000114 g       .text	00000000 __section_table_start
1a0001ba  w    F .text	00000002 FLASH_EEPROM_IRQHandler
1a001d18 g     F .text	0000005a .hidden __floatdidf
1a0001ba  w    F .text	00000002 I2C0_IRQHandler
1a0026a8 g     F .text	00000028 printf
1a000976 g     F .text	00000008 __stdio_init
10000ae4 g     O .bss	00000001 __lock___atexit_recursive_mutex
1a007234 g     F .text	00000050 _wcrtomb_r
1a006de8 g     F .text	00000020 __sseek
1a00557c g     F .text	00000058 __sinit
1a007184 g     F .text	000000b0 __swbuf_r
1a00017a  w    F .text	00000002 HardFault_Handler
1a000000 g       *ABS*	00000000 __vectors_start__
1a000c52 g     F .text	0000000c Chip_ADC_SetResolution
1a0063a4 g     F .text	0000000c __malloc_unlock
1a001580 g     F .text	00000034 SysTick_Handler
10000ae8 g     O .bss	00000001 __lock___arc4random_mutex
1a00063c  w    F .text	00000002 initialise_monitor_handles
1a0001ba  w    F .text	00000002 SDIO_IRQHandler
1a00091c g     F .text	0000001c Board_UARTGetChar
1a0001ba  w    F .text	00000002 ATIMER_IRQHandler
1a0062d0 g     F .text	000000c6 memmove
1a000186  w    F .text	00000002 PendSV_Handler
1a000178  w    F .text	00000002 NMI_Handler
1a0063b0 g     F .text	0000004c _Balloc
1a007ad4 g       .ARM.exidx	00000000 __exidx_end
1a000150 g       .text	00000000 __data_section_table_end
1a0001ba  w    F .text	00000002 I2C1_IRQHandler
1a0001ba  w    F .text	00000002 UART1_IRQHandler
1a0072a0 g     F .text	0000008a .hidden __gtdf2
1a0001ba  w    F .text	00000002 GPIO5_IRQHandler
1a0001ba  w    F .text	00000002 CAN1_IRQHandler
1a0006d6 g     F .text	0000000a _fstat_r
53ff724e g       *ABS*	00000000 __valid_user_code_checksum
1a007ad4 g       .ARM.exidx	00000000 _etext
1a00733c g     F .text	00000010 .hidden __aeabi_cdcmple
1a0001ba  w    F .text	00000002 USB1_IRQHandler
1a0001ba  w    F .text	00000002 I2S0_IRQHandler
1a0001ba  w    F .text	00000002 TIMER3_IRQHandler
1a00113a g     F .text	0000000c Chip_Clock_GetBaseClocktHz
1a0001ba  w    F .text	00000002 UART0_IRQHandler
1a0001a8 g     F .text	00000012 bss_init
1a0024e0 g     F .text	00000134 memcpy
1a00732c g     F .text	00000020 .hidden __aeabi_cdrcmple
1a0001ba  w    F .text	00000002 SGPIO_IRQHandler
1a005570 g     F .text	0000000c _cleanup_r
1a001ca0 g     F .text	00000022 .hidden __floatsidf
1a0072a8 g     F .text	00000082 .hidden __ltdf2
1a002198 g     F .text	00000000 .hidden __aeabi_uldivmod
10000b08 g       .noinit	00000000 _noinit
1a00276c g     F .text	00000010 puts
10000ad4 g     O .bss	00000004 SystemCoreClock
1a000a5c g     F .text	00000054 Chip_UART_Init
1a0001ba  w    F .text	00000002 ADC0_IRQHandler
1a0078e0 g     O .text	000000c8 __mprec_tens
1a000180  w    F .text	00000002 UsageFault_Handler
1a000494 g     F .text	000001a8 srvKeysMef
1a0011b8 g     F .text	0000004c Chip_Clock_GetRate
1a0001ba  w    F .text	00000002 GPIO6_IRQHandler
10000ad0 g     O .bss	00000004 __malloc_top_pad
1a0009b8 g     F .text	0000006c Board_SetupClocking
20008000 g       *ABS*	00000000 __top_RamAHB32
1a001c80 g     F .text	0000001e .hidden __aeabi_ui2d
1a005bc4 g     F .text	0000001c _localeconv_r
1a006530 g     F .text	00000012 __i2b
1a005874 g     F .text	000002fc __sfvwrite_r
1a0021c8 g     F .text	000002cc .hidden __udivmoddi4
1a0019fc g     F .text	00000000 .hidden __aeabi_drsub
1a000774 g     F .text	00000020 _sbrk_r
1a007590 g     O .text	00000004 ExtRateIn
1a0001ba  w    F .text	00000002 IntDefaultHandler
1a000300 g       .text	00000000 __CRP_WORD_END__
1a0006fc g     F .text	0000004e _read_r
1a007360 g     F .text	00000012 .hidden __aeabi_dcmplt
1a006f68 g     F .text	000000d0 _fclose_r
1a0019e6 g     F .text	0000000a GPIO1_IRQHandler
10000ac8 g     O .bss	00000004 __malloc_max_sbrked_mem
1a001cc4 g     F .text	00000042 .hidden __extendsfdf2
1a001fc8 g     F .text	000001d0 .hidden __aeabi_ddiv
1a0001ba  w    F .text	00000002 SSP0_IRQHandler
1a001a08 g     F .text	00000276 .hidden __adddf3
1a007acc g       .ARM.exidx	00000000 __exidx_start
10000aec g     O .bss	00000001 __lock___env_recursive_mutex
1a001d74 g     F .text	00000254 .hidden __aeabi_dmul
1a0002fc g     O .text	00000004 CRP_WORD
10000af0 g     O .bss	00000001 __lock___sinit_recursive_mutex
1a0069c4 g     F .text	0000035c _realloc_r
1a002498 g     F .text	00000048 __libc_init_array
1a0070d8 g     F .text	00000064 _fputwc_r
1a0078b8 g     O .text	00000028 __mprec_bigtens
1a001c80 g     F .text	0000001e .hidden __floatunsidf
1a0001ba  w    F .text	00000002 ADC1_IRQHandler
1a0067dc g     F .text	00000036 __mcmp
1a000938 g     F .text	0000002c Board_Init
1a0006ca  w    F .text	00000002 _init
1a000114 g       .text	00000000 __data_section_table
1a0001ba  w    F .text	00000002 RTC_IRQHandler
10000b08 g       .bss	00000000 _ebss
1a0001ba  w    F .text	00000002 TIMER0_IRQHandler
1a000640 g     F .text	00000088 Reset_Handler
1a001504 g     F .text	0000007c tickInit
20010000 g       *ABS*	00000000 __top_RamAHB_ETB16
1a0001ba  w    F .text	00000002 SPI_IRQHandler
1a006490 g     F .text	0000003e __hi0bits
1a001454 g     F .text	00000038 Chip_I2C_SetClockRate
1a0073dc g     F .text	0000004e .hidden __fixdfsi
1a0001ba  w    F .text	00000002 LCD_IRQHandler
1a000e70 g     F .text	0000004c Chip_Clock_EnableCrystal
10000af4 g     O .bss	00000001 __lock___malloc_recursive_mutex
10008000 g       *ABS*	00000000 __top_RamLoc32
1a001a08 g     F .text	00000276 .hidden __aeabi_dadd
1a00018a g     F .text	0000001e data_init
1a0072a8 g     F .text	00000082 .hidden __ledf2
1a006690 g     F .text	000000a0 __pow5mult
1a001d08 g     F .text	0000006a .hidden __aeabi_ul2d
1a0001ba  w    F .text	00000002 TIMER1_IRQHandler
1a001430 g     F .text	00000024 Chip_I2C_Init
1a005bec g     F .text	00000002 __retarget_lock_release_recursive
1a0001ba  w    F .text	00000002 UART2_IRQHandler
1a00102c g     F .text	0000006c Chip_Clock_GetMainPLLHz
1a007708 g     O .text	00000136 gpioPinsInit
1a001388 g     F .text	00000012 Chip_SSP_SetClockRate
1a00739c g     F .text	00000012 .hidden __aeabi_dcmpgt
1a0019f0 g     F .text	0000000a GPIO2_IRQHandler
1a0055d4 g     F .text	0000000c __sfp_lock_acquire
1a006230 g     F .text	00000000 memchr
1a00568c g     F .text	000001e8 _free_r
1a001114 g     F .text	00000026 Chip_Clock_GetBaseClock
1a00713c g     F .text	0000001c __locale_mb_cur_max
1a007388 g     F .text	00000012 .hidden __aeabi_dcmpge
10000a38 g       .bss	00000000 _bss
1a000c20 g     F .text	00000032 Chip_ADC_SetSampleRate
1a001a04 g     F .text	0000027a .hidden __aeabi_dsub
100008c0 g     O .data	00000004 __malloc_sbrk_base
1a001d08 g     F .text	0000006a .hidden __floatundidf
1a006730 g     F .text	000000ac __lshift
1a0001ba  w    F .text	00000002 I2S1_IRQHandler
1a00139a g     F .text	0000003e Chip_SSP_SetBitRate
1a001358 g     F .text	00000002 Chip_GPIO_Init
1a0075bc g     O .text	00000004 OscRateIn
1a006544 g     F .text	0000014a __multiply
10000b08 g       .noinit	00000000 _end_noinit
10008000 g       *ABS*	00000000 _vStackTop
1a006e10 g     F .text	00000064 strncpy
10000aa0 g     O .bss	00000028 __malloc_current_mallinfo
1a006900 g     F .text	000000c2 __d2b
1a0001ba  w    F .text	00000002 SSP1_IRQHandler
1a000178 g       .text	00000000 __bss_section_table_end
1a0006cc g     F .text	0000000a _close_r
1a001ca0 g     F .text	00000022 .hidden __aeabi_i2d
1a0015e8 g     F .text	00000194 gpioInit
1a005be4 g     F .text	00000002 __retarget_lock_close_recursive
1a004360 g     F .text	000000cc __swsetup_r
1a002494  w    F .text	00000002 .hidden __aeabi_ldiv0
1a001fc8 g     F .text	000001d0 .hidden __divdf3
100004b8 g     O .data	00000408 __malloc_av_
1a001d74 g     F .text	00000254 .hidden __muldf3
1a006d88 g     F .text	00000022 __sread
1a001828 g     F .text	0000001c USB0_IRQHandler
1a0001ba  w    F .text	00000002 GPIO3_IRQHandler
1a006398 g     F .text	0000000c __malloc_lock
1a000908 g     F .text	00000014 Board_UARTPutChar
1a0001ba  w    F .text	00000002 SCT_IRQHandler
1a0054c4 g     F .text	0000005a _fflush_r
1a006f00 g     F .text	00000068 _calloc_r
1a000ed8 g     F .text	0000001c Chip_Clock_GetDividerDivisor
1a0002fc g       .text	00000000 __CRP_WORD_START__
1a005be8 g     F .text	00000002 __retarget_lock_acquire_recursive
1a002614 g     F .text	00000094 memset
1a00017c  w    F .text	00000002 MemManage_Handler
1a000300 g     F .text	0000002c main
10000acc g     O .bss	00000004 __malloc_max_total_mem
1a005be0 g     F .text	00000002 __retarget_lock_init_recursive
1a0001ba  w    F .text	00000002 WDT_IRQHandler
2000c000 g       *ABS*	00000000 __top_RamAHB16
1008a000 g       *ABS*	00000000 __top_RamLoc40
1a000182  w    F .text	00000002 SVC_Handler
1a006e08 g     F .text	00000008 __sclose
1a004550 g     F .text	00000e20 _dtoa_r
1a005ce0 g     F .text	00000548 _malloc_r
1a007284 g     F .text	0000001a __ascii_wctomb
1a001d18 g     F .text	0000005a .hidden __aeabi_l2d
1a0001ba  w    F .text	00000002 GPIO7_IRQHandler
1a001148 g     F .text	0000003c Chip_Clock_EnableOpts
1a00096e g     F .text	00000008 __stdio_getchar
1a00032c g     F .text	00000054 initKeysMef
1a0055ec g     F .text	000000a0 _malloc_trim_r
1a000ef4 g     F .text	000000b8 Chip_Clock_GetClockInputHz
1a000fac g     F .text	00000080 Chip_Clock_CalcMainPLLValue
1a00148c g     F .text	00000038 SystemInit
1a0001ba  w    F .text	00000002 SPIFI_IRQHandler
1a001938 g     F .text	00000038 delay
1a0001ba  w    F .text	00000002 QEI_IRQHandler
1a000150 g       .text	00000000 __bss_section_table
1a0072b0 g     F .text	0000007a .hidden __nedf2
1a00177c g     F .text	00000056 gpioWrite
1a0006c8  w    F .text	00000002 _fini
1a000be0 g     F .text	00000040 Chip_ADC_Init
10000ae0 g     O .bss	00000004 g_pUsbApi
1a000980 g     F .text	00000038 Board_SetupMuxing
1a000ab0 g     F .text	000000e8 Chip_UART_SetBaudFDR
1a0014e0 g     F .text	0000000c tickRead
1a00074a g     F .text	00000028 _write_r
10000ad8 g     O .bss	00000008 tickRateMS
1a0001ba  w    F .text	00000002 ETH_IRQHandler
10000088 g     O .data	00000004 _impure_ptr
1a005370 g     F .text	00000154 __sflush_r
10000000 g       .uninit_RESERVED	00000000 _end_uninit_RESERVED
1a0001ba  w    F .text	00000002 CAN0_IRQHandler
1a007158 g     F .text	0000002a __ascii_mbtowc
10000000 g       .data	00000000 _data
10000b08 g       .bss	00000000 _pvHeapStart
1a000178 g       .text	00000000 __section_table_end
1a0013d8 g     F .text	00000038 Chip_SSP_Init
1a0001ba  w    F .text	00000002 GINT0_IRQHandler
1a005bf0 g     F .text	0000005c __swhatbuf_r
1a0001ba  w    F .text	00000002 DAC_IRQHandler
1a0008e4 g     F .text	00000024 Board_Debug_Init
1a00734c g     F .text	00000012 .hidden __aeabi_dcmpeq
1a000964 g     F .text	0000000a __stdio_putchar
10000a34 g       .data	00000000 _edata
1a001410 g     F .text	00000020 Chip_I2C_EventHandler
1a0001ba  w    F .text	00000002 M0SUB_IRQHandler
1a007038 g     F .text	0000009e __fputwc
10000af8 g     O .bss	00000001 __lock___at_quick_exit_mutex
1a001204 g     F .text	00000154 Chip_SetupCoreClock
1a006dac g     F .text	0000003c __swrite
1a0019dc g     F .text	0000000a GPIO0_IRQHandler
100008c4 g     O .data	00000004 __malloc_trim_threshold
1a000000 g     O .text	00000040 g_pfnVectors
1a005b70 g     F .text	00000052 _fwalk_reent
1a000c60 g     F .text	00000014 SystemCoreClockUpdate
1a006814 g     F .text	000000ec __mdiff
1a0073dc g     F .text	0000004e .hidden __aeabi_d2iz
1a0001ba  w    F .text	00000002 DMA_IRQHandler
1a0001ba  w    F .text	00000002 EVRT_IRQHandler
1b080000 g       *ABS*	00000000 __top_MFlashB512
1a0055e0 g     F .text	0000000c __sfp_lock_release
1a000380 g     F .text	00000114 updKeysMef
1a0079c4 g     O .text	00000101 _ctype_
1a002494  w    F .text	00000002 .hidden __aeabi_idiv0
1a0073b0 g     F .text	0000002c .hidden __unorddf2
1a00017e  w    F .text	00000002 BusFault_Handler
10000afc g     O .bss	00000001 __lock___dd_hash_mutex
1a005c4c g     F .text	00000094 __smakebuf_r
10000b00 g     O .bss	00000001 __lock___tz_mutex
1a002780 g     F .text	000000dc strlen
1a001184 g     F .text	00000034 Chip_Clock_Enable
1a00733c g     F .text	00000010 .hidden __aeabi_cdcmpeq
1a0072a0 g     F .text	0000008a .hidden __gedf2
1a0001ba  w    F .text	00000002 UART3_IRQHandler
1a0001ba  w    F .text	00000002 MCPWM_IRQHandler
1a006eec g     F .text	00000014 __sprint_r
1a0001ba  w    F .text	00000002 M0APP_IRQHandler
1a0017d2 g     F .text	00000054 gpioRead
1a001cc4 g     F .text	00000042 .hidden __aeabi_f2d
1a001844 g     F .text	000000f4 boardInit
1a000040 g     O .text	000000d4 g_pfnVendorVectors
1a001a04 g     F .text	0000027a .hidden __subdf3
1a002860 g     F .text	00001a7c _vfprintf_r
1a0001ba  w    F .text	00000002 GINT1_IRQHandler
1a0064d0 g     F .text	0000005e __lo0bits
1a0014ec g     F .text	00000018 tickPowerSet
1a006d20 g     F .text	00000068 frexp
100008c8 g     O .data	0000016c __global_locale
1a0010bc g     F .text	00000058 Chip_Clock_SetBaseClock
1a0014c4 g     F .text	0000001c cyclesCounterInit
1a0001ba  w    F .text	00000002 GPIO4_IRQHandler
10000b04 g     O .bss	00000001 __lock___sfp_recursive_mutex
1a000a24 g     F .text	0000000c Board_SystemInit
1a006410 g     F .text	00000080 __multadd
1a0063fc g     F .text	00000012 _Bfree



Disassembly of section .text:

1a000000 <g_pfnVectors>:
1a000000:	00 80 00 10 41 06 00 1a 79 01 00 1a 7b 01 00 1a     ....A...y...{...
1a000010:	7d 01 00 1a 7f 01 00 1a 81 01 00 1a 4e 72 ff 53     }...........Nr.S
	...
1a00002c:	83 01 00 1a 85 01 00 1a 00 00 00 00 87 01 00 1a     ................
1a00003c:	81 15 00 1a                                         ....

1a000040 <g_pfnVendorVectors>:
1a000040:	bb 01 00 1a bb 01 00 1a bb 01 00 1a 00 00 00 00     ................
1a000050:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000060:	29 18 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     )...............
1a000070:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000080:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000090:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000a0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000b0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000c0:	dd 19 00 1a e7 19 00 1a f1 19 00 1a bb 01 00 1a     ................
1a0000d0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000e0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000f0:	00 00 00 00 bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000100:	00 00 00 00 bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000110:	bb 01 00 1a                                         ....

1a000114 <__data_section_table>:
1a000114:	1a007ad4 	.word	0x1a007ad4
1a000118:	10000000 	.word	0x10000000
1a00011c:	00000a34 	.word	0x00000a34
1a000120:	1a007ad4 	.word	0x1a007ad4
1a000124:	10080000 	.word	0x10080000
1a000128:	00000000 	.word	0x00000000
1a00012c:	1a007ad4 	.word	0x1a007ad4
1a000130:	20000000 	.word	0x20000000
1a000134:	00000000 	.word	0x00000000
1a000138:	1a007ad4 	.word	0x1a007ad4
1a00013c:	20008000 	.word	0x20008000
1a000140:	00000000 	.word	0x00000000
1a000144:	1a007ad4 	.word	0x1a007ad4
1a000148:	2000c000 	.word	0x2000c000
1a00014c:	00000000 	.word	0x00000000

1a000150 <__bss_section_table>:
1a000150:	10000a38 	.word	0x10000a38
1a000154:	000000d0 	.word	0x000000d0
1a000158:	10080000 	.word	0x10080000
1a00015c:	00000000 	.word	0x00000000
1a000160:	20000000 	.word	0x20000000
1a000164:	00000000 	.word	0x00000000
1a000168:	20008000 	.word	0x20008000
1a00016c:	00000000 	.word	0x00000000
1a000170:	2000c000 	.word	0x2000c000
1a000174:	00000000 	.word	0x00000000

1a000178 <NMI_Handler>:
        __asm__ volatile("wfi");
    }
}

__attribute__ ((section(".after_vectors")))
void NMI_Handler(void) {
1a000178:	e7fe      	b.n	1a000178 <NMI_Handler>

1a00017a <HardFault_Handler>:
    while (1) {
    }
}
__attribute__ ((section(".after_vectors")))
void HardFault_Handler(void) {
1a00017a:	e7fe      	b.n	1a00017a <HardFault_Handler>

1a00017c <MemManage_Handler>:
    while (1) {
    }
}
__attribute__ ((section(".after_vectors")))
void MemManage_Handler(void) {
1a00017c:	e7fe      	b.n	1a00017c <MemManage_Handler>

1a00017e <BusFault_Handler>:
    while (1) {
    }
}
__attribute__ ((section(".after_vectors")))
void BusFault_Handler(void) {
1a00017e:	e7fe      	b.n	1a00017e <BusFault_Handler>

1a000180 <UsageFault_Handler>:
    while (1) {
    }
}
__attribute__ ((section(".after_vectors")))
void UsageFault_Handler(void) {
1a000180:	e7fe      	b.n	1a000180 <UsageFault_Handler>

1a000182 <SVC_Handler>:
    while (1) {
    }
}
__attribute__ ((section(".after_vectors")))
void SVC_Handler(void) {
1a000182:	e7fe      	b.n	1a000182 <SVC_Handler>

1a000184 <DebugMon_Handler>:
    while (1) {
    }
}
__attribute__ ((section(".after_vectors")))
void DebugMon_Handler(void) {
1a000184:	e7fe      	b.n	1a000184 <DebugMon_Handler>

1a000186 <PendSV_Handler>:
    while (1) {
    }
}
__attribute__ ((section(".after_vectors")))
void PendSV_Handler(void) {
1a000186:	e7fe      	b.n	1a000186 <PendSV_Handler>
    while (1) {
    }
}
__attribute__ ((section(".after_vectors")))
void SysTick_Handler(void) {
1a000188:	e7fe      	b.n	1a000188 <PendSV_Handler+0x2>

1a00018a <data_init>:
    for (loop = 0; loop < len; loop = loop + 4)
1a00018a:	2300      	movs	r3, #0
1a00018c:	4293      	cmp	r3, r2
1a00018e:	d20a      	bcs.n	1a0001a6 <data_init+0x1c>
void data_init(unsigned int romstart, unsigned int start, unsigned int len) {
1a000190:	b410      	push	{r4}
        *pulDest++ = *pulSrc++;
1a000192:	6804      	ldr	r4, [r0, #0]
1a000194:	600c      	str	r4, [r1, #0]
    for (loop = 0; loop < len; loop = loop + 4)
1a000196:	3304      	adds	r3, #4
        *pulDest++ = *pulSrc++;
1a000198:	3004      	adds	r0, #4
1a00019a:	3104      	adds	r1, #4
    for (loop = 0; loop < len; loop = loop + 4)
1a00019c:	4293      	cmp	r3, r2
1a00019e:	d3f8      	bcc.n	1a000192 <data_init+0x8>
}
1a0001a0:	f85d 4b04 	ldr.w	r4, [sp], #4
1a0001a4:	4770      	bx	lr
1a0001a6:	4770      	bx	lr

1a0001a8 <bss_init>:
    for (loop = 0; loop < len; loop = loop + 4)
1a0001a8:	2300      	movs	r3, #0
1a0001aa:	e003      	b.n	1a0001b4 <bss_init+0xc>
        *pulDest++ = 0;
1a0001ac:	2200      	movs	r2, #0
1a0001ae:	6002      	str	r2, [r0, #0]
    for (loop = 0; loop < len; loop = loop + 4)
1a0001b0:	3304      	adds	r3, #4
        *pulDest++ = 0;
1a0001b2:	3004      	adds	r0, #4
    for (loop = 0; loop < len; loop = loop + 4)
1a0001b4:	428b      	cmp	r3, r1
1a0001b6:	d3f9      	bcc.n	1a0001ac <bss_init+0x4>
}
1a0001b8:	4770      	bx	lr

1a0001ba <ADC0_IRQHandler>:
    CAN0_IRQHandler,          // 67
    QEI_IRQHandler,           // 68
};

__attribute__ ((section(".after_vectors")))
void IntDefaultHandler(void) {
1a0001ba:	e7fe      	b.n	1a0001ba <ADC0_IRQHandler>
1a0001bc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001c0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001c4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001c8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001cc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001d0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001d4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001d8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001dc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001ec:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001fc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000200:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000204:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000208:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00020c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000210:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000214:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000218:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00021c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000220:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000224:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000228:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00022c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000230:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000234:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000238:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00023c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000240:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000244:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000248:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00024c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000250:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000254:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000258:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00025c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000260:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000264:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000268:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00026c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000270:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000274:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000278:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00027c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000280:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000284:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000288:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00028c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000290:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000294:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000298:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00029c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ac:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002bc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002cc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002dc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ec:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

1a0002fc <CRP_WORD>:
1a0002fc:	ffff ffff                                   ....

1a000300 <main>:
//	void srvKeysMef( void );  		//servicio de la Keys-Mef

/*==================[start of original code]=================================*/

/* FUNCION PRINCIPAL, PUNTO DE ENTRADA AL PROGRAMA LUEGO DE RESET. */
int main(void){
1a000300:	b500      	push	{lr}
1a000302:	b083      	sub	sp, #12

   /* ------------- INICIALIZACIONES ------------- */

   /* Inicializar la placa */
   boardConfig();
1a000304:	f001 fa9e 	bl	1a001844 <boardInit>

   /* Puerto serie OK? */
   printf( "KeysMef Pablo JC Alonso Castillo 2019\n" );
1a000308:	4807      	ldr	r0, [pc, #28]	; (1a000328 <main+0x28>)
1a00030a:	f002 fa2f 	bl	1a00276c <puts>

   /* Inicializacion de la Keys-Mef */
   initKeysMef( 4, TEC1, TEC2, TEC3, TEC4 );
1a00030e:	2327      	movs	r3, #39	; 0x27
1a000310:	9300      	str	r3, [sp, #0]
1a000312:	2326      	movs	r3, #38	; 0x26
1a000314:	2225      	movs	r2, #37	; 0x25
1a000316:	2124      	movs	r1, #36	; 0x24
1a000318:	2004      	movs	r0, #4
1a00031a:	f000 f807 	bl	1a00032c <initKeysMef>

   /* ------------- REPETIR POR SIEMPRE ------------- */
   while(1) {

	   updKeysMef();  //update de la Keys-Mef
1a00031e:	f000 f82f 	bl	1a000380 <updKeysMef>

	   srvKeysMef();  //servicio de la Keys-Mef
1a000322:	f000 f8b7 	bl	1a000494 <srvKeysMef>
1a000326:	e7fa      	b.n	1a00031e <main+0x1e>
1a000328:	1a00742c 	.word	0x1a00742c

1a00032c <initKeysMef>:
 * Setea el estado incial del arreglo de todas las teclas y los puertos asociados
 * el arreglo contiene:  índice, puerto (tecla), estado y evento
 * Argumentos: GPIO's
 * salida: void
 /*------------------------------------------------------------------------------------------------------------------------------------------------------------- */
void initKeysMef( int nArgs, ... ){
1a00032c:	b40f      	push	{r0, r1, r2, r3}
1a00032e:	b570      	push	{r4, r5, r6, lr}
1a000330:	b082      	sub	sp, #8
1a000332:	9e06      	ldr	r6, [sp, #24]

	if ( nArgs > KEYSMAX ) nArgs = KEYSMAX;  //APB sencillo, podria complicarlo un poco pero ahora no. . .
1a000334:	2e14      	cmp	r6, #20
1a000336:	dd00      	ble.n	1a00033a <initKeysMef+0xe>
1a000338:	2614      	movs	r6, #20

	va_list ap;

	va_start(ap, nArgs);
1a00033a:	ab07      	add	r3, sp, #28
1a00033c:	9301      	str	r3, [sp, #4]

	for(uint8_t i = 0; i < nArgs; i++){
1a00033e:	2400      	movs	r4, #0
1a000340:	e010      	b.n	1a000364 <initKeysMef+0x38>
		teclas[i].tecla =  va_arg(ap, int); 		//Si quiero castear a gpioMap_t lo permite revirtiendo a int y luego se cuelga :-(
1a000342:	9b01      	ldr	r3, [sp, #4]
1a000344:	1d1a      	adds	r2, r3, #4
1a000346:	9201      	str	r2, [sp, #4]
1a000348:	7818      	ldrb	r0, [r3, #0]
1a00034a:	4a0b      	ldr	r2, [pc, #44]	; (1a000378 <initKeysMef+0x4c>)
1a00034c:	eb04 0344 	add.w	r3, r4, r4, lsl #1
1a000350:	18d5      	adds	r5, r2, r3
1a000352:	54d0      	strb	r0, [r2, r3]
		gpioConfig( teclas[i].tecla, GPIO_INPUT );  //supongo que podria ser también GPIO_INPUT_PULLUP. . . hay que ver que puertos lo toleran. . .
1a000354:	2100      	movs	r1, #0
1a000356:	f001 f947 	bl	1a0015e8 <gpioInit>
		teclas[i].estado  = KEY_ARR_LONG;			//También podría en teoría ser KEY_ABA_LONG. . .
1a00035a:	2304      	movs	r3, #4
1a00035c:	706b      	strb	r3, [r5, #1]
		teclas[i].evento  = EVENT_KEY_NULL;			//No hay eventos al inicializar
1a00035e:	70ab      	strb	r3, [r5, #2]
	for(uint8_t i = 0; i < nArgs; i++){
1a000360:	3401      	adds	r4, #1
1a000362:	b2e4      	uxtb	r4, r4
1a000364:	42b4      	cmp	r4, r6
1a000366:	dbec      	blt.n	1a000342 <initKeysMef+0x16>
	}

	va_end(ap);

	nKEYS = nArgs;	//Recupero el verdadero número de teclas a loopear.
1a000368:	4b04      	ldr	r3, [pc, #16]	; (1a00037c <initKeysMef+0x50>)
1a00036a:	601e      	str	r6, [r3, #0]
}
1a00036c:	b002      	add	sp, #8
1a00036e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
1a000372:	b004      	add	sp, #16
1a000374:	4770      	bx	lr
1a000376:	bf00      	nop
1a000378:	10000a40 	.word	0x10000a40
1a00037c:	10000000 	.word	0x10000000

1a000380 <updKeysMef>:
 *(+) AL evento doble click ( EVENT_KEY_2CLICK ) -como a todo doble click- hay que agarrale la mano con el timming, pero anda Joya!  ;-)
 */
/*------------------------------------------------------------------------------------------------------------------------------------------------------------- */


void updKeysMef(){
1a000380:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

	keyState_t prevState, nextState;	//Estado previo, Estado siguiente
	keyTrans_t transState;				//Transicion
	keyEvent_t nextEvent;				//Evento

	for (uint8_t i = 0; i < nKEYS; i++) {
1a000382:	2400      	movs	r4, #0
1a000384:	e00d      	b.n	1a0003a2 <updKeysMef+0x22>

		//El estado previo:
		prevState = teclas[i].estado;

		//La transición entre estados: teclas con pull-ups => pulsada = TRANS_KEY_BOTT, no pulsada = TRANS_KEY_TOP
		if ( gpioRead( teclas[i].tecla ) ) { transState = TRANS_KEY_TOP; } else { transState = TRANS_KEY_BOTT; };
1a000386:	2301      	movs	r3, #1
1a000388:	e01b      	b.n	1a0003c2 <updKeysMef+0x42>
		nextEvent = EVENT_KEY_NULL;

		//El siguiente estado
		switch ( prevState ){
			case KEY_ARR_LONG:
				switch ( transState ){
1a00038a:	2b00      	cmp	r3, #0
1a00038c:	d064      	beq.n	1a000458 <updKeysMef+0xd8>
1a00038e:	bb6b      	cbnz	r3, 1a0003ec <updKeysMef+0x6c>
		nextEvent = EVENT_KEY_NULL;
1a000390:	2204      	movs	r2, #4
				  case TRANS_KEY_TOP : nextState = KEY_ARR_LONG;    break;
				  case TRANS_KEY_BOTT: nextState = KEY_FALL;
	  	  	  	  	 	 	 	 	   nextEvent = EVENT_KEY_2CLICK;break;	//EVENT_KEY_2CLICK
			} break;
	    }
	    teclas[i].estado = nextState;
1a000392:	eb05 0545 	add.w	r5, r5, r5, lsl #1
1a000396:	4b3d      	ldr	r3, [pc, #244]	; (1a00048c <updKeysMef+0x10c>)
1a000398:	441d      	add	r5, r3
1a00039a:	706f      	strb	r7, [r5, #1]
	    teclas[i].evento = nextEvent;
1a00039c:	70aa      	strb	r2, [r5, #2]
	for (uint8_t i = 0; i < nKEYS; i++) {
1a00039e:	3401      	adds	r4, #1
1a0003a0:	b2e4      	uxtb	r4, r4
1a0003a2:	4625      	mov	r5, r4
1a0003a4:	4b3a      	ldr	r3, [pc, #232]	; (1a000490 <updKeysMef+0x110>)
1a0003a6:	681b      	ldr	r3, [r3, #0]
1a0003a8:	429c      	cmp	r4, r3
1a0003aa:	da6d      	bge.n	1a000488 <updKeysMef+0x108>
		prevState = teclas[i].estado;
1a0003ac:	4a37      	ldr	r2, [pc, #220]	; (1a00048c <updKeysMef+0x10c>)
1a0003ae:	eb04 0344 	add.w	r3, r4, r4, lsl #1
1a0003b2:	18d1      	adds	r1, r2, r3
1a0003b4:	784e      	ldrb	r6, [r1, #1]
		if ( gpioRead( teclas[i].tecla ) ) { transState = TRANS_KEY_TOP; } else { transState = TRANS_KEY_BOTT; };
1a0003b6:	5cd0      	ldrb	r0, [r2, r3]
1a0003b8:	f001 fa0b 	bl	1a0017d2 <gpioRead>
1a0003bc:	2800      	cmp	r0, #0
1a0003be:	d0e2      	beq.n	1a000386 <updKeysMef+0x6>
1a0003c0:	2300      	movs	r3, #0
		switch ( prevState ){
1a0003c2:	2e07      	cmp	r6, #7
1a0003c4:	d846      	bhi.n	1a000454 <updKeysMef+0xd4>
1a0003c6:	a201      	add	r2, pc, #4	; (adr r2, 1a0003cc <updKeysMef+0x4c>)
1a0003c8:	f852 f026 	ldr.w	pc, [r2, r6, lsl #2]
1a0003cc:	1a0003f3 	.word	0x1a0003f3
1a0003d0:	1a00042b 	.word	0x1a00042b
1a0003d4:	1a000439 	.word	0x1a000439
1a0003d8:	1a000447 	.word	0x1a000447
1a0003dc:	1a00038b 	.word	0x1a00038b
1a0003e0:	1a000401 	.word	0x1a000401
1a0003e4:	1a00040f 	.word	0x1a00040f
1a0003e8:	1a00041d 	.word	0x1a00041d
		nextEvent = EVENT_KEY_NULL;
1a0003ec:	2204      	movs	r2, #4
				  case TRANS_KEY_BOTT: nextState = KEY_FALL;       break;
1a0003ee:	2700      	movs	r7, #0
1a0003f0:	e7cf      	b.n	1a000392 <updKeysMef+0x12>
				  switch ( transState ){
1a0003f2:	b3a3      	cbz	r3, 1a00045e <updKeysMef+0xde>
1a0003f4:	b90b      	cbnz	r3, 1a0003fa <updKeysMef+0x7a>
		nextEvent = EVENT_KEY_NULL;
1a0003f6:	2204      	movs	r2, #4
1a0003f8:	e7cb      	b.n	1a000392 <updKeysMef+0x12>
				  	  	  	  	 	   nextEvent = EVENT_KEY_DOWN; break;	//EVENT_KEY_DOWN
1a0003fa:	2201      	movs	r2, #1
				  case TRANS_KEY_BOTT: nextState = KEY_ABA_SHORT;
1a0003fc:	2705      	movs	r7, #5
				  	  	  	  	 	   nextEvent = EVENT_KEY_DOWN; break;	//EVENT_KEY_DOWN
1a0003fe:	e7c8      	b.n	1a000392 <updKeysMef+0x12>
				  switch ( transState ){
1a000400:	b383      	cbz	r3, 1a000464 <updKeysMef+0xe4>
1a000402:	b90b      	cbnz	r3, 1a000408 <updKeysMef+0x88>
		nextEvent = EVENT_KEY_NULL;
1a000404:	2204      	movs	r2, #4
1a000406:	e7c4      	b.n	1a000392 <updKeysMef+0x12>
1a000408:	2204      	movs	r2, #4
				  case TRANS_KEY_BOTT: nextState = KEY_ABA_TRANS;  break;
1a00040a:	2706      	movs	r7, #6
1a00040c:	e7c1      	b.n	1a000392 <updKeysMef+0x12>
				  switch ( transState ){
1a00040e:	b363      	cbz	r3, 1a00046a <updKeysMef+0xea>
1a000410:	b90b      	cbnz	r3, 1a000416 <updKeysMef+0x96>
		nextEvent = EVENT_KEY_NULL;
1a000412:	2204      	movs	r2, #4
1a000414:	e7bd      	b.n	1a000392 <updKeysMef+0x12>
1a000416:	2204      	movs	r2, #4
				  case TRANS_KEY_BOTT: nextState = KEY_ABA_LONG;   break;
1a000418:	2707      	movs	r7, #7
1a00041a:	e7ba      	b.n	1a000392 <updKeysMef+0x12>
				  switch ( transState ){
1a00041c:	b343      	cbz	r3, 1a000470 <updKeysMef+0xf0>
1a00041e:	b90b      	cbnz	r3, 1a000424 <updKeysMef+0xa4>
		nextEvent = EVENT_KEY_NULL;
1a000420:	2204      	movs	r2, #4
1a000422:	e7b6      	b.n	1a000392 <updKeysMef+0x12>
				  case TRANS_KEY_BOTT: nextState = KEY_ABA_LONG;   break;
1a000424:	4637      	mov	r7, r6
		nextEvent = EVENT_KEY_NULL;
1a000426:	2204      	movs	r2, #4
				  case TRANS_KEY_BOTT: nextState = KEY_ABA_LONG;   break;
1a000428:	e7b3      	b.n	1a000392 <updKeysMef+0x12>
				  switch ( transState ){
1a00042a:	b323      	cbz	r3, 1a000476 <updKeysMef+0xf6>
1a00042c:	b90b      	cbnz	r3, 1a000432 <updKeysMef+0xb2>
		nextEvent = EVENT_KEY_NULL;
1a00042e:	2204      	movs	r2, #4
1a000430:	e7af      	b.n	1a000392 <updKeysMef+0x12>
1a000432:	2204      	movs	r2, #4
				  case TRANS_KEY_BOTT: nextState = KEY_ABA_SHORT;  break;
1a000434:	2705      	movs	r7, #5
1a000436:	e7ac      	b.n	1a000392 <updKeysMef+0x12>
				  switch ( transState ){
1a000438:	b303      	cbz	r3, 1a00047c <updKeysMef+0xfc>
1a00043a:	b90b      	cbnz	r3, 1a000440 <updKeysMef+0xc0>
		nextEvent = EVENT_KEY_NULL;
1a00043c:	2204      	movs	r2, #4
1a00043e:	e7a8      	b.n	1a000392 <updKeysMef+0x12>
1a000440:	2204      	movs	r2, #4
				  case TRANS_KEY_BOTT: nextState = KEY_FALL;       break;
1a000442:	2700      	movs	r7, #0
1a000444:	e7a5      	b.n	1a000392 <updKeysMef+0x12>
				  switch ( transState ){
1a000446:	b1e3      	cbz	r3, 1a000482 <updKeysMef+0x102>
1a000448:	b90b      	cbnz	r3, 1a00044e <updKeysMef+0xce>
		nextEvent = EVENT_KEY_NULL;
1a00044a:	2204      	movs	r2, #4
1a00044c:	e7a1      	b.n	1a000392 <updKeysMef+0x12>
	  	  	  	  	 	 	 	 	   nextEvent = EVENT_KEY_2CLICK;break;	//EVENT_KEY_2CLICK
1a00044e:	2203      	movs	r2, #3
				  case TRANS_KEY_BOTT: nextState = KEY_FALL;
1a000450:	2700      	movs	r7, #0
	  	  	  	  	 	 	 	 	   nextEvent = EVENT_KEY_2CLICK;break;	//EVENT_KEY_2CLICK
1a000452:	e79e      	b.n	1a000392 <updKeysMef+0x12>
		nextEvent = EVENT_KEY_NULL;
1a000454:	2204      	movs	r2, #4
1a000456:	e79c      	b.n	1a000392 <updKeysMef+0x12>
				  case TRANS_KEY_TOP : nextState = KEY_ARR_LONG;   break;
1a000458:	4637      	mov	r7, r6
		nextEvent = EVENT_KEY_NULL;
1a00045a:	2204      	movs	r2, #4
1a00045c:	e799      	b.n	1a000392 <updKeysMef+0x12>
1a00045e:	2204      	movs	r2, #4
				  case TRANS_KEY_TOP : nextState = KEY_ARR_SHORT;  break;
1a000460:	2702      	movs	r7, #2
1a000462:	e796      	b.n	1a000392 <updKeysMef+0x12>
		nextEvent = EVENT_KEY_NULL;
1a000464:	2204      	movs	r2, #4
				  case TRANS_KEY_TOP : nextState = KEY_RISE;       break;
1a000466:	2701      	movs	r7, #1
1a000468:	e793      	b.n	1a000392 <updKeysMef+0x12>
		  	  	  	 	 	 	 	   nextEvent = EVENT_KEY_CLICK;break;	//EVENT_KEY_CLICK
1a00046a:	2202      	movs	r2, #2
				  case TRANS_KEY_TOP : nextState = KEY_RISE;
1a00046c:	2701      	movs	r7, #1
1a00046e:	e790      	b.n	1a000392 <updKeysMef+0x12>
		nextEvent = EVENT_KEY_NULL;
1a000470:	2204      	movs	r2, #4
				  case TRANS_KEY_TOP : nextState = KEY_RISE;       break;
1a000472:	2701      	movs	r7, #1
1a000474:	e78d      	b.n	1a000392 <updKeysMef+0x12>
	  	  	  	  	 	 	 	 	   nextEvent = EVENT_KEY_UP;   break;	//EVENT_KEY_UP
1a000476:	2200      	movs	r2, #0
				  case TRANS_KEY_TOP : nextState = KEY_ARR_SHORT;
1a000478:	2702      	movs	r7, #2
1a00047a:	e78a      	b.n	1a000392 <updKeysMef+0x12>
		nextEvent = EVENT_KEY_NULL;
1a00047c:	2204      	movs	r2, #4
				  case TRANS_KEY_TOP : nextState = KEY_ARR_TRANS;  break;
1a00047e:	2703      	movs	r7, #3
1a000480:	e787      	b.n	1a000392 <updKeysMef+0x12>
		nextEvent = EVENT_KEY_NULL;
1a000482:	2204      	movs	r2, #4
				  case TRANS_KEY_TOP : nextState = KEY_ARR_LONG;    break;
1a000484:	4617      	mov	r7, r2
1a000486:	e784      	b.n	1a000392 <updKeysMef+0x12>
	}

}
1a000488:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a00048a:	bf00      	nop
1a00048c:	10000a40 	.word	0x10000a40
1a000490:	10000000 	.word	0x10000000

1a000494 <srvKeysMef>:
// Para no complicarla, pongo las acciones (f) directamente en los case y la dejo como: void srvKeysMef ( void )
//
// Como demo mando al serie un string con los estados y eventos activados por las teclas/botones/pulsadores
//
/*------------------------------------------------------------------------------------------------------------- */
void srvKeysMef(){
1a000494:	b538      	push	{r3, r4, r5, lr}
	// para eso defino bKEY_ABA_LONG[] y bKEY_ARR_LONG[]. Estos arreglos guardan si los estados se usaron en el
	// penúltimo llamado para que si se repiten, inhiban el llamado.
	static bool_t bKEY_ABA_LONG[4], bKEY_ARR_LONG[4];

	//Loop de servicios de la Mef
	for (uint8_t i = 0; i < nKEYS; i++) {
1a000496:	2400      	movs	r4, #0
1a000498:	e073      	b.n	1a000582 <srvKeysMef+0xee>

		//Switch de estados. . .
		switch ( teclas[i].estado ){

			case KEY_ARR_SHORT:
				gpioWrite(LEDB + i, ON );
1a00049a:	f104 002a 	add.w	r0, r4, #42	; 0x2a
1a00049e:	2101      	movs	r1, #1
1a0004a0:	b2c0      	uxtb	r0, r0
1a0004a2:	f001 f96b 	bl	1a00177c <gpioWrite>
				printf("KEY_ARR_SHORT: \t key: %i \t gpio: %i\n", i, teclas[i].tecla );
1a0004a6:	eb05 0345 	add.w	r3, r5, r5, lsl #1
1a0004aa:	4a58      	ldr	r2, [pc, #352]	; (1a00060c <srvKeysMef+0x178>)
1a0004ac:	5cd2      	ldrb	r2, [r2, r3]
1a0004ae:	4629      	mov	r1, r5
1a0004b0:	4857      	ldr	r0, [pc, #348]	; (1a000610 <srvKeysMef+0x17c>)
1a0004b2:	f002 f8f9 	bl	1a0026a8 <printf>
			case KEY_ABA_TRANS:  delay(800); break;
			case KEY_ARR_TRANS:  delay(800); break;
		}

		//Switch de eventos. . .
		switch ( teclas[i].evento ){
1a0004b6:	eb05 0245 	add.w	r2, r5, r5, lsl #1
1a0004ba:	4b54      	ldr	r3, [pc, #336]	; (1a00060c <srvKeysMef+0x178>)
1a0004bc:	4413      	add	r3, r2
1a0004be:	789b      	ldrb	r3, [r3, #2]
1a0004c0:	2b03      	cmp	r3, #3
1a0004c2:	d85c      	bhi.n	1a00057e <srvKeysMef+0xea>
1a0004c4:	e8df f003 	tbb	[pc, r3]
1a0004c8:	9886538f 	.word	0x9886538f
				gpioWrite(LEDB + i, ON );
1a0004cc:	f104 002a 	add.w	r0, r4, #42	; 0x2a
1a0004d0:	2101      	movs	r1, #1
1a0004d2:	b2c0      	uxtb	r0, r0
1a0004d4:	f001 f952 	bl	1a00177c <gpioWrite>
				if ( ! bKEY_ARR_LONG[i] ){			//Inhibiendo en la repetición KEY_ARR_LONG
1a0004d8:	4b4e      	ldr	r3, [pc, #312]	; (1a000614 <srvKeysMef+0x180>)
1a0004da:	5d5b      	ldrb	r3, [r3, r5]
1a0004dc:	2b00      	cmp	r3, #0
1a0004de:	d1ea      	bne.n	1a0004b6 <srvKeysMef+0x22>
				 	   bKEY_ARR_LONG[i]  = TRUE;
1a0004e0:	4b4c      	ldr	r3, [pc, #304]	; (1a000614 <srvKeysMef+0x180>)
1a0004e2:	2201      	movs	r2, #1
1a0004e4:	555a      	strb	r2, [r3, r5]
					   printf("KEY_ARR_LONG: \t key: %i \t gpio: %i\n\n", i, teclas[i].tecla );
1a0004e6:	eb05 0345 	add.w	r3, r5, r5, lsl #1
1a0004ea:	4a48      	ldr	r2, [pc, #288]	; (1a00060c <srvKeysMef+0x178>)
1a0004ec:	5cd2      	ldrb	r2, [r2, r3]
1a0004ee:	4629      	mov	r1, r5
1a0004f0:	4849      	ldr	r0, [pc, #292]	; (1a000618 <srvKeysMef+0x184>)
1a0004f2:	f002 f8d9 	bl	1a0026a8 <printf>
1a0004f6:	e7de      	b.n	1a0004b6 <srvKeysMef+0x22>
				gpioWrite(LEDB + i, OFF);
1a0004f8:	f104 002a 	add.w	r0, r4, #42	; 0x2a
1a0004fc:	2100      	movs	r1, #0
1a0004fe:	b2c0      	uxtb	r0, r0
1a000500:	f001 f93c 	bl	1a00177c <gpioWrite>
				printf("KEY_ABA_SHORT: \t key: %i \t gpio: %i\n", i, teclas[i].tecla );
1a000504:	eb05 0345 	add.w	r3, r5, r5, lsl #1
1a000508:	4a40      	ldr	r2, [pc, #256]	; (1a00060c <srvKeysMef+0x178>)
1a00050a:	5cd2      	ldrb	r2, [r2, r3]
1a00050c:	4629      	mov	r1, r5
1a00050e:	4843      	ldr	r0, [pc, #268]	; (1a00061c <srvKeysMef+0x188>)
1a000510:	f002 f8ca 	bl	1a0026a8 <printf>
			break;
1a000514:	e7cf      	b.n	1a0004b6 <srvKeysMef+0x22>
				gpioWrite(LEDB + i, OFF);
1a000516:	f104 002a 	add.w	r0, r4, #42	; 0x2a
1a00051a:	2100      	movs	r1, #0
1a00051c:	b2c0      	uxtb	r0, r0
1a00051e:	f001 f92d 	bl	1a00177c <gpioWrite>
				if ( ! bKEY_ABA_LONG[i]  ){			//Inhibiendo en la repetición KEY_ABA_LONG
1a000522:	4b3f      	ldr	r3, [pc, #252]	; (1a000620 <srvKeysMef+0x18c>)
1a000524:	5d5b      	ldrb	r3, [r3, r5]
1a000526:	2b00      	cmp	r3, #0
1a000528:	d1c5      	bne.n	1a0004b6 <srvKeysMef+0x22>
				 	   bKEY_ABA_LONG[i]  = TRUE;
1a00052a:	4b3d      	ldr	r3, [pc, #244]	; (1a000620 <srvKeysMef+0x18c>)
1a00052c:	2201      	movs	r2, #1
1a00052e:	555a      	strb	r2, [r3, r5]
					   printf("KEY_ABA_LONG: \t key: %i \t gpio: %i\n", i, teclas[i].tecla );
1a000530:	eb05 0345 	add.w	r3, r5, r5, lsl #1
1a000534:	4a35      	ldr	r2, [pc, #212]	; (1a00060c <srvKeysMef+0x178>)
1a000536:	5cd2      	ldrb	r2, [r2, r3]
1a000538:	4629      	mov	r1, r5
1a00053a:	483a      	ldr	r0, [pc, #232]	; (1a000624 <srvKeysMef+0x190>)
1a00053c:	f002 f8b4 	bl	1a0026a8 <printf>
1a000540:	e7b9      	b.n	1a0004b6 <srvKeysMef+0x22>
			case KEY_FALL:       delay(50);	 break;
1a000542:	2032      	movs	r0, #50	; 0x32
1a000544:	2100      	movs	r1, #0
1a000546:	f001 f9f7 	bl	1a001938 <delay>
1a00054a:	e7b4      	b.n	1a0004b6 <srvKeysMef+0x22>
			case KEY_RISE:       delay(50);	 break;
1a00054c:	2032      	movs	r0, #50	; 0x32
1a00054e:	2100      	movs	r1, #0
1a000550:	f001 f9f2 	bl	1a001938 <delay>
1a000554:	e7af      	b.n	1a0004b6 <srvKeysMef+0x22>
			case KEY_ABA_TRANS:  delay(800); break;
1a000556:	f44f 7048 	mov.w	r0, #800	; 0x320
1a00055a:	2100      	movs	r1, #0
1a00055c:	f001 f9ec 	bl	1a001938 <delay>
1a000560:	e7a9      	b.n	1a0004b6 <srvKeysMef+0x22>
			case KEY_ARR_TRANS:  delay(800); break;
1a000562:	f44f 7048 	mov.w	r0, #800	; 0x320
1a000566:	2100      	movs	r1, #0
1a000568:	f001 f9e6 	bl	1a001938 <delay>
1a00056c:	e7a3      	b.n	1a0004b6 <srvKeysMef+0x22>
			case EVENT_KEY_DOWN:   printf("EVENT_KEY_DOWN: \t key: %i \t gpio: %i\n", i, teclas[i].tecla );
1a00056e:	eb05 0345 	add.w	r3, r5, r5, lsl #1
1a000572:	4a26      	ldr	r2, [pc, #152]	; (1a00060c <srvKeysMef+0x178>)
1a000574:	5cd2      	ldrb	r2, [r2, r3]
1a000576:	4629      	mov	r1, r5
1a000578:	482b      	ldr	r0, [pc, #172]	; (1a000628 <srvKeysMef+0x194>)
1a00057a:	f002 f895 	bl	1a0026a8 <printf>
	for (uint8_t i = 0; i < nKEYS; i++) {
1a00057e:	3401      	adds	r4, #1
1a000580:	b2e4      	uxtb	r4, r4
1a000582:	4625      	mov	r5, r4
1a000584:	4b29      	ldr	r3, [pc, #164]	; (1a00062c <srvKeysMef+0x198>)
1a000586:	681b      	ldr	r3, [r3, #0]
1a000588:	429c      	cmp	r4, r3
1a00058a:	da3e      	bge.n	1a00060a <srvKeysMef+0x176>
		if ( teclas[i].estado != KEY_ARR_LONG ) bKEY_ARR_LONG[i] = FALSE;
1a00058c:	eb04 0244 	add.w	r2, r4, r4, lsl #1
1a000590:	4b1e      	ldr	r3, [pc, #120]	; (1a00060c <srvKeysMef+0x178>)
1a000592:	4413      	add	r3, r2
1a000594:	785b      	ldrb	r3, [r3, #1]
1a000596:	2b04      	cmp	r3, #4
1a000598:	d002      	beq.n	1a0005a0 <srvKeysMef+0x10c>
1a00059a:	4a1e      	ldr	r2, [pc, #120]	; (1a000614 <srvKeysMef+0x180>)
1a00059c:	2100      	movs	r1, #0
1a00059e:	5551      	strb	r1, [r2, r5]
		if ( teclas[i].estado != KEY_ABA_LONG ) bKEY_ABA_LONG[i] = FALSE;
1a0005a0:	2b07      	cmp	r3, #7
1a0005a2:	d002      	beq.n	1a0005aa <srvKeysMef+0x116>
1a0005a4:	4a1e      	ldr	r2, [pc, #120]	; (1a000620 <srvKeysMef+0x18c>)
1a0005a6:	2100      	movs	r1, #0
1a0005a8:	5551      	strb	r1, [r2, r5]
		switch ( teclas[i].estado ){
1a0005aa:	2b07      	cmp	r3, #7
1a0005ac:	d883      	bhi.n	1a0004b6 <srvKeysMef+0x22>
1a0005ae:	a201      	add	r2, pc, #4	; (adr r2, 1a0005b4 <srvKeysMef+0x120>)
1a0005b0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
1a0005b4:	1a000543 	.word	0x1a000543
1a0005b8:	1a00054d 	.word	0x1a00054d
1a0005bc:	1a00049b 	.word	0x1a00049b
1a0005c0:	1a000563 	.word	0x1a000563
1a0005c4:	1a0004cd 	.word	0x1a0004cd
1a0005c8:	1a0004f9 	.word	0x1a0004f9
1a0005cc:	1a000557 	.word	0x1a000557
1a0005d0:	1a000517 	.word	0x1a000517
			break;
			case EVENT_KEY_CLICK:  printf("EVENT_KEY_CLICK: \t key: %i \t gpio: %i\n", i, teclas[i].tecla );
1a0005d4:	eb05 0345 	add.w	r3, r5, r5, lsl #1
1a0005d8:	4a0c      	ldr	r2, [pc, #48]	; (1a00060c <srvKeysMef+0x178>)
1a0005da:	5cd2      	ldrb	r2, [r2, r3]
1a0005dc:	4629      	mov	r1, r5
1a0005de:	4814      	ldr	r0, [pc, #80]	; (1a000630 <srvKeysMef+0x19c>)
1a0005e0:	f002 f862 	bl	1a0026a8 <printf>
			break;
1a0005e4:	e7cb      	b.n	1a00057e <srvKeysMef+0xea>
			case EVENT_KEY_UP:     printf("EVENT_KEY_UP: \t key: %i \t gpio: %i\n", i, teclas[i].tecla );
1a0005e6:	eb05 0345 	add.w	r3, r5, r5, lsl #1
1a0005ea:	4a08      	ldr	r2, [pc, #32]	; (1a00060c <srvKeysMef+0x178>)
1a0005ec:	5cd2      	ldrb	r2, [r2, r3]
1a0005ee:	4629      	mov	r1, r5
1a0005f0:	4810      	ldr	r0, [pc, #64]	; (1a000634 <srvKeysMef+0x1a0>)
1a0005f2:	f002 f859 	bl	1a0026a8 <printf>
			break;
1a0005f6:	e7c2      	b.n	1a00057e <srvKeysMef+0xea>
			case EVENT_KEY_2CLICK: printf("\nEVENT_KEY_2CLICK: \t key: %i \t gpio: %i\n\n", i, teclas[i].tecla );
1a0005f8:	eb05 0345 	add.w	r3, r5, r5, lsl #1
1a0005fc:	4a03      	ldr	r2, [pc, #12]	; (1a00060c <srvKeysMef+0x178>)
1a0005fe:	5cd2      	ldrb	r2, [r2, r3]
1a000600:	4629      	mov	r1, r5
1a000602:	480d      	ldr	r0, [pc, #52]	; (1a000638 <srvKeysMef+0x1a4>)
1a000604:	f002 f850 	bl	1a0026a8 <printf>
			break;
1a000608:	e7b9      	b.n	1a00057e <srvKeysMef+0xea>
			break;
		}

	}

}
1a00060a:	bd38      	pop	{r3, r4, r5, pc}
1a00060c:	10000a40 	.word	0x10000a40
1a000610:	1a007454 	.word	0x1a007454
1a000614:	10000a3c 	.word	0x10000a3c
1a000618:	1a00747c 	.word	0x1a00747c
1a00061c:	1a0074a4 	.word	0x1a0074a4
1a000620:	10000a38 	.word	0x10000a38
1a000624:	1a0074cc 	.word	0x1a0074cc
1a000628:	1a0074f0 	.word	0x1a0074f0
1a00062c:	10000000 	.word	0x10000000
1a000630:	1a007518 	.word	0x1a007518
1a000634:	1a007540 	.word	0x1a007540
1a000638:	1a007564 	.word	0x1a007564

1a00063c <initialise_monitor_handles>:
}
1a00063c:	4770      	bx	lr
1a00063e:	Address 0x000000001a00063e is out of bounds.


1a000640 <Reset_Handler>:
void Reset_Handler(void) {
1a000640:	b510      	push	{r4, lr}
    __asm__ volatile("cpsid i");
1a000642:	b672      	cpsid	i
    *(RESET_CONTROL + 0) = 0x10DF1000;
1a000644:	4b19      	ldr	r3, [pc, #100]	; (1a0006ac <Reset_Handler+0x6c>)
1a000646:	4a1a      	ldr	r2, [pc, #104]	; (1a0006b0 <Reset_Handler+0x70>)
1a000648:	601a      	str	r2, [r3, #0]
    *(RESET_CONTROL + 1) = 0x01DFF7FF;
1a00064a:	3304      	adds	r3, #4
1a00064c:	4a19      	ldr	r2, [pc, #100]	; (1a0006b4 <Reset_Handler+0x74>)
1a00064e:	601a      	str	r2, [r3, #0]
    for (irqpendloop = 0; irqpendloop < 8; irqpendloop++) {
1a000650:	2300      	movs	r3, #0
1a000652:	e005      	b.n	1a000660 <Reset_Handler+0x20>
        *(NVIC_ICPR + irqpendloop) = 0xFFFFFFFF;
1a000654:	4a18      	ldr	r2, [pc, #96]	; (1a0006b8 <Reset_Handler+0x78>)
1a000656:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
1a00065a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    for (irqpendloop = 0; irqpendloop < 8; irqpendloop++) {
1a00065e:	3301      	adds	r3, #1
1a000660:	2b07      	cmp	r3, #7
1a000662:	d9f7      	bls.n	1a000654 <Reset_Handler+0x14>
    __asm__ volatile("cpsie i");
1a000664:	b662      	cpsie	i
    SectionTableAddr = &__data_section_table;
1a000666:	4b15      	ldr	r3, [pc, #84]	; (1a0006bc <Reset_Handler+0x7c>)
    while (SectionTableAddr < &__data_section_table_end) {
1a000668:	e007      	b.n	1a00067a <Reset_Handler+0x3a>
        SectionLen = *SectionTableAddr++;
1a00066a:	f103 040c 	add.w	r4, r3, #12
        data_init(LoadAddr, ExeAddr, SectionLen);
1a00066e:	689a      	ldr	r2, [r3, #8]
1a000670:	6859      	ldr	r1, [r3, #4]
1a000672:	6818      	ldr	r0, [r3, #0]
1a000674:	f7ff fd89 	bl	1a00018a <data_init>
        SectionLen = *SectionTableAddr++;
1a000678:	4623      	mov	r3, r4
    while (SectionTableAddr < &__data_section_table_end) {
1a00067a:	4a11      	ldr	r2, [pc, #68]	; (1a0006c0 <Reset_Handler+0x80>)
1a00067c:	4293      	cmp	r3, r2
1a00067e:	d3f4      	bcc.n	1a00066a <Reset_Handler+0x2a>
1a000680:	e006      	b.n	1a000690 <Reset_Handler+0x50>
        ExeAddr = *SectionTableAddr++;
1a000682:	461c      	mov	r4, r3
        bss_init(ExeAddr, SectionLen);
1a000684:	6859      	ldr	r1, [r3, #4]
1a000686:	f854 0b08 	ldr.w	r0, [r4], #8
1a00068a:	f7ff fd8d 	bl	1a0001a8 <bss_init>
        SectionLen = *SectionTableAddr++;
1a00068e:	4623      	mov	r3, r4
    while (SectionTableAddr < &__bss_section_table_end) {
1a000690:	4a0c      	ldr	r2, [pc, #48]	; (1a0006c4 <Reset_Handler+0x84>)
1a000692:	4293      	cmp	r3, r2
1a000694:	d3f5      	bcc.n	1a000682 <Reset_Handler+0x42>
    SystemInit();
1a000696:	f000 fef9 	bl	1a00148c <SystemInit>
    __libc_init_array();
1a00069a:	f001 fefd 	bl	1a002498 <__libc_init_array>
    initialise_monitor_handles();
1a00069e:	f7ff ffcd 	bl	1a00063c <initialise_monitor_handles>
    main();
1a0006a2:	f7ff fe2d 	bl	1a000300 <main>
        __asm__ volatile("wfi");
1a0006a6:	bf30      	wfi
1a0006a8:	e7fd      	b.n	1a0006a6 <Reset_Handler+0x66>
1a0006aa:	bf00      	nop
1a0006ac:	40053100 	.word	0x40053100
1a0006b0:	10df1000 	.word	0x10df1000
1a0006b4:	01dff7ff 	.word	0x01dff7ff
1a0006b8:	e000e280 	.word	0xe000e280
1a0006bc:	1a000114 	.word	0x1a000114
1a0006c0:	1a000150 	.word	0x1a000150
1a0006c4:	1a000178 	.word	0x1a000178

1a0006c8 <_fini>:
void _fini(void) {}
1a0006c8:	4770      	bx	lr

1a0006ca <_init>:
void _init(void) {}
1a0006ca:	4770      	bx	lr

1a0006cc <_close_r>:
   (void) __params__;
}

int _close_r(struct _reent *r, int fd) {
   UNUSED(fd);
   SET_ERR(EBADF);
1a0006cc:	2309      	movs	r3, #9
1a0006ce:	6003      	str	r3, [r0, #0]
   return -1;
}
1a0006d0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a0006d4:	4770      	bx	lr

1a0006d6 <_fstat_r>:
}

int _fstat_r(struct _reent *r, int fd, struct stat *st) {
   UNUSED(fd);
   UNUSED(st);
   SET_ERR(ENOSYS);
1a0006d6:	2358      	movs	r3, #88	; 0x58
1a0006d8:	6003      	str	r3, [r0, #0]
   return -1;
}
1a0006da:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a0006de:	4770      	bx	lr

1a0006e0 <_isatty_r>:
   UNUSED(r);
   return 1;
}

int _isatty_r(struct _reent *r, int fd) {
   switch (fd) {
1a0006e0:	2902      	cmp	r1, #2
1a0006e2:	d801      	bhi.n	1a0006e8 <_isatty_r+0x8>
   case 0:
   case 1:
   case 2:
       return 1;
1a0006e4:	2001      	movs	r0, #1
   default:
       SET_ERR(EBADF);
       return -1;
   }
}
1a0006e6:	4770      	bx	lr
       SET_ERR(EBADF);
1a0006e8:	2309      	movs	r3, #9
1a0006ea:	6003      	str	r3, [r0, #0]
       return -1;
1a0006ec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a0006f0:	4770      	bx	lr

1a0006f2 <_lseek_r>:

_off_t _lseek_r(struct _reent *r, int fd, _off_t off, int w) {
   UNUSED(fd);
   UNUSED(off);
   UNUSED(w);
   SET_ERR(ENOSYS);
1a0006f2:	2358      	movs	r3, #88	; 0x58
1a0006f4:	6003      	str	r3, [r0, #0]
   return -1;
}
1a0006f6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a0006fa:	4770      	bx	lr

1a0006fc <_read_r>:
   }
}
*/
_ssize_t _read_r(struct _reent *r, int fd, void *b, size_t n) {
  size_t i = 0;
  switch (fd) {
1a0006fc:	2902      	cmp	r1, #2
1a0006fe:	d81f      	bhi.n	1a000740 <_read_r+0x44>
_ssize_t _read_r(struct _reent *r, int fd, void *b, size_t n) {
1a000700:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a000704:	461d      	mov	r5, r3
1a000706:	4617      	mov	r7, r2
1a000708:	4606      	mov	r6, r0
  size_t i = 0;
1a00070a:	2400      	movs	r4, #0
  case 0:
  case 1:
  case 2:
      while( i < n ){
1a00070c:	42ac      	cmp	r4, r5
1a00070e:	d211      	bcs.n	1a000734 <_read_r+0x38>
         int c = __stdio_getchar();
1a000710:	f000 f92d 	bl	1a00096e <__stdio_getchar>
         if( c != -1 ){
1a000714:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
1a000718:	d0f8      	beq.n	1a00070c <_read_r+0x10>
            ((char*) b)[i++] = (char) c;
1a00071a:	f104 0801 	add.w	r8, r4, #1
1a00071e:	5538      	strb	r0, [r7, r4]
            if( c == '\r' || c == '\n' ){
1a000720:	280d      	cmp	r0, #13
1a000722:	d003      	beq.n	1a00072c <_read_r+0x30>
1a000724:	280a      	cmp	r0, #10
1a000726:	d001      	beq.n	1a00072c <_read_r+0x30>
            ((char*) b)[i++] = (char) c;
1a000728:	4644      	mov	r4, r8
1a00072a:	e7ef      	b.n	1a00070c <_read_r+0x10>
               // read anotherone to prevent \r\n
               (void) __stdio_getchar();
1a00072c:	f000 f91f 	bl	1a00096e <__stdio_getchar>
               return i;
1a000730:	4640      	mov	r0, r8
1a000732:	e003      	b.n	1a00073c <_read_r+0x40>
            }
         }
      }
      SET_ERR(ENODEV);
1a000734:	2313      	movs	r3, #19
1a000736:	6033      	str	r3, [r6, #0]
      return -1;
1a000738:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
  default:
      SET_ERR(ENODEV);
      return -1;
  }
}
1a00073c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      SET_ERR(ENODEV);
1a000740:	2313      	movs	r3, #19
1a000742:	6003      	str	r3, [r0, #0]
      return -1;
1a000744:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
}
1a000748:	4770      	bx	lr

1a00074a <_write_r>:
   return -1;
}

_ssize_t _write_r(struct _reent *r, int fd, const void *b, size_t n) {
   size_t i;
   switch (fd) {
1a00074a:	2902      	cmp	r1, #2
1a00074c:	d80c      	bhi.n	1a000768 <_write_r+0x1e>
_ssize_t _write_r(struct _reent *r, int fd, const void *b, size_t n) {
1a00074e:	b570      	push	{r4, r5, r6, lr}
1a000750:	461d      	mov	r5, r3
1a000752:	4616      	mov	r6, r2
   case 0:
   case 1:
   case 2:
       for (i = 0; i < n; i++)
1a000754:	2400      	movs	r4, #0
1a000756:	e003      	b.n	1a000760 <_write_r+0x16>
           __stdio_putchar(((char*) b)[i]);
1a000758:	5d30      	ldrb	r0, [r6, r4]
1a00075a:	f000 f903 	bl	1a000964 <__stdio_putchar>
       for (i = 0; i < n; i++)
1a00075e:	3401      	adds	r4, #1
1a000760:	42ac      	cmp	r4, r5
1a000762:	d3f9      	bcc.n	1a000758 <_write_r+0xe>
       return n;
1a000764:	4628      	mov	r0, r5
   default:
       SET_ERR(ENODEV);
       return -1;
   }
}
1a000766:	bd70      	pop	{r4, r5, r6, pc}
       SET_ERR(ENODEV);
1a000768:	2313      	movs	r3, #19
1a00076a:	6003      	str	r3, [r0, #0]
       return -1;
1a00076c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
}
1a000770:	4770      	bx	lr
1a000772:	Address 0x000000001a000772 is out of bounds.


1a000774 <_sbrk_r>:

void *_sbrk_r(struct _reent *r, ptrdiff_t incr) {
   extern int _pvHeapStart;
   static void *heap_end;
   void *prev_heap_end;
   if (heap_end == 0) {
1a000774:	4b05      	ldr	r3, [pc, #20]	; (1a00078c <_sbrk_r+0x18>)
1a000776:	681b      	ldr	r3, [r3, #0]
1a000778:	b123      	cbz	r3, 1a000784 <_sbrk_r+0x10>
       heap_end = &_pvHeapStart;
   }
   prev_heap_end = heap_end;
1a00077a:	4b04      	ldr	r3, [pc, #16]	; (1a00078c <_sbrk_r+0x18>)
1a00077c:	6818      	ldr	r0, [r3, #0]
   heap_end += incr;
1a00077e:	4401      	add	r1, r0
1a000780:	6019      	str	r1, [r3, #0]
   return prev_heap_end;
}
1a000782:	4770      	bx	lr
       heap_end = &_pvHeapStart;
1a000784:	4b01      	ldr	r3, [pc, #4]	; (1a00078c <_sbrk_r+0x18>)
1a000786:	4a02      	ldr	r2, [pc, #8]	; (1a000790 <_sbrk_r+0x1c>)
1a000788:	601a      	str	r2, [r3, #0]
1a00078a:	e7f6      	b.n	1a00077a <_sbrk_r+0x6>
1a00078c:	10000a7c 	.word	0x10000a7c
1a000790:	10000b08 	.word	0x10000b08

1a000794 <Board_LED_Init>:
#define GPIO_PORTS_SIZE     (sizeof(GpioPorts) / sizeof(struct gpio_t))


static void Board_LED_Init()
{
    for (uint32_t i = 0; i < GPIO_LEDS_SIZE; ++i) {
1a000794:	2200      	movs	r2, #0
1a000796:	2a05      	cmp	r2, #5
1a000798:	d819      	bhi.n	1a0007ce <Board_LED_Init+0x3a>
{
1a00079a:	b470      	push	{r4, r5, r6}
        const struct gpio_t *io = &GpioLeds[i];
        Chip_GPIO_SetPinDIROutput(LPC_GPIO_PORT, io->port, io->pin);
1a00079c:	490c      	ldr	r1, [pc, #48]	; (1a0007d0 <Board_LED_Init+0x3c>)
1a00079e:	f811 5012 	ldrb.w	r5, [r1, r2, lsl #1]
1a0007a2:	eb01 0142 	add.w	r1, r1, r2, lsl #1
1a0007a6:	784c      	ldrb	r4, [r1, #1]
 * @param	pin		: GPIO pin to set direction on as output
 * @return	Nothing
 */
STATIC INLINE void Chip_GPIO_SetPinDIROutput(LPC_GPIO_T *pGPIO, uint8_t port, uint8_t pin)
{
	pGPIO->DIR[port] |= 1UL << pin;
1a0007a8:	4b0a      	ldr	r3, [pc, #40]	; (1a0007d4 <Board_LED_Init+0x40>)
1a0007aa:	f505 6600 	add.w	r6, r5, #2048	; 0x800
1a0007ae:	f853 1026 	ldr.w	r1, [r3, r6, lsl #2]
1a0007b2:	2001      	movs	r0, #1
1a0007b4:	40a0      	lsls	r0, r4
1a0007b6:	4301      	orrs	r1, r0
1a0007b8:	f843 1026 	str.w	r1, [r3, r6, lsl #2]
	pGPIO->B[port][pin] = setting;
1a0007bc:	eb03 1345 	add.w	r3, r3, r5, lsl #5
1a0007c0:	2100      	movs	r1, #0
1a0007c2:	5519      	strb	r1, [r3, r4]
    for (uint32_t i = 0; i < GPIO_LEDS_SIZE; ++i) {
1a0007c4:	3201      	adds	r2, #1
1a0007c6:	2a05      	cmp	r2, #5
1a0007c8:	d9e8      	bls.n	1a00079c <Board_LED_Init+0x8>
        Chip_GPIO_SetPinState(LPC_GPIO_PORT, io->port, io->pin, false);
    }
}
1a0007ca:	bc70      	pop	{r4, r5, r6}
1a0007cc:	4770      	bx	lr
1a0007ce:	4770      	bx	lr
1a0007d0:	1a00759c 	.word	0x1a00759c
1a0007d4:	400f4000 	.word	0x400f4000

1a0007d8 <Board_TEC_Init>:


static void Board_TEC_Init()
{
    for (uint32_t i = 0; i < GPIO_BUTTONS_SIZE; ++i) {
1a0007d8:	2300      	movs	r3, #0
1a0007da:	2b03      	cmp	r3, #3
1a0007dc:	d816      	bhi.n	1a00080c <Board_TEC_Init+0x34>
{
1a0007de:	b430      	push	{r4, r5}
        const struct gpio_t *io = &GpioButtons[i];
        Chip_GPIO_SetPinDIRInput(LPC_GPIO_PORT, io->port, io->pin);
1a0007e0:	490b      	ldr	r1, [pc, #44]	; (1a000810 <Board_TEC_Init+0x38>)
1a0007e2:	f811 2013 	ldrb.w	r2, [r1, r3, lsl #1]
1a0007e6:	eb01 0143 	add.w	r1, r1, r3, lsl #1
1a0007ea:	784d      	ldrb	r5, [r1, #1]
 * @param	pin		: GPIO pin to set direction on as input
 * @return	Nothing
 */
STATIC INLINE void Chip_GPIO_SetPinDIRInput(LPC_GPIO_T *pGPIO, uint8_t port, uint8_t pin)
{
	pGPIO->DIR[port] &= ~(1UL << pin);
1a0007ec:	4c09      	ldr	r4, [pc, #36]	; (1a000814 <Board_TEC_Init+0x3c>)
1a0007ee:	f502 6200 	add.w	r2, r2, #2048	; 0x800
1a0007f2:	f854 1022 	ldr.w	r1, [r4, r2, lsl #2]
1a0007f6:	2001      	movs	r0, #1
1a0007f8:	40a8      	lsls	r0, r5
1a0007fa:	ea21 0100 	bic.w	r1, r1, r0
1a0007fe:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
    for (uint32_t i = 0; i < GPIO_BUTTONS_SIZE; ++i) {
1a000802:	3301      	adds	r3, #1
1a000804:	2b03      	cmp	r3, #3
1a000806:	d9eb      	bls.n	1a0007e0 <Board_TEC_Init+0x8>
    }
}
1a000808:	bc30      	pop	{r4, r5}
1a00080a:	4770      	bx	lr
1a00080c:	4770      	bx	lr
1a00080e:	bf00      	nop
1a000810:	1a007594 	.word	0x1a007594
1a000814:	400f4000 	.word	0x400f4000

1a000818 <Board_GPIO_Init>:


static void Board_GPIO_Init()
{
    for (uint32_t i = 0; i < GPIO_PORTS_SIZE; ++i) {
1a000818:	2300      	movs	r3, #0
1a00081a:	2b08      	cmp	r3, #8
1a00081c:	d816      	bhi.n	1a00084c <Board_GPIO_Init+0x34>
{
1a00081e:	b430      	push	{r4, r5}
        const struct gpio_t *io = &GpioPorts[i];
        Chip_GPIO_SetPinDIRInput(LPC_GPIO_PORT, io->port, io->pin);
1a000820:	490b      	ldr	r1, [pc, #44]	; (1a000850 <Board_GPIO_Init+0x38>)
1a000822:	f811 2013 	ldrb.w	r2, [r1, r3, lsl #1]
1a000826:	eb01 0143 	add.w	r1, r1, r3, lsl #1
1a00082a:	784d      	ldrb	r5, [r1, #1]
1a00082c:	4c09      	ldr	r4, [pc, #36]	; (1a000854 <Board_GPIO_Init+0x3c>)
1a00082e:	f502 6200 	add.w	r2, r2, #2048	; 0x800
1a000832:	f854 1022 	ldr.w	r1, [r4, r2, lsl #2]
1a000836:	2001      	movs	r0, #1
1a000838:	40a8      	lsls	r0, r5
1a00083a:	ea21 0100 	bic.w	r1, r1, r0
1a00083e:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
    for (uint32_t i = 0; i < GPIO_PORTS_SIZE; ++i) {
1a000842:	3301      	adds	r3, #1
1a000844:	2b08      	cmp	r3, #8
1a000846:	d9eb      	bls.n	1a000820 <Board_GPIO_Init+0x8>
    }
}
1a000848:	bc30      	pop	{r4, r5}
1a00084a:	4770      	bx	lr
1a00084c:	4770      	bx	lr
1a00084e:	bf00      	nop
1a000850:	1a0075a8 	.word	0x1a0075a8
1a000854:	400f4000 	.word	0x400f4000

1a000858 <Board_ADC_Init>:
    Chip_SSP_Enable(LPC_SSP1);
}


static void Board_ADC_Init()
{
1a000858:	b510      	push	{r4, lr}
1a00085a:	b082      	sub	sp, #8
    ADC_CLOCK_SETUP_T cs;

    Chip_ADC_Init(LPC_ADC0, &cs);
1a00085c:	4c08      	ldr	r4, [pc, #32]	; (1a000880 <Board_ADC_Init+0x28>)
1a00085e:	4669      	mov	r1, sp
1a000860:	4620      	mov	r0, r4
1a000862:	f000 f9bd 	bl	1a000be0 <Chip_ADC_Init>
    Chip_ADC_SetSampleRate(LPC_ADC0, &cs, BOARD_ADC_SAMPLE_RATE);
1a000866:	4a07      	ldr	r2, [pc, #28]	; (1a000884 <Board_ADC_Init+0x2c>)
1a000868:	4669      	mov	r1, sp
1a00086a:	4620      	mov	r0, r4
1a00086c:	f000 f9d8 	bl	1a000c20 <Chip_ADC_SetSampleRate>
    Chip_ADC_SetResolution(LPC_ADC0, &cs, BOARD_ADC_RESOLUTION);
1a000870:	2200      	movs	r2, #0
1a000872:	4669      	mov	r1, sp
1a000874:	4620      	mov	r0, r4
1a000876:	f000 f9ec 	bl	1a000c52 <Chip_ADC_SetResolution>
}
1a00087a:	b002      	add	sp, #8
1a00087c:	bd10      	pop	{r4, pc}
1a00087e:	bf00      	nop
1a000880:	400e3000 	.word	0x400e3000
1a000884:	00061a80 	.word	0x00061a80

1a000888 <Board_SPI_Init>:
{
1a000888:	b510      	push	{r4, lr}
    Chip_SSP_Init(LPC_SSP1);
1a00088a:	4c0b      	ldr	r4, [pc, #44]	; (1a0008b8 <Board_SPI_Init+0x30>)
1a00088c:	4620      	mov	r0, r4
1a00088e:	f000 fda3 	bl	1a0013d8 <Chip_SSP_Init>
 *						- SSP_MODE_SLAVE
 * @return	 Nothing
 */
STATIC INLINE void Chip_SSP_Set_Mode(LPC_SSP_T *pSSP, uint32_t mode)
{
	pSSP->CR1 = (pSSP->CR1 & ~(1 << 2)) | mode;
1a000892:	6863      	ldr	r3, [r4, #4]
1a000894:	f023 0304 	bic.w	r3, r3, #4
1a000898:	6063      	str	r3, [r4, #4]
	pSSP->CR0 = (pSSP->CR0 & ~0xFF) | bits | frameFormat | clockMode;
1a00089a:	6823      	ldr	r3, [r4, #0]
1a00089c:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
1a0008a0:	f043 0307 	orr.w	r3, r3, #7
1a0008a4:	6023      	str	r3, [r4, #0]
    Chip_SSP_SetBitRate(LPC_SSP1, BOARD_SPI_SPEED);
1a0008a6:	4905      	ldr	r1, [pc, #20]	; (1a0008bc <Board_SPI_Init+0x34>)
1a0008a8:	4620      	mov	r0, r4
1a0008aa:	f000 fd76 	bl	1a00139a <Chip_SSP_SetBitRate>
	pSSP->CR1 |= SSP_CR1_SSP_EN;
1a0008ae:	6863      	ldr	r3, [r4, #4]
1a0008b0:	f043 0302 	orr.w	r3, r3, #2
1a0008b4:	6063      	str	r3, [r4, #4]
}
1a0008b6:	bd10      	pop	{r4, pc}
1a0008b8:	400c5000 	.word	0x400c5000
1a0008bc:	000186a0 	.word	0x000186a0

1a0008c0 <Board_I2C_Init>:
{
1a0008c0:	b508      	push	{r3, lr}
    Chip_I2C_Init(I2C0);
1a0008c2:	2000      	movs	r0, #0
1a0008c4:	f000 fdb4 	bl	1a001430 <Chip_I2C_Init>
 *                  - I2C0_FAST_MODE_PLUS: Fast-mode Plus transmit
 * @return	Nothing
 */
STATIC INLINE void Chip_SCU_I2C0PinConfig(uint32_t I2C0Mode)
{
	LPC_SCU->SFSI2C0 = I2C0Mode;
1a0008c8:	4b04      	ldr	r3, [pc, #16]	; (1a0008dc <Board_I2C_Init+0x1c>)
1a0008ca:	f640 0208 	movw	r2, #2056	; 0x808
1a0008ce:	f8c3 2c84 	str.w	r2, [r3, #3204]	; 0xc84
    Chip_I2C_SetClockRate(I2C0, BOARD_I2C_SPEED);
1a0008d2:	4903      	ldr	r1, [pc, #12]	; (1a0008e0 <Board_I2C_Init+0x20>)
1a0008d4:	2000      	movs	r0, #0
1a0008d6:	f000 fdbd 	bl	1a001454 <Chip_I2C_SetClockRate>
}
1a0008da:	bd08      	pop	{r3, pc}
1a0008dc:	40086000 	.word	0x40086000
1a0008e0:	000f4240 	.word	0x000f4240

1a0008e4 <Board_Debug_Init>:


void Board_Debug_Init(void)
{
1a0008e4:	b510      	push	{r4, lr}
    Chip_UART_Init(DEBUG_UART);
1a0008e6:	4c07      	ldr	r4, [pc, #28]	; (1a000904 <Board_Debug_Init+0x20>)
1a0008e8:	4620      	mov	r0, r4
1a0008ea:	f000 f8b7 	bl	1a000a5c <Chip_UART_Init>
    Chip_UART_SetBaudFDR(DEBUG_UART, DEBUG_UART_BAUD_RATE);
1a0008ee:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
1a0008f2:	4620      	mov	r0, r4
1a0008f4:	f000 f8dc 	bl	1a000ab0 <Chip_UART_SetBaudFDR>
 *			stop bit, and even (enabled) parity would be
 *			(UART_LCR_WLEN8 | UART_LCR_SBS_1BIT | UART_LCR_PARITY_EN | UART_LCR_PARITY_EVEN)
 */
STATIC INLINE void Chip_UART_ConfigData(LPC_USART_T *pUART, uint32_t config)
{
	pUART->LCR = config;
1a0008f8:	2303      	movs	r3, #3
1a0008fa:	60e3      	str	r3, [r4, #12]
    pUART->TER2 = UART_TER2_TXEN;
1a0008fc:	2301      	movs	r3, #1
1a0008fe:	65e3      	str	r3, [r4, #92]	; 0x5c
    Chip_UART_ConfigData(DEBUG_UART, DEBUG_UART_CONFIG);
    Chip_UART_TXEnable(DEBUG_UART);
}
1a000900:	bd10      	pop	{r4, pc}
1a000902:	bf00      	nop
1a000904:	400c1000 	.word	0x400c1000

1a000908 <Board_UARTPutChar>:
 * @note	Mask bits of the returned status value with UART_LSR_*
 *			definitions for specific statuses.
 */
STATIC INLINE uint32_t Chip_UART_ReadLineStatus(LPC_USART_T *pUART)
{
	return pUART->LSR;
1a000908:	4b03      	ldr	r3, [pc, #12]	; (1a000918 <Board_UARTPutChar+0x10>)
1a00090a:	695b      	ldr	r3, [r3, #20]


void Board_UARTPutChar(char ch)
{
    while ( !(Chip_UART_ReadLineStatus(DEBUG_UART) & UART_LSR_THRE));
1a00090c:	f013 0f20 	tst.w	r3, #32
1a000910:	d0fa      	beq.n	1a000908 <Board_UARTPutChar>
	pUART->THR = (uint32_t) data;
1a000912:	4b01      	ldr	r3, [pc, #4]	; (1a000918 <Board_UARTPutChar+0x10>)
1a000914:	6018      	str	r0, [r3, #0]
    Chip_UART_SendByte(DEBUG_UART, (uint8_t) ch);
}
1a000916:	4770      	bx	lr
1a000918:	400c1000 	.word	0x400c1000

1a00091c <Board_UARTGetChar>:
	return pUART->LSR;
1a00091c:	4b05      	ldr	r3, [pc, #20]	; (1a000934 <Board_UARTGetChar+0x18>)
1a00091e:	695b      	ldr	r3, [r3, #20]


int Board_UARTGetChar(void)
{
    if (Chip_UART_ReadLineStatus(DEBUG_UART) & UART_LSR_RDR) {
1a000920:	f013 0f01 	tst.w	r3, #1
1a000924:	d003      	beq.n	1a00092e <Board_UARTGetChar+0x12>
	return (uint8_t) (pUART->RBR & UART_RBR_MASKBIT);
1a000926:	4b03      	ldr	r3, [pc, #12]	; (1a000934 <Board_UARTGetChar+0x18>)
1a000928:	6818      	ldr	r0, [r3, #0]
       return (int) Chip_UART_ReadByte(DEBUG_UART);
1a00092a:	b2c0      	uxtb	r0, r0
1a00092c:	4770      	bx	lr
    }
    return EOF;
1a00092e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
}
1a000932:	4770      	bx	lr
1a000934:	400c1000 	.word	0x400c1000

1a000938 <Board_Init>:
    Board_LED_Set(LEDNumber, !Board_LED_Test(LEDNumber));
}


void Board_Init(void)
{
1a000938:	b508      	push	{r3, lr}
   DEBUGINIT();
1a00093a:	f7ff ffd3 	bl	1a0008e4 <Board_Debug_Init>
   Chip_GPIO_Init (LPC_GPIO_PORT);
1a00093e:	4808      	ldr	r0, [pc, #32]	; (1a000960 <Board_Init+0x28>)
1a000940:	f000 fd0a 	bl	1a001358 <Chip_GPIO_Init>
   
   Board_GPIO_Init();
1a000944:	f7ff ff68 	bl	1a000818 <Board_GPIO_Init>
   Board_ADC_Init();
1a000948:	f7ff ff86 	bl	1a000858 <Board_ADC_Init>
   Board_SPI_Init();
1a00094c:	f7ff ff9c 	bl	1a000888 <Board_SPI_Init>
   Board_I2C_Init();
1a000950:	f7ff ffb6 	bl	1a0008c0 <Board_I2C_Init>

   Board_LED_Init();
1a000954:	f7ff ff1e 	bl	1a000794 <Board_LED_Init>
   Board_TEC_Init();
1a000958:	f7ff ff3e 	bl	1a0007d8 <Board_TEC_Init>

   #ifdef USE_RMII
   Chip_ENET_RMIIEnable(LPC_ETHERNET);
   #endif
}
1a00095c:	bd08      	pop	{r3, pc}
1a00095e:	bf00      	nop
1a000960:	400f4000 	.word	0x400f4000

1a000964 <__stdio_putchar>:
    Chip_ADC_EnableChannel(LPC_ADC0, curADCChannel, DISABLE);
    curADCChannel = 0xFF;
    return data;
}

void __stdio_putchar(int c) {
1a000964:	b508      	push	{r3, lr}
   Board_UARTPutChar(c);
1a000966:	b2c0      	uxtb	r0, r0
1a000968:	f7ff ffce 	bl	1a000908 <Board_UARTPutChar>
}
1a00096c:	bd08      	pop	{r3, pc}

1a00096e <__stdio_getchar>:

int __stdio_getchar() {
1a00096e:	b508      	push	{r3, lr}
   return Board_UARTGetChar();;
1a000970:	f7ff ffd4 	bl	1a00091c <Board_UARTGetChar>
}
1a000974:	bd08      	pop	{r3, pc}

1a000976 <__stdio_init>:

void __stdio_init() {
1a000976:	b508      	push	{r3, lr}
   Board_Debug_Init();
1a000978:	f7ff ffb4 	bl	1a0008e4 <Board_Debug_Init>
1a00097c:	bd08      	pop	{r3, pc}
1a00097e:	Address 0x000000001a00097e is out of bounds.


1a000980 <Board_SetupMuxing>:
 * @return	Nothing
 */
STATIC INLINE void Chip_SCU_SetPinMuxing(const PINMUX_GRP_T *pinArray, uint32_t arrayLength)
{
	uint32_t ix;
	for (ix = 0; ix < arrayLength; ix++ ) {
1a000980:	2300      	movs	r3, #0
1a000982:	2b1c      	cmp	r3, #28
1a000984:	d812      	bhi.n	1a0009ac <Board_SetupMuxing+0x2c>
    #endif
};


void Board_SetupMuxing(void)
{
1a000986:	b410      	push	{r4}
		Chip_SCU_PinMuxSet(pinArray[ix].pingrp, pinArray[ix].pinnum, pinArray[ix].modefunc);
1a000988:	4a09      	ldr	r2, [pc, #36]	; (1a0009b0 <Board_SetupMuxing+0x30>)
1a00098a:	eb02 0183 	add.w	r1, r2, r3, lsl #2
1a00098e:	f812 4023 	ldrb.w	r4, [r2, r3, lsl #2]
1a000992:	784a      	ldrb	r2, [r1, #1]
1a000994:	8848      	ldrh	r0, [r1, #2]
	LPC_SCU->SFSP[port][pin] = modefunc;
1a000996:	eb02 1244 	add.w	r2, r2, r4, lsl #5
1a00099a:	4906      	ldr	r1, [pc, #24]	; (1a0009b4 <Board_SetupMuxing+0x34>)
1a00099c:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
	for (ix = 0; ix < arrayLength; ix++ ) {
1a0009a0:	3301      	adds	r3, #1
1a0009a2:	2b1c      	cmp	r3, #28
1a0009a4:	d9f0      	bls.n	1a000988 <Board_SetupMuxing+0x8>
    Chip_SCU_SetPinMuxing(pinmuxing, sizeof(pinmuxing) / sizeof(PINMUX_GRP_T));
}
1a0009a6:	f85d 4b04 	ldr.w	r4, [sp], #4
1a0009aa:	4770      	bx	lr
1a0009ac:	4770      	bx	lr
1a0009ae:	bf00      	nop
1a0009b0:	1a0075c4 	.word	0x1a0075c4
1a0009b4:	40086000 	.word	0x40086000

1a0009b8 <Board_SetupClocking>:


void Board_SetupClocking(void)
{
1a0009b8:	b510      	push	{r4, lr}
 */
STATIC INLINE void Chip_CREG_SetFlashAcceleration(uint32_t Hz)
{
	uint32_t FAValue = Hz / 21510000;

	LPC_CREG->FLASHCFGA = (LPC_CREG->FLASHCFGA & (~(0xF << 12))) | (FAValue << 12);
1a0009ba:	4a17      	ldr	r2, [pc, #92]	; (1a000a18 <Board_SetupClocking+0x60>)
1a0009bc:	f8d2 3120 	ldr.w	r3, [r2, #288]	; 0x120
1a0009c0:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
1a0009c4:	f443 4310 	orr.w	r3, r3, #36864	; 0x9000
1a0009c8:	f8c2 3120 	str.w	r3, [r2, #288]	; 0x120
	LPC_CREG->FLASHCFGB = (LPC_CREG->FLASHCFGB & (~(0xF << 12))) | (FAValue << 12);
1a0009cc:	f8d2 3124 	ldr.w	r3, [r2, #292]	; 0x124
1a0009d0:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
1a0009d4:	f443 4310 	orr.w	r3, r3, #36864	; 0x9000
1a0009d8:	f8c2 3124 	str.w	r3, [r2, #292]	; 0x124
    Chip_CREG_SetFlashAcceleration(MAX_CLOCK_FREQ);
    Chip_SetupCoreClock(CLKIN_CRYSTAL, MAX_CLOCK_FREQ, true);
1a0009dc:	2201      	movs	r2, #1
1a0009de:	490f      	ldr	r1, [pc, #60]	; (1a000a1c <Board_SetupClocking+0x64>)
1a0009e0:	2006      	movs	r0, #6
1a0009e2:	f000 fc0f 	bl	1a001204 <Chip_SetupCoreClock>

    /* Setup system base clocks and initial states. This won't enable and
       disable individual clocks, but sets up the base clock sources for
       each individual peripheral clock. */
    for (uint32_t i = 0; i < (sizeof(InitClkStates) / sizeof(InitClkStates[0])); ++i)
1a0009e6:	2400      	movs	r4, #0
1a0009e8:	b14c      	cbz	r4, 1a0009fe <Board_SetupClocking+0x46>
        Chip_Clock_SetBaseClock (c->clk, c->clkin, c->autoblock_enab,
                                c->powerdn);
    }

    /* Reset and enable 32Khz oscillator */
    LPC_CREG->CREG0 &= ~((1 << 3) | (1 << 2));
1a0009ea:	4b0b      	ldr	r3, [pc, #44]	; (1a000a18 <Board_SetupClocking+0x60>)
1a0009ec:	685a      	ldr	r2, [r3, #4]
1a0009ee:	f022 020c 	bic.w	r2, r2, #12
1a0009f2:	605a      	str	r2, [r3, #4]
    LPC_CREG->CREG0 |= (1 << 1) | (1 << 0);
1a0009f4:	685a      	ldr	r2, [r3, #4]
1a0009f6:	f042 0203 	orr.w	r2, r2, #3
1a0009fa:	605a      	str	r2, [r3, #4]
}
1a0009fc:	bd10      	pop	{r4, pc}
        Chip_Clock_SetBaseClock (c->clk, c->clkin, c->autoblock_enab,
1a0009fe:	4808      	ldr	r0, [pc, #32]	; (1a000a20 <Board_SetupClocking+0x68>)
1a000a00:	eb00 0184 	add.w	r1, r0, r4, lsl #2
1a000a04:	2301      	movs	r3, #1
1a000a06:	788a      	ldrb	r2, [r1, #2]
1a000a08:	7849      	ldrb	r1, [r1, #1]
1a000a0a:	f810 0024 	ldrb.w	r0, [r0, r4, lsl #2]
1a000a0e:	f000 fb55 	bl	1a0010bc <Chip_Clock_SetBaseClock>
    for (uint32_t i = 0; i < (sizeof(InitClkStates) / sizeof(InitClkStates[0])); ++i)
1a000a12:	3401      	adds	r4, #1
1a000a14:	e7e8      	b.n	1a0009e8 <Board_SetupClocking+0x30>
1a000a16:	bf00      	nop
1a000a18:	40043000 	.word	0x40043000
1a000a1c:	0c28cb00 	.word	0x0c28cb00
1a000a20:	1a0075c0 	.word	0x1a0075c0

1a000a24 <Board_SystemInit>:


/* Set up and initialize hardware prior to call to main */
void Board_SystemInit(void)
{
1a000a24:	b508      	push	{r3, lr}
    /* Setup system clocking and memory. This is done early to allow the
       application and tools to clear memory and use scatter loading to
       external memory. */
    Board_SetupMuxing();
1a000a26:	f7ff ffab 	bl	1a000980 <Board_SetupMuxing>
    Board_SetupClocking();
1a000a2a:	f7ff ffc5 	bl	1a0009b8 <Board_SetupClocking>
}
1a000a2e:	bd08      	pop	{r3, pc}

1a000a30 <Chip_UART_GetIndex>:

/* Returns clock index for the peripheral block */
static int Chip_UART_GetIndex(LPC_USART_T *pUART)
{
	uint32_t base = (uint32_t) pUART;
	switch(base) {
1a000a30:	4b09      	ldr	r3, [pc, #36]	; (1a000a58 <Chip_UART_GetIndex+0x28>)
1a000a32:	4298      	cmp	r0, r3
1a000a34:	d009      	beq.n	1a000a4a <Chip_UART_GetIndex+0x1a>
1a000a36:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
1a000a3a:	4298      	cmp	r0, r3
1a000a3c:	d007      	beq.n	1a000a4e <Chip_UART_GetIndex+0x1e>
1a000a3e:	f5a3 2380 	sub.w	r3, r3, #262144	; 0x40000
1a000a42:	4298      	cmp	r0, r3
1a000a44:	d005      	beq.n	1a000a52 <Chip_UART_GetIndex+0x22>
		case LPC_USART0_BASE:
			return 0;
1a000a46:	2000      	movs	r0, #0
1a000a48:	4770      	bx	lr
		case LPC_UART1_BASE:
			return 1;
		case LPC_USART2_BASE:
			return 2;
1a000a4a:	2002      	movs	r0, #2
1a000a4c:	4770      	bx	lr
		case LPC_USART3_BASE:
			return 3;
1a000a4e:	2003      	movs	r0, #3
1a000a50:	4770      	bx	lr
			return 1;
1a000a52:	2001      	movs	r0, #1
		default:
			return 0; /* Should never come here */
	}
}
1a000a54:	4770      	bx	lr
1a000a56:	bf00      	nop
1a000a58:	400c1000 	.word	0x400c1000

1a000a5c <Chip_UART_Init>:
 * Public functions
 ****************************************************************************/

/* Initializes the pUART peripheral */
void Chip_UART_Init(LPC_USART_T *pUART)
{
1a000a5c:	b530      	push	{r4, r5, lr}
1a000a5e:	b083      	sub	sp, #12
1a000a60:	4604      	mov	r4, r0
    volatile uint32_t tmp;

	/* Enable UART clocking. UART base clock(s) must already be enabled */
	Chip_Clock_EnableOpts(UART_PClock[Chip_UART_GetIndex(pUART)], true, true, 1);
1a000a62:	f7ff ffe5 	bl	1a000a30 <Chip_UART_GetIndex>
1a000a66:	2301      	movs	r3, #1
1a000a68:	461a      	mov	r2, r3
1a000a6a:	4619      	mov	r1, r3
1a000a6c:	4d0e      	ldr	r5, [pc, #56]	; (1a000aa8 <Chip_UART_Init+0x4c>)
1a000a6e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
1a000a72:	f000 fb69 	bl	1a001148 <Chip_Clock_EnableOpts>
	pUART->FCR = fcr;
1a000a76:	2307      	movs	r3, #7
1a000a78:	60a3      	str	r3, [r4, #8]
    pUART->TER2 = 0;
1a000a7a:	2300      	movs	r3, #0
1a000a7c:	65e3      	str	r3, [r4, #92]	; 0x5c

    /* Disable Tx */
    Chip_UART_TXDisable(pUART);

    /* Disable interrupts */
	pUART->IER = 0;
1a000a7e:	6063      	str	r3, [r4, #4]
	/* Set LCR to default state */
	pUART->LCR = 0;
1a000a80:	60e3      	str	r3, [r4, #12]
	/* Set ACR to default state */
	pUART->ACR = 0;
1a000a82:	6223      	str	r3, [r4, #32]
    /* Set RS485 control to default state */
	pUART->RS485CTRL = 0;
1a000a84:	64e3      	str	r3, [r4, #76]	; 0x4c
	/* Set RS485 delay timer to default state */
	pUART->RS485DLY = 0;
1a000a86:	6563      	str	r3, [r4, #84]	; 0x54
	/* Set RS485 addr match to default state */
	pUART->RS485ADRMATCH = 0;
1a000a88:	6523      	str	r3, [r4, #80]	; 0x50

    /* Clear MCR */
    if (pUART == LPC_UART1) {
1a000a8a:	4b08      	ldr	r3, [pc, #32]	; (1a000aac <Chip_UART_Init+0x50>)
1a000a8c:	429c      	cmp	r4, r3
1a000a8e:	d006      	beq.n	1a000a9e <Chip_UART_Init+0x42>
	pUART->LCR = config;
1a000a90:	2303      	movs	r3, #3
1a000a92:	60e3      	str	r3, [r4, #12]

	/* Default 8N1, with DLAB disabled */
	Chip_UART_ConfigData(pUART, (UART_LCR_WLEN8 | UART_LCR_SBS_1BIT | UART_LCR_PARITY_DIS));

	/* Disable fractional divider */
	pUART->FDR = 0x10;
1a000a94:	2310      	movs	r3, #16
1a000a96:	62a3      	str	r3, [r4, #40]	; 0x28

    (void) tmp;
1a000a98:	9b01      	ldr	r3, [sp, #4]
}
1a000a9a:	b003      	add	sp, #12
1a000a9c:	bd30      	pop	{r4, r5, pc}
		pUART->MCR = 0;
1a000a9e:	2300      	movs	r3, #0
1a000aa0:	6123      	str	r3, [r4, #16]
		tmp = pUART->MSR;
1a000aa2:	69a3      	ldr	r3, [r4, #24]
1a000aa4:	9301      	str	r3, [sp, #4]
1a000aa6:	e7f3      	b.n	1a000a90 <Chip_UART_Init+0x34>
1a000aa8:	1a007640 	.word	0x1a007640
1a000aac:	40082000 	.word	0x40082000

1a000ab0 <Chip_UART_SetBaudFDR>:
    Chip_UART_ABIntHandler(pUART);
}

/* Determines and sets best dividers to get a target baud rate */
uint32_t Chip_UART_SetBaudFDR(LPC_USART_T *pUART, uint32_t baud)
{
1a000ab0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a000ab4:	b083      	sub	sp, #12
1a000ab6:	4683      	mov	fp, r0
1a000ab8:	4688      	mov	r8, r1
	uint32_t sdiv = 0, sm = 1, sd = 0;
	uint32_t pclk, m, d;
	uint32_t odiff = -1UL; /* old best diff */

	/* Get base clock for the corresponding UART */
	pclk = Chip_Clock_GetRate(UART_BClock[Chip_UART_GetIndex(pUART)]);
1a000aba:	f7ff ffb9 	bl	1a000a30 <Chip_UART_GetIndex>
1a000abe:	4b35      	ldr	r3, [pc, #212]	; (1a000b94 <Chip_UART_SetBaudFDR+0xe4>)
1a000ac0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
1a000ac4:	f000 fb78 	bl	1a0011b8 <Chip_Clock_GetRate>
1a000ac8:	4606      	mov	r6, r0
	uint32_t odiff = -1UL; /* old best diff */
1a000aca:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff

	/* Loop through all possible fractional divider values */
	for (m = 1; odiff && m < 16; m++) {
1a000ace:	2401      	movs	r4, #1
	uint32_t sdiv = 0, sm = 1, sd = 0;
1a000ad0:	2300      	movs	r3, #0
1a000ad2:	9301      	str	r3, [sp, #4]
1a000ad4:	46a2      	mov	sl, r4
1a000ad6:	4699      	mov	r9, r3
	for (m = 1; odiff && m < 16; m++) {
1a000ad8:	e02a      	b.n	1a000b30 <Chip_UART_SetBaudFDR+0x80>
			/* Upper 32-bit of dval has div */
			div = (uint32_t) (dval >> 32);

			/* Closer to next div */
			if ((int)diff < 0) {
				diff = -diff;
1a000ada:	4242      	negs	r2, r0
				div ++;
1a000adc:	1c4b      	adds	r3, r1, #1
1a000ade:	e017      	b.n	1a000b10 <Chip_UART_SetBaudFDR+0x60>
			sd = d;
			sm = m;
			odiff = diff;

			/* On perfect match, break loop */
			if(!diff) {
1a000ae0:	b30a      	cbz	r2, 1a000b26 <Chip_UART_SetBaudFDR+0x76>
			odiff = diff;
1a000ae2:	4617      	mov	r7, r2
			sd = d;
1a000ae4:	9501      	str	r5, [sp, #4]
			sm = m;
1a000ae6:	46a2      	mov	sl, r4
			sdiv = div;
1a000ae8:	4699      	mov	r9, r3
		for (d = 0; d < m; d++) {
1a000aea:	3501      	adds	r5, #1
1a000aec:	42ac      	cmp	r4, r5
1a000aee:	d91e      	bls.n	1a000b2e <Chip_UART_SetBaudFDR+0x7e>
			uint64_t dval = (((uint64_t) pclk << 28) * m) / (baud * (m + d));
1a000af0:	0933      	lsrs	r3, r6, #4
1a000af2:	0730      	lsls	r0, r6, #28
1a000af4:	fba4 0100 	umull	r0, r1, r4, r0
1a000af8:	fb04 1103 	mla	r1, r4, r3, r1
1a000afc:	1962      	adds	r2, r4, r5
1a000afe:	fb08 f202 	mul.w	r2, r8, r2
1a000b02:	2300      	movs	r3, #0
1a000b04:	f001 fb48 	bl	1a002198 <__aeabi_uldivmod>
			diff = (uint32_t) dval;
1a000b08:	4602      	mov	r2, r0
			div = (uint32_t) (dval >> 32);
1a000b0a:	460b      	mov	r3, r1
			if ((int)diff < 0) {
1a000b0c:	2800      	cmp	r0, #0
1a000b0e:	dbe4      	blt.n	1a000ada <Chip_UART_SetBaudFDR+0x2a>
			if (odiff < diff || !div || (div >> 16) || (div < 3 && d)) {
1a000b10:	4297      	cmp	r7, r2
1a000b12:	d3ea      	bcc.n	1a000aea <Chip_UART_SetBaudFDR+0x3a>
1a000b14:	2b00      	cmp	r3, #0
1a000b16:	d0e8      	beq.n	1a000aea <Chip_UART_SetBaudFDR+0x3a>
1a000b18:	0c19      	lsrs	r1, r3, #16
1a000b1a:	d1e6      	bne.n	1a000aea <Chip_UART_SetBaudFDR+0x3a>
1a000b1c:	2b02      	cmp	r3, #2
1a000b1e:	d8df      	bhi.n	1a000ae0 <Chip_UART_SetBaudFDR+0x30>
1a000b20:	2d00      	cmp	r5, #0
1a000b22:	d0dd      	beq.n	1a000ae0 <Chip_UART_SetBaudFDR+0x30>
1a000b24:	e7e1      	b.n	1a000aea <Chip_UART_SetBaudFDR+0x3a>
			odiff = diff;
1a000b26:	4617      	mov	r7, r2
			sd = d;
1a000b28:	9501      	str	r5, [sp, #4]
			sm = m;
1a000b2a:	46a2      	mov	sl, r4
			sdiv = div;
1a000b2c:	4699      	mov	r9, r3
	for (m = 1; odiff && m < 16; m++) {
1a000b2e:	3401      	adds	r4, #1
1a000b30:	b11f      	cbz	r7, 1a000b3a <Chip_UART_SetBaudFDR+0x8a>
1a000b32:	2c0f      	cmp	r4, #15
1a000b34:	d801      	bhi.n	1a000b3a <Chip_UART_SetBaudFDR+0x8a>
		for (d = 0; d < m; d++) {
1a000b36:	2500      	movs	r5, #0
1a000b38:	e7d8      	b.n	1a000aec <Chip_UART_SetBaudFDR+0x3c>
			}
		}
	}

	/* Return 0 if a vaild divisor is not possible */
	if (!sdiv) {
1a000b3a:	f1b9 0f00 	cmp.w	r9, #0
1a000b3e:	d024      	beq.n	1a000b8a <Chip_UART_SetBaudFDR+0xda>
	pUART->LCR |= UART_LCR_DLAB_EN;
1a000b40:	f8db 300c 	ldr.w	r3, [fp, #12]
1a000b44:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a000b48:	f8cb 300c 	str.w	r3, [fp, #12]
1a000b4c:	fa5f f389 	uxtb.w	r3, r9
	pUART->DLL = (uint32_t) dll;
1a000b50:	f8cb 3000 	str.w	r3, [fp]
1a000b54:	f3c9 2307 	ubfx	r3, r9, #8, #8
	pUART->DLM = (uint32_t) dlm;
1a000b58:	f8cb 3004 	str.w	r3, [fp, #4]
	pUART->LCR &= ~UART_LCR_DLAB_EN;
1a000b5c:	f8db 300c 	ldr.w	r3, [fp, #12]
1a000b60:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a000b64:	f8cb 300c 	str.w	r3, [fp, #12]
	Chip_UART_EnableDivisorAccess(pUART);
	Chip_UART_SetDivisorLatches(pUART, UART_LOAD_DLL(sdiv), UART_LOAD_DLM(sdiv));
	Chip_UART_DisableDivisorAccess(pUART);

	/* Set best fractional divider */
	pUART->FDR = (UART_FDR_MULVAL(sm) | UART_FDR_DIVADDVAL(sd));
1a000b68:	ea4f 130a 	mov.w	r3, sl, lsl #4
1a000b6c:	b2db      	uxtb	r3, r3
1a000b6e:	9901      	ldr	r1, [sp, #4]
1a000b70:	f001 020f 	and.w	r2, r1, #15
1a000b74:	4313      	orrs	r3, r2
1a000b76:	f8cb 3028 	str.w	r3, [fp, #40]	; 0x28

	/* Return actual baud rate */
	return (pclk >> 4) * sm / (sdiv * (sm + sd));
1a000b7a:	0933      	lsrs	r3, r6, #4
1a000b7c:	fb0a f303 	mul.w	r3, sl, r3
1a000b80:	448a      	add	sl, r1
1a000b82:	fb09 f90a 	mul.w	r9, r9, sl
1a000b86:	fbb3 f9f9 	udiv	r9, r3, r9
}
1a000b8a:	4648      	mov	r0, r9
1a000b8c:	b003      	add	sp, #12
1a000b8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a000b92:	bf00      	nop
1a000b94:	1a007638 	.word	0x1a007638

1a000b98 <Chip_ADC_GetClockIndex>:
/* Returns clock index for the peripheral block */
STATIC CHIP_CCU_CLK_T Chip_ADC_GetClockIndex(LPC_ADC_T *pADC)
{
	CHIP_CCU_CLK_T clkADC;

	if (pADC == LPC_ADC1) {
1a000b98:	4b03      	ldr	r3, [pc, #12]	; (1a000ba8 <Chip_ADC_GetClockIndex+0x10>)
1a000b9a:	4298      	cmp	r0, r3
1a000b9c:	d001      	beq.n	1a000ba2 <Chip_ADC_GetClockIndex+0xa>
		clkADC = CLK_APB3_ADC1;
	}
	else {
		clkADC = CLK_APB3_ADC0;
1a000b9e:	2003      	movs	r0, #3
	}

	return clkADC;
}
1a000ba0:	4770      	bx	lr
		clkADC = CLK_APB3_ADC1;
1a000ba2:	2004      	movs	r0, #4
1a000ba4:	4770      	bx	lr
1a000ba6:	bf00      	nop
1a000ba8:	400e4000 	.word	0x400e4000

1a000bac <getClkDiv>:

/* Get divider value */
STATIC uint8_t getClkDiv(LPC_ADC_T *pADC, bool burstMode, uint32_t adcRate, uint8_t clks)
{
1a000bac:	b570      	push	{r4, r5, r6, lr}
1a000bae:	460d      	mov	r5, r1
1a000bb0:	4614      	mov	r4, r2
1a000bb2:	461e      	mov	r6, r3
	   A/D converter, which should be less than or equal to 4.5MHz.
	   A fully conversion requires (bits_accuracy+1) of these clocks.
	   ADC Clock = PCLK_ADC0 / (CLKDIV + 1);
	   ADC rate = ADC clock / (the number of clocks required for each conversion);
	 */
	adcBlockFreq = Chip_Clock_GetRate(Chip_ADC_GetClockIndex(pADC));
1a000bb4:	f7ff fff0 	bl	1a000b98 <Chip_ADC_GetClockIndex>
1a000bb8:	f000 fafe 	bl	1a0011b8 <Chip_Clock_GetRate>
	if (burstMode) {
1a000bbc:	b965      	cbnz	r5, 1a000bd8 <getClkDiv+0x2c>
		fullAdcRate = adcRate * clks;
	}
	else {
		fullAdcRate = adcRate * getFullConvClk();
1a000bbe:	eb04 0384 	add.w	r3, r4, r4, lsl #2
1a000bc2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
	}

	/* Get the round value by fomular: (2*A + B)/(2*B) */
	div = ((adcBlockFreq * 2 + fullAdcRate) / (fullAdcRate * 2)) - 1;
1a000bc6:	eb04 0040 	add.w	r0, r4, r0, lsl #1
1a000bca:	0064      	lsls	r4, r4, #1
1a000bcc:	fbb0 f0f4 	udiv	r0, r0, r4
1a000bd0:	b2c0      	uxtb	r0, r0
1a000bd2:	3801      	subs	r0, #1
	return div;
}
1a000bd4:	b2c0      	uxtb	r0, r0
1a000bd6:	bd70      	pop	{r4, r5, r6, pc}
		fullAdcRate = adcRate * clks;
1a000bd8:	fb04 f406 	mul.w	r4, r4, r6
1a000bdc:	e7f3      	b.n	1a000bc6 <getClkDiv+0x1a>
1a000bde:	Address 0x000000001a000bde is out of bounds.


1a000be0 <Chip_ADC_Init>:
 * Public functions
 ****************************************************************************/

/* Initialize the ADC peripheral and the ADC setup structure to default value */
void Chip_ADC_Init(LPC_ADC_T *pADC, ADC_CLOCK_SETUP_T *ADCSetup)
{
1a000be0:	b538      	push	{r3, r4, r5, lr}
1a000be2:	4605      	mov	r5, r0
1a000be4:	460c      	mov	r4, r1
	uint8_t div;
	uint32_t cr = 0;
	uint32_t clk;

	Chip_Clock_EnableOpts(Chip_ADC_GetClockIndex(pADC), true, true, 1);
1a000be6:	f7ff ffd7 	bl	1a000b98 <Chip_ADC_GetClockIndex>
1a000bea:	2301      	movs	r3, #1
1a000bec:	461a      	mov	r2, r3
1a000bee:	4619      	mov	r1, r3
1a000bf0:	f000 faaa 	bl	1a001148 <Chip_Clock_EnableOpts>

	pADC->INTEN = 0;		/* Disable all interrupts */
1a000bf4:	2100      	movs	r1, #0
1a000bf6:	60e9      	str	r1, [r5, #12]

	cr |= ADC_CR_PDN;
	ADCSetup->adcRate = ADC_MAX_SAMPLE_RATE;
1a000bf8:	4a08      	ldr	r2, [pc, #32]	; (1a000c1c <Chip_ADC_Init+0x3c>)
1a000bfa:	6022      	str	r2, [r4, #0]
	ADCSetup->bitsAccuracy = ADC_10BITS;
1a000bfc:	7121      	strb	r1, [r4, #4]
	clk = 11;
	ADCSetup->burstMode = false;
1a000bfe:	7161      	strb	r1, [r4, #5]
	div = getClkDiv(pADC, false, ADCSetup->adcRate, clk);
1a000c00:	230b      	movs	r3, #11
1a000c02:	4628      	mov	r0, r5
1a000c04:	f7ff ffd2 	bl	1a000bac <getClkDiv>
	cr |= ADC_CR_CLKDIV(div);
1a000c08:	0200      	lsls	r0, r0, #8
1a000c0a:	f440 1300 	orr.w	r3, r0, #2097152	; 0x200000
	cr |= ADC_CR_BITACC(ADCSetup->bitsAccuracy);
1a000c0e:	7920      	ldrb	r0, [r4, #4]
1a000c10:	0440      	lsls	r0, r0, #17
1a000c12:	f400 2060 	and.w	r0, r0, #917504	; 0xe0000
1a000c16:	4318      	orrs	r0, r3
	pADC->CR = cr;
1a000c18:	6028      	str	r0, [r5, #0]
}
1a000c1a:	bd38      	pop	{r3, r4, r5, pc}
1a000c1c:	00061a80 	.word	0x00061a80

1a000c20 <Chip_ADC_SetSampleRate>:
	setStartMode(pADC, (uint8_t) mode);
}

/* Set the ADC Sample rate */
void Chip_ADC_SetSampleRate(LPC_ADC_T *pADC, ADC_CLOCK_SETUP_T *ADCSetup, uint32_t rate)
{
1a000c20:	b570      	push	{r4, r5, r6, lr}
1a000c22:	4605      	mov	r5, r0
1a000c24:	460e      	mov	r6, r1
	uint8_t div;
	uint32_t cr;

	cr = pADC->CR & (~ADC_SAMPLE_RATE_CONFIG_MASK);
1a000c26:	6804      	ldr	r4, [r0, #0]
1a000c28:	f424 246f 	bic.w	r4, r4, #978944	; 0xef000
1a000c2c:	f424 6470 	bic.w	r4, r4, #3840	; 0xf00
	ADCSetup->adcRate = rate;
1a000c30:	600a      	str	r2, [r1, #0]
	div = getClkDiv(pADC, ADCSetup->burstMode, rate, (11 - ADCSetup->bitsAccuracy));
1a000c32:	790b      	ldrb	r3, [r1, #4]
1a000c34:	f1c3 030b 	rsb	r3, r3, #11
1a000c38:	b2db      	uxtb	r3, r3
1a000c3a:	7949      	ldrb	r1, [r1, #5]
1a000c3c:	f7ff ffb6 	bl	1a000bac <getClkDiv>
	cr |= ADC_CR_CLKDIV(div);
1a000c40:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
	cr |= ADC_CR_BITACC(ADCSetup->bitsAccuracy);
1a000c44:	7930      	ldrb	r0, [r6, #4]
1a000c46:	0440      	lsls	r0, r0, #17
1a000c48:	f400 2060 	and.w	r0, r0, #917504	; 0xe0000
1a000c4c:	4320      	orrs	r0, r4
	pADC->CR = cr;
1a000c4e:	6028      	str	r0, [r5, #0]
}
1a000c50:	bd70      	pop	{r4, r5, r6, pc}

1a000c52 <Chip_ADC_SetResolution>:

/* Set the ADC accuracy bits */
void Chip_ADC_SetResolution(LPC_ADC_T *pADC, ADC_CLOCK_SETUP_T *ADCSetup, ADC_RESOLUTION_T resolution)
{
1a000c52:	b508      	push	{r3, lr}
	ADCSetup->bitsAccuracy = resolution;
1a000c54:	710a      	strb	r2, [r1, #4]
	Chip_ADC_SetSampleRate(pADC, ADCSetup, ADCSetup->adcRate);
1a000c56:	680a      	ldr	r2, [r1, #0]
1a000c58:	f7ff ffe2 	bl	1a000c20 <Chip_ADC_SetSampleRate>
}
1a000c5c:	bd08      	pop	{r3, pc}
1a000c5e:	Address 0x000000001a000c5e is out of bounds.


1a000c60 <SystemCoreClockUpdate>:


/* Update system core clock rate, should be called if the system has
   a clock rate change */
void SystemCoreClockUpdate(void)
{
1a000c60:	b508      	push	{r3, lr}
	/* CPU core speed */
	SystemCoreClock = Chip_Clock_GetRate(CLK_MX_MXCORE);
1a000c62:	2069      	movs	r0, #105	; 0x69
1a000c64:	f000 faa8 	bl	1a0011b8 <Chip_Clock_GetRate>
1a000c68:	4b01      	ldr	r3, [pc, #4]	; (1a000c70 <SystemCoreClockUpdate+0x10>)
1a000c6a:	6018      	str	r0, [r3, #0]
}
1a000c6c:	bd08      	pop	{r3, pc}
1a000c6e:	bf00      	nop
1a000c70:	10000ad4 	.word	0x10000ad4

1a000c74 <pll_calc_divs>:
		return -val;
	return val;
}

static void pll_calc_divs(uint32_t freq, PLL_PARAM_T *ppll)
{
1a000c74:	b4f0      	push	{r4, r5, r6, r7}

	uint32_t prev = freq;
	int n, m, p;

	/* When direct mode is set FBSEL should be a don't care */
	if (ppll->ctrl & (1 << 7)) {
1a000c76:	680b      	ldr	r3, [r1, #0]
1a000c78:	f013 0f80 	tst.w	r3, #128	; 0x80
1a000c7c:	d002      	beq.n	1a000c84 <pll_calc_divs+0x10>
		ppll->ctrl &= ~(1 << 6);
1a000c7e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
1a000c82:	600b      	str	r3, [r1, #0]
	}
	for (n = 1; n <= 4; n++) {
		for (p = 0; p < 4; p ++) {
1a000c84:	4607      	mov	r7, r0
1a000c86:	2501      	movs	r5, #1
1a000c88:	e03b      	b.n	1a000d02 <pll_calc_divs+0x8e>
			for (m = 1; m <= 256; m++) {
				uint32_t fcco, fout;
				if (ppll->ctrl & (1 << 6)) {
					fcco = ((m << (p + 1)) * ppll->fin) / n;
				} else {
					fcco = (m * ppll->fin) / n;
1a000c8a:	694b      	ldr	r3, [r1, #20]
1a000c8c:	fb03 f302 	mul.w	r3, r3, r2
1a000c90:	fbb3 f3f5 	udiv	r3, r3, r5
1a000c94:	e014      	b.n	1a000cc0 <pll_calc_divs+0x4c>
				}
				if (fcco < PLL_MIN_CCO_FREQ) continue;
				if (fcco > PLL_MAX_CCO_FREQ) break;
				if (ppll->ctrl & (1 << 7)) {
					fout = fcco;
1a000c96:	461c      	mov	r4, r3
1a000c98:	e020      	b.n	1a000cdc <pll_calc_divs+0x68>
		return -val;
1a000c9a:	f1cc 0c00 	rsb	ip, ip, #0
1a000c9e:	e020      	b.n	1a000ce2 <pll_calc_divs+0x6e>
			for (m = 1; m <= 256; m++) {
1a000ca0:	3201      	adds	r2, #1
1a000ca2:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
1a000ca6:	dc26      	bgt.n	1a000cf6 <pll_calc_divs+0x82>
				if (ppll->ctrl & (1 << 6)) {
1a000ca8:	680c      	ldr	r4, [r1, #0]
1a000caa:	f014 0f40 	tst.w	r4, #64	; 0x40
1a000cae:	d0ec      	beq.n	1a000c8a <pll_calc_divs+0x16>
					fcco = ((m << (p + 1)) * ppll->fin) / n;
1a000cb0:	1c73      	adds	r3, r6, #1
1a000cb2:	fa02 fc03 	lsl.w	ip, r2, r3
1a000cb6:	694b      	ldr	r3, [r1, #20]
1a000cb8:	fb03 f30c 	mul.w	r3, r3, ip
1a000cbc:	fbb3 f3f5 	udiv	r3, r3, r5
				if (fcco < PLL_MIN_CCO_FREQ) continue;
1a000cc0:	f8df c04c 	ldr.w	ip, [pc, #76]	; 1a000d10 <pll_calc_divs+0x9c>
1a000cc4:	4563      	cmp	r3, ip
1a000cc6:	d9eb      	bls.n	1a000ca0 <pll_calc_divs+0x2c>
				if (fcco > PLL_MAX_CCO_FREQ) break;
1a000cc8:	f8df c048 	ldr.w	ip, [pc, #72]	; 1a000d14 <pll_calc_divs+0xa0>
1a000ccc:	4563      	cmp	r3, ip
1a000cce:	d812      	bhi.n	1a000cf6 <pll_calc_divs+0x82>
				if (ppll->ctrl & (1 << 7)) {
1a000cd0:	f014 0f80 	tst.w	r4, #128	; 0x80
1a000cd4:	d1df      	bne.n	1a000c96 <pll_calc_divs+0x22>
				} else {
					fout = fcco >> (p + 1);
1a000cd6:	1c74      	adds	r4, r6, #1
1a000cd8:	fa23 f404 	lsr.w	r4, r3, r4
	if (val < 0)
1a000cdc:	ebb0 0c04 	subs.w	ip, r0, r4
1a000ce0:	d4db      	bmi.n	1a000c9a <pll_calc_divs+0x26>
				}

				if (ABS(freq - fout) < prev) {
1a000ce2:	4567      	cmp	r7, ip
1a000ce4:	d9dc      	bls.n	1a000ca0 <pll_calc_divs+0x2c>
					ppll->nsel = n;
1a000ce6:	608d      	str	r5, [r1, #8]
					ppll->psel = p + 1;
1a000ce8:	1c77      	adds	r7, r6, #1
1a000cea:	60cf      	str	r7, [r1, #12]
					ppll->msel = m;
1a000cec:	610a      	str	r2, [r1, #16]
					ppll->fout = fout;
1a000cee:	618c      	str	r4, [r1, #24]
					ppll->fcco = fcco;
1a000cf0:	61cb      	str	r3, [r1, #28]
					prev = ABS(freq - fout);
1a000cf2:	4667      	mov	r7, ip
1a000cf4:	e7d4      	b.n	1a000ca0 <pll_calc_divs+0x2c>
		for (p = 0; p < 4; p ++) {
1a000cf6:	3601      	adds	r6, #1
1a000cf8:	2e03      	cmp	r6, #3
1a000cfa:	dc01      	bgt.n	1a000d00 <pll_calc_divs+0x8c>
			for (m = 1; m <= 256; m++) {
1a000cfc:	2201      	movs	r2, #1
1a000cfe:	e7d0      	b.n	1a000ca2 <pll_calc_divs+0x2e>
	for (n = 1; n <= 4; n++) {
1a000d00:	3501      	adds	r5, #1
1a000d02:	2d04      	cmp	r5, #4
1a000d04:	dc01      	bgt.n	1a000d0a <pll_calc_divs+0x96>
		for (p = 0; p < 4; p ++) {
1a000d06:	2600      	movs	r6, #0
1a000d08:	e7f6      	b.n	1a000cf8 <pll_calc_divs+0x84>
				}
			}
		}
	}
}
1a000d0a:	bcf0      	pop	{r4, r5, r6, r7}
1a000d0c:	4770      	bx	lr
1a000d0e:	bf00      	nop
1a000d10:	094c5eff 	.word	0x094c5eff
1a000d14:	1312d000 	.word	0x1312d000

1a000d18 <pll_get_frac>:

static void pll_get_frac(uint32_t freq, PLL_PARAM_T *ppll)
{
1a000d18:	b5f0      	push	{r4, r5, r6, r7, lr}
1a000d1a:	b099      	sub	sp, #100	; 0x64
1a000d1c:	4605      	mov	r5, r0
1a000d1e:	460c      	mov	r4, r1
	int diff[3];
	PLL_PARAM_T pll[3] = {{0},{0},{0}};
1a000d20:	225c      	movs	r2, #92	; 0x5c
1a000d22:	2100      	movs	r1, #0
1a000d24:	a801      	add	r0, sp, #4
1a000d26:	f001 fc75 	bl	1a002614 <memset>

	/* Try direct mode */
	pll[0].ctrl |= (1 << 7);
1a000d2a:	2380      	movs	r3, #128	; 0x80
1a000d2c:	9300      	str	r3, [sp, #0]
	pll[0].fin = ppll->fin;
1a000d2e:	6963      	ldr	r3, [r4, #20]
1a000d30:	9305      	str	r3, [sp, #20]
	pll[0].srcin = ppll->srcin;
1a000d32:	7923      	ldrb	r3, [r4, #4]
1a000d34:	f88d 3004 	strb.w	r3, [sp, #4]
	pll_calc_divs(freq, &pll[0]);
1a000d38:	4669      	mov	r1, sp
1a000d3a:	4628      	mov	r0, r5
1a000d3c:	f7ff ff9a 	bl	1a000c74 <pll_calc_divs>
	if (pll[0].fout == freq) {
1a000d40:	9b06      	ldr	r3, [sp, #24]
1a000d42:	42ab      	cmp	r3, r5
1a000d44:	d027      	beq.n	1a000d96 <pll_get_frac+0x7e>
	if (val < 0)
1a000d46:	1aeb      	subs	r3, r5, r3
1a000d48:	d42e      	bmi.n	1a000da8 <pll_get_frac+0x90>
		*ppll = pll[0];
		return ;
	}
	diff[0] = ABS(freq - pll[0].fout);
1a000d4a:	461e      	mov	r6, r3

	/* Try non-Integer mode */
	pll[2].ctrl &= ~(1 << 6);			// need to set FBSEL to 0
1a000d4c:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a000d4e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
1a000d52:	9310      	str	r3, [sp, #64]	; 0x40
	pll[2].fin = ppll->fin;
1a000d54:	6963      	ldr	r3, [r4, #20]
1a000d56:	9315      	str	r3, [sp, #84]	; 0x54
	pll[2].srcin = ppll->srcin;
1a000d58:	7923      	ldrb	r3, [r4, #4]
1a000d5a:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
	pll_calc_divs(freq, &pll[2]);
1a000d5e:	a910      	add	r1, sp, #64	; 0x40
1a000d60:	4628      	mov	r0, r5
1a000d62:	f7ff ff87 	bl	1a000c74 <pll_calc_divs>
	if (pll[2].fout == freq) {
1a000d66:	9b16      	ldr	r3, [sp, #88]	; 0x58
1a000d68:	42ab      	cmp	r3, r5
1a000d6a:	d01f      	beq.n	1a000dac <pll_get_frac+0x94>
	if (val < 0)
1a000d6c:	1aeb      	subs	r3, r5, r3
1a000d6e:	d425      	bmi.n	1a000dbc <pll_get_frac+0xa4>
		*ppll = pll[2];
		return ;
	}
	diff[2] = ABS(freq - pll[2].fout);
1a000d70:	461f      	mov	r7, r3
	
	if (freq <= 110000000) {
1a000d72:	4b2b      	ldr	r3, [pc, #172]	; (1a000e20 <pll_get_frac+0x108>)
1a000d74:	429d      	cmp	r5, r3
1a000d76:	d923      	bls.n	1a000dc0 <pll_get_frac+0xa8>
		if (pll[1].fout == freq) {
			*ppll = pll[1];
			return ;
		}
	}
	diff[1] = ABS(freq - pll[1].fout);
1a000d78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
	if (val < 0)
1a000d7a:	1aed      	subs	r5, r5, r3
1a000d7c:	d433      	bmi.n	1a000de6 <pll_get_frac+0xce>

	/* Find the min of 3 and return */
	if (diff[0] <= diff[1]) {
1a000d7e:	42ae      	cmp	r6, r5
1a000d80:	dc3b      	bgt.n	1a000dfa <pll_get_frac+0xe2>
		if (diff[0] <= diff[2]) {
1a000d82:	42be      	cmp	r6, r7
1a000d84:	dc31      	bgt.n	1a000dea <pll_get_frac+0xd2>
			*ppll = pll[0];
1a000d86:	466d      	mov	r5, sp
1a000d88:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000d8a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000d8c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000d90:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a000d94:	e006      	b.n	1a000da4 <pll_get_frac+0x8c>
		*ppll = pll[0];
1a000d96:	466d      	mov	r5, sp
1a000d98:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000d9a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000d9c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000da0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
			*ppll = pll[1];
		} else {
			*ppll = pll[2];
		}
	}
}
1a000da4:	b019      	add	sp, #100	; 0x64
1a000da6:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return -val;
1a000da8:	425b      	negs	r3, r3
1a000daa:	e7ce      	b.n	1a000d4a <pll_get_frac+0x32>
		*ppll = pll[2];
1a000dac:	ad10      	add	r5, sp, #64	; 0x40
1a000dae:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000db0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000db2:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000db6:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
		return ;
1a000dba:	e7f3      	b.n	1a000da4 <pll_get_frac+0x8c>
		return -val;
1a000dbc:	425b      	negs	r3, r3
1a000dbe:	e7d7      	b.n	1a000d70 <pll_get_frac+0x58>
		pll[1].ctrl = (1 << 6);
1a000dc0:	2340      	movs	r3, #64	; 0x40
1a000dc2:	9308      	str	r3, [sp, #32]
		pll[1].fin = ppll->fin;
1a000dc4:	6963      	ldr	r3, [r4, #20]
1a000dc6:	930d      	str	r3, [sp, #52]	; 0x34
		pll_calc_divs(freq, &pll[1]);
1a000dc8:	a908      	add	r1, sp, #32
1a000dca:	4628      	mov	r0, r5
1a000dcc:	f7ff ff52 	bl	1a000c74 <pll_calc_divs>
		if (pll[1].fout == freq) {
1a000dd0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a000dd2:	42ab      	cmp	r3, r5
1a000dd4:	d1d0      	bne.n	1a000d78 <pll_get_frac+0x60>
			*ppll = pll[1];
1a000dd6:	ad08      	add	r5, sp, #32
1a000dd8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000dda:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000ddc:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000de0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
			return ;
1a000de4:	e7de      	b.n	1a000da4 <pll_get_frac+0x8c>
		return -val;
1a000de6:	426d      	negs	r5, r5
1a000de8:	e7c9      	b.n	1a000d7e <pll_get_frac+0x66>
			*ppll = pll[2];
1a000dea:	ad10      	add	r5, sp, #64	; 0x40
1a000dec:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000dee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000df0:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000df4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a000df8:	e7d4      	b.n	1a000da4 <pll_get_frac+0x8c>
		if (diff[1] <= diff[2]) {
1a000dfa:	42af      	cmp	r7, r5
1a000dfc:	db07      	blt.n	1a000e0e <pll_get_frac+0xf6>
			*ppll = pll[1];
1a000dfe:	ad08      	add	r5, sp, #32
1a000e00:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000e02:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000e04:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000e08:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a000e0c:	e7ca      	b.n	1a000da4 <pll_get_frac+0x8c>
			*ppll = pll[2];
1a000e0e:	ad10      	add	r5, sp, #64	; 0x40
1a000e10:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000e12:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000e14:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000e18:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a000e1c:	e7c2      	b.n	1a000da4 <pll_get_frac+0x8c>
1a000e1e:	bf00      	nop
1a000e20:	068e7780 	.word	0x068e7780

1a000e24 <Chip_Clock_FindBaseClock>:
	return Chip_Clock_GetClockInputHz(input) / (div + 1);
}

/* Finds the base clock for the peripheral clock */
static CHIP_CGU_BASE_CLK_T Chip_Clock_FindBaseClock(CHIP_CCU_CLK_T clk)
{
1a000e24:	b430      	push	{r4, r5}
1a000e26:	4605      	mov	r5, r0
	CHIP_CGU_BASE_CLK_T baseclk = CLK_BASE_NONE;
	int i = 0;
1a000e28:	2300      	movs	r3, #0
	CHIP_CGU_BASE_CLK_T baseclk = CLK_BASE_NONE;
1a000e2a:	201c      	movs	r0, #28

	while ((baseclk == CLK_BASE_NONE) && (periph_to_base[i].clkbase != baseclk)) {
1a000e2c:	e000      	b.n	1a000e30 <Chip_Clock_FindBaseClock+0xc>
		if ((clk >= periph_to_base[i].clkstart) && (clk <= periph_to_base[i].clkend)) {
			baseclk = periph_to_base[i].clkbase;
		}
		else {
			i++;
1a000e2e:	3301      	adds	r3, #1
	while ((baseclk == CLK_BASE_NONE) && (periph_to_base[i].clkbase != baseclk)) {
1a000e30:	281c      	cmp	r0, #28
1a000e32:	d118      	bne.n	1a000e66 <Chip_Clock_FindBaseClock+0x42>
1a000e34:	eb03 0243 	add.w	r2, r3, r3, lsl #1
1a000e38:	0051      	lsls	r1, r2, #1
1a000e3a:	4a0c      	ldr	r2, [pc, #48]	; (1a000e6c <Chip_Clock_FindBaseClock+0x48>)
1a000e3c:	440a      	add	r2, r1
1a000e3e:	7914      	ldrb	r4, [r2, #4]
1a000e40:	4284      	cmp	r4, r0
1a000e42:	d010      	beq.n	1a000e66 <Chip_Clock_FindBaseClock+0x42>
		if ((clk >= periph_to_base[i].clkstart) && (clk <= periph_to_base[i].clkend)) {
1a000e44:	eb03 0143 	add.w	r1, r3, r3, lsl #1
1a000e48:	004a      	lsls	r2, r1, #1
1a000e4a:	4908      	ldr	r1, [pc, #32]	; (1a000e6c <Chip_Clock_FindBaseClock+0x48>)
1a000e4c:	5a8a      	ldrh	r2, [r1, r2]
1a000e4e:	42aa      	cmp	r2, r5
1a000e50:	d8ed      	bhi.n	1a000e2e <Chip_Clock_FindBaseClock+0xa>
1a000e52:	eb03 0243 	add.w	r2, r3, r3, lsl #1
1a000e56:	0051      	lsls	r1, r2, #1
1a000e58:	4a04      	ldr	r2, [pc, #16]	; (1a000e6c <Chip_Clock_FindBaseClock+0x48>)
1a000e5a:	440a      	add	r2, r1
1a000e5c:	8852      	ldrh	r2, [r2, #2]
1a000e5e:	42aa      	cmp	r2, r5
1a000e60:	d3e5      	bcc.n	1a000e2e <Chip_Clock_FindBaseClock+0xa>
			baseclk = periph_to_base[i].clkbase;
1a000e62:	4620      	mov	r0, r4
1a000e64:	e7e4      	b.n	1a000e30 <Chip_Clock_FindBaseClock+0xc>
		}
	}

	return baseclk;
}
1a000e66:	bc30      	pop	{r4, r5}
1a000e68:	4770      	bx	lr
1a000e6a:	bf00      	nop
1a000e6c:	1a007654 	.word	0x1a007654

1a000e70 <Chip_Clock_EnableCrystal>:
 * Public functions
 ****************************************************************************/

/* Enables the crystal oscillator */
void Chip_Clock_EnableCrystal(void)
{
1a000e70:	b082      	sub	sp, #8
	volatile uint32_t delay = 1000;
1a000e72:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
1a000e76:	9301      	str	r3, [sp, #4]

	uint32_t OldCrystalConfig = LPC_CGU->XTAL_OSC_CTRL;
1a000e78:	4a0d      	ldr	r2, [pc, #52]	; (1a000eb0 <Chip_Clock_EnableCrystal+0x40>)
1a000e7a:	6993      	ldr	r3, [r2, #24]

	/* Clear bypass mode */
	OldCrystalConfig &= (~2);
1a000e7c:	f023 0102 	bic.w	r1, r3, #2
	if (OldCrystalConfig != LPC_CGU->XTAL_OSC_CTRL) {
1a000e80:	6992      	ldr	r2, [r2, #24]
1a000e82:	428a      	cmp	r2, r1
1a000e84:	d001      	beq.n	1a000e8a <Chip_Clock_EnableCrystal+0x1a>
		LPC_CGU->XTAL_OSC_CTRL = OldCrystalConfig;
1a000e86:	4a0a      	ldr	r2, [pc, #40]	; (1a000eb0 <Chip_Clock_EnableCrystal+0x40>)
1a000e88:	6191      	str	r1, [r2, #24]
	}

	/* Enable crystal oscillator */
	OldCrystalConfig &= (~1);
1a000e8a:	f023 0303 	bic.w	r3, r3, #3
	if (OscRateIn >= 20000000) {
1a000e8e:	4a09      	ldr	r2, [pc, #36]	; (1a000eb4 <Chip_Clock_EnableCrystal+0x44>)
1a000e90:	6811      	ldr	r1, [r2, #0]
1a000e92:	4a09      	ldr	r2, [pc, #36]	; (1a000eb8 <Chip_Clock_EnableCrystal+0x48>)
1a000e94:	4291      	cmp	r1, r2
1a000e96:	d901      	bls.n	1a000e9c <Chip_Clock_EnableCrystal+0x2c>
		OldCrystalConfig |= 4;	/* Set high frequency mode */
1a000e98:	f043 0304 	orr.w	r3, r3, #4

	}
	LPC_CGU->XTAL_OSC_CTRL = OldCrystalConfig;
1a000e9c:	4a04      	ldr	r2, [pc, #16]	; (1a000eb0 <Chip_Clock_EnableCrystal+0x40>)
1a000e9e:	6193      	str	r3, [r2, #24]

	/* Delay for 250uSec */
	while(delay--) {}
1a000ea0:	9b01      	ldr	r3, [sp, #4]
1a000ea2:	1e5a      	subs	r2, r3, #1
1a000ea4:	9201      	str	r2, [sp, #4]
1a000ea6:	2b00      	cmp	r3, #0
1a000ea8:	d1fa      	bne.n	1a000ea0 <Chip_Clock_EnableCrystal+0x30>
}
1a000eaa:	b002      	add	sp, #8
1a000eac:	4770      	bx	lr
1a000eae:	bf00      	nop
1a000eb0:	40050000 	.word	0x40050000
1a000eb4:	1a0075bc 	.word	0x1a0075bc
1a000eb8:	01312cff 	.word	0x01312cff

1a000ebc <Chip_Clock_GetDividerSource>:
}

/* Gets a CGU clock divider source */
CHIP_CGU_CLKIN_T Chip_Clock_GetDividerSource(CHIP_CGU_IDIV_T Divider)
{
	uint32_t reg = LPC_CGU->IDIV_CTRL[Divider];
1a000ebc:	3012      	adds	r0, #18
1a000ebe:	4b05      	ldr	r3, [pc, #20]	; (1a000ed4 <Chip_Clock_GetDividerSource+0x18>)
1a000ec0:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]

	if (reg & 1) {	/* divider is powered down */
1a000ec4:	f010 0f01 	tst.w	r0, #1
1a000ec8:	d102      	bne.n	1a000ed0 <Chip_Clock_GetDividerSource+0x14>
		return CLKINPUT_PD;
	}

	return (CHIP_CGU_CLKIN_T) ((reg >> 24) & 0x1F);
1a000eca:	f3c0 6004 	ubfx	r0, r0, #24, #5
1a000ece:	4770      	bx	lr
		return CLKINPUT_PD;
1a000ed0:	2011      	movs	r0, #17
}
1a000ed2:	4770      	bx	lr
1a000ed4:	40050000 	.word	0x40050000

1a000ed8 <Chip_Clock_GetDividerDivisor>:

/* Gets a CGU clock divider divisor */
uint32_t Chip_Clock_GetDividerDivisor(CHIP_CGU_IDIV_T Divider)
{
	return (CHIP_CGU_CLKIN_T) ((LPC_CGU->IDIV_CTRL[Divider] >> 2) & CHIP_CGU_IDIV_MASK(Divider));
1a000ed8:	f100 0212 	add.w	r2, r0, #18
1a000edc:	4b03      	ldr	r3, [pc, #12]	; (1a000eec <Chip_Clock_GetDividerDivisor+0x14>)
1a000ede:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1a000ee2:	4b03      	ldr	r3, [pc, #12]	; (1a000ef0 <Chip_Clock_GetDividerDivisor+0x18>)
1a000ee4:	5c18      	ldrb	r0, [r3, r0]
}
1a000ee6:	ea00 0092 	and.w	r0, r0, r2, lsr #2
1a000eea:	4770      	bx	lr
1a000eec:	40050000 	.word	0x40050000
1a000ef0:	1a00764c 	.word	0x1a00764c

1a000ef4 <Chip_Clock_GetClockInputHz>:

/* Returns the frequency of the specified input clock source */
uint32_t Chip_Clock_GetClockInputHz(CHIP_CGU_CLKIN_T input)
{
1a000ef4:	b508      	push	{r3, lr}
	uint32_t rate = 0;

	switch (input) {
1a000ef6:	2810      	cmp	r0, #16
1a000ef8:	d80a      	bhi.n	1a000f10 <Chip_Clock_GetClockInputHz+0x1c>
1a000efa:	e8df f000 	tbb	[pc, r0]
1a000efe:	0b42      	.short	0x0b42
1a000f00:	091f160d 	.word	0x091f160d
1a000f04:	2b282522 	.word	0x2b282522
1a000f08:	322e0909 	.word	0x322e0909
1a000f0c:	3a36      	.short	0x3a36
1a000f0e:	3e          	.byte	0x3e
1a000f0f:	00          	.byte	0x00
	uint32_t rate = 0;
1a000f10:	2000      	movs	r0, #0
1a000f12:	e038      	b.n	1a000f86 <Chip_Clock_GetClockInputHz+0x92>
	case CLKIN_32K:
		rate = CRYSTAL_32K_FREQ_IN;
		break;

	case CLKIN_IRC:
		rate = CGU_IRC_FREQ;
1a000f14:	481e      	ldr	r0, [pc, #120]	; (1a000f90 <Chip_Clock_GetClockInputHz+0x9c>)
		break;
1a000f16:	e036      	b.n	1a000f86 <Chip_Clock_GetClockInputHz+0x92>

	case CLKIN_ENET_RX:
		if ((LPC_CREG->CREG6 & 0x07) != 0x4) {
1a000f18:	4b1e      	ldr	r3, [pc, #120]	; (1a000f94 <Chip_Clock_GetClockInputHz+0xa0>)
1a000f1a:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
1a000f1e:	f003 0307 	and.w	r3, r3, #7
1a000f22:	2b04      	cmp	r3, #4
1a000f24:	d130      	bne.n	1a000f88 <Chip_Clock_GetClockInputHz+0x94>
	uint32_t rate = 0;
1a000f26:	2000      	movs	r0, #0
1a000f28:	e02d      	b.n	1a000f86 <Chip_Clock_GetClockInputHz+0x92>
			rate = 25000000;
		}
		break;

	case CLKIN_ENET_TX:
		if ((LPC_CREG->CREG6 & 0x07) != 0x4) {
1a000f2a:	4b1a      	ldr	r3, [pc, #104]	; (1a000f94 <Chip_Clock_GetClockInputHz+0xa0>)
1a000f2c:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
1a000f30:	f003 0307 	and.w	r3, r3, #7
1a000f34:	2b04      	cmp	r3, #4
1a000f36:	d029      	beq.n	1a000f8c <Chip_Clock_GetClockInputHz+0x98>
			rate = 25000000; /* MII uses 25 MHz */
1a000f38:	4817      	ldr	r0, [pc, #92]	; (1a000f98 <Chip_Clock_GetClockInputHz+0xa4>)
1a000f3a:	e024      	b.n	1a000f86 <Chip_Clock_GetClockInputHz+0x92>
			rate = 50000000; /* RMII uses 50 MHz */
		}
		break;

	case CLKIN_CLKIN:
		rate = ExtRateIn;
1a000f3c:	4b17      	ldr	r3, [pc, #92]	; (1a000f9c <Chip_Clock_GetClockInputHz+0xa8>)
1a000f3e:	6818      	ldr	r0, [r3, #0]
		break;
1a000f40:	e021      	b.n	1a000f86 <Chip_Clock_GetClockInputHz+0x92>

	case CLKIN_CRYSTAL:
		rate = OscRateIn;
1a000f42:	4b17      	ldr	r3, [pc, #92]	; (1a000fa0 <Chip_Clock_GetClockInputHz+0xac>)
1a000f44:	6818      	ldr	r0, [r3, #0]
		break;
1a000f46:	e01e      	b.n	1a000f86 <Chip_Clock_GetClockInputHz+0x92>

	case CLKIN_USBPLL:
		rate = audio_usb_pll_freq[CGU_USB_PLL];
1a000f48:	4b16      	ldr	r3, [pc, #88]	; (1a000fa4 <Chip_Clock_GetClockInputHz+0xb0>)
1a000f4a:	6818      	ldr	r0, [r3, #0]
		break;
1a000f4c:	e01b      	b.n	1a000f86 <Chip_Clock_GetClockInputHz+0x92>

	case CLKIN_AUDIOPLL:
		rate = audio_usb_pll_freq[CGU_AUDIO_PLL];
1a000f4e:	4b15      	ldr	r3, [pc, #84]	; (1a000fa4 <Chip_Clock_GetClockInputHz+0xb0>)
1a000f50:	6858      	ldr	r0, [r3, #4]
		break;
1a000f52:	e018      	b.n	1a000f86 <Chip_Clock_GetClockInputHz+0x92>

	case CLKIN_MAINPLL:
		rate = Chip_Clock_GetMainPLLHz();
1a000f54:	f000 f86a 	bl	1a00102c <Chip_Clock_GetMainPLLHz>
		break;
1a000f58:	e015      	b.n	1a000f86 <Chip_Clock_GetClockInputHz+0x92>

	case CLKIN_IDIVA:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_A);
1a000f5a:	2100      	movs	r1, #0
1a000f5c:	f000 f89c 	bl	1a001098 <Chip_Clock_GetDivRate>
		break;
1a000f60:	e011      	b.n	1a000f86 <Chip_Clock_GetClockInputHz+0x92>

	case CLKIN_IDIVB:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_B);
1a000f62:	2101      	movs	r1, #1
1a000f64:	f000 f898 	bl	1a001098 <Chip_Clock_GetDivRate>
		break;
1a000f68:	e00d      	b.n	1a000f86 <Chip_Clock_GetClockInputHz+0x92>

	case CLKIN_IDIVC:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_C);
1a000f6a:	2102      	movs	r1, #2
1a000f6c:	f000 f894 	bl	1a001098 <Chip_Clock_GetDivRate>
		break;
1a000f70:	e009      	b.n	1a000f86 <Chip_Clock_GetClockInputHz+0x92>

	case CLKIN_IDIVD:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_D);
1a000f72:	2103      	movs	r1, #3
1a000f74:	f000 f890 	bl	1a001098 <Chip_Clock_GetDivRate>
		break;
1a000f78:	e005      	b.n	1a000f86 <Chip_Clock_GetClockInputHz+0x92>

	case CLKIN_IDIVE:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_E);
1a000f7a:	2104      	movs	r1, #4
1a000f7c:	f000 f88c 	bl	1a001098 <Chip_Clock_GetDivRate>
		break;
1a000f80:	e001      	b.n	1a000f86 <Chip_Clock_GetClockInputHz+0x92>
		rate = CRYSTAL_32K_FREQ_IN;
1a000f82:	f44f 4000 	mov.w	r0, #32768	; 0x8000
	default:
		break;
	}

	return rate;
}
1a000f86:	bd08      	pop	{r3, pc}
			rate = 25000000;
1a000f88:	4803      	ldr	r0, [pc, #12]	; (1a000f98 <Chip_Clock_GetClockInputHz+0xa4>)
1a000f8a:	e7fc      	b.n	1a000f86 <Chip_Clock_GetClockInputHz+0x92>
			rate = 50000000; /* RMII uses 50 MHz */
1a000f8c:	4806      	ldr	r0, [pc, #24]	; (1a000fa8 <Chip_Clock_GetClockInputHz+0xb4>)
	return rate;
1a000f8e:	e7fa      	b.n	1a000f86 <Chip_Clock_GetClockInputHz+0x92>
1a000f90:	00b71b00 	.word	0x00b71b00
1a000f94:	40043000 	.word	0x40043000
1a000f98:	017d7840 	.word	0x017d7840
1a000f9c:	1a007590 	.word	0x1a007590
1a000fa0:	1a0075bc 	.word	0x1a0075bc
1a000fa4:	10000a80 	.word	0x10000a80
1a000fa8:	02faf080 	.word	0x02faf080

1a000fac <Chip_Clock_CalcMainPLLValue>:
{
1a000fac:	b538      	push	{r3, r4, r5, lr}
1a000fae:	4605      	mov	r5, r0
1a000fb0:	460c      	mov	r4, r1
	ppll->fin = Chip_Clock_GetClockInputHz(ppll->srcin);
1a000fb2:	7908      	ldrb	r0, [r1, #4]
1a000fb4:	f7ff ff9e 	bl	1a000ef4 <Chip_Clock_GetClockInputHz>
1a000fb8:	6160      	str	r0, [r4, #20]
	if (freq > MAX_CLOCK_FREQ || freq < (PLL_MIN_CCO_FREQ / 16) || !ppll->fin) {
1a000fba:	4b19      	ldr	r3, [pc, #100]	; (1a001020 <Chip_Clock_CalcMainPLLValue+0x74>)
1a000fbc:	442b      	add	r3, r5
1a000fbe:	4a19      	ldr	r2, [pc, #100]	; (1a001024 <Chip_Clock_CalcMainPLLValue+0x78>)
1a000fc0:	4293      	cmp	r3, r2
1a000fc2:	d821      	bhi.n	1a001008 <Chip_Clock_CalcMainPLLValue+0x5c>
1a000fc4:	b318      	cbz	r0, 1a00100e <Chip_Clock_CalcMainPLLValue+0x62>
	ppll->ctrl = 1 << 7; /* Enable direct mode [If possible] */
1a000fc6:	2380      	movs	r3, #128	; 0x80
1a000fc8:	6023      	str	r3, [r4, #0]
	ppll->nsel = 0;
1a000fca:	2300      	movs	r3, #0
1a000fcc:	60a3      	str	r3, [r4, #8]
	ppll->psel = 0;
1a000fce:	60e3      	str	r3, [r4, #12]
	ppll->msel = freq / ppll->fin;
1a000fd0:	fbb5 f3f0 	udiv	r3, r5, r0
1a000fd4:	6123      	str	r3, [r4, #16]
	if (freq < PLL_MIN_CCO_FREQ || ppll->msel * ppll->fin != freq) {
1a000fd6:	4a14      	ldr	r2, [pc, #80]	; (1a001028 <Chip_Clock_CalcMainPLLValue+0x7c>)
1a000fd8:	4295      	cmp	r5, r2
1a000fda:	d903      	bls.n	1a000fe4 <Chip_Clock_CalcMainPLLValue+0x38>
1a000fdc:	fb03 f000 	mul.w	r0, r3, r0
1a000fe0:	42a8      	cmp	r0, r5
1a000fe2:	d007      	beq.n	1a000ff4 <Chip_Clock_CalcMainPLLValue+0x48>
		pll_get_frac(freq, ppll);
1a000fe4:	4621      	mov	r1, r4
1a000fe6:	4628      	mov	r0, r5
1a000fe8:	f7ff fe96 	bl	1a000d18 <pll_get_frac>
		if (!ppll->nsel) {
1a000fec:	68a3      	ldr	r3, [r4, #8]
1a000fee:	b18b      	cbz	r3, 1a001014 <Chip_Clock_CalcMainPLLValue+0x68>
		ppll->nsel --;
1a000ff0:	3b01      	subs	r3, #1
1a000ff2:	60a3      	str	r3, [r4, #8]
	if (ppll->msel == 0) {
1a000ff4:	6923      	ldr	r3, [r4, #16]
1a000ff6:	b183      	cbz	r3, 1a00101a <Chip_Clock_CalcMainPLLValue+0x6e>
	if (ppll->psel) {
1a000ff8:	68e2      	ldr	r2, [r4, #12]
1a000ffa:	b10a      	cbz	r2, 1a001000 <Chip_Clock_CalcMainPLLValue+0x54>
		ppll->psel --;
1a000ffc:	3a01      	subs	r2, #1
1a000ffe:	60e2      	str	r2, [r4, #12]
	ppll->msel --;
1a001000:	3b01      	subs	r3, #1
1a001002:	6123      	str	r3, [r4, #16]
	return 0;
1a001004:	2000      	movs	r0, #0
}
1a001006:	bd38      	pop	{r3, r4, r5, pc}
		return -1;
1a001008:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a00100c:	e7fb      	b.n	1a001006 <Chip_Clock_CalcMainPLLValue+0x5a>
1a00100e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a001012:	e7f8      	b.n	1a001006 <Chip_Clock_CalcMainPLLValue+0x5a>
			return -1;
1a001014:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a001018:	e7f5      	b.n	1a001006 <Chip_Clock_CalcMainPLLValue+0x5a>
		return - 1;
1a00101a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a00101e:	e7f2      	b.n	1a001006 <Chip_Clock_CalcMainPLLValue+0x5a>
1a001020:	ff6b3a10 	.word	0xff6b3a10
1a001024:	0b940510 	.word	0x0b940510
1a001028:	094c5eff 	.word	0x094c5eff

1a00102c <Chip_Clock_GetMainPLLHz>:
{
1a00102c:	b530      	push	{r4, r5, lr}
1a00102e:	b083      	sub	sp, #12
	uint32_t PLLReg = LPC_CGU->PLL1_CTRL;
1a001030:	4d17      	ldr	r5, [pc, #92]	; (1a001090 <Chip_Clock_GetMainPLLHz+0x64>)
1a001032:	6c6c      	ldr	r4, [r5, #68]	; 0x44
	uint32_t freq = Chip_Clock_GetClockInputHz((CHIP_CGU_CLKIN_T) ((PLLReg >> 24) & 0xF));
1a001034:	f3c4 6003 	ubfx	r0, r4, #24, #4
1a001038:	f7ff ff5c 	bl	1a000ef4 <Chip_Clock_GetClockInputHz>
	const uint8_t ptab[] = {1, 2, 4, 8};
1a00103c:	4b15      	ldr	r3, [pc, #84]	; (1a001094 <Chip_Clock_GetMainPLLHz+0x68>)
1a00103e:	681b      	ldr	r3, [r3, #0]
1a001040:	9301      	str	r3, [sp, #4]
	if (!(LPC_CGU->PLL1_STAT & 1)) {
1a001042:	6c2b      	ldr	r3, [r5, #64]	; 0x40
1a001044:	f013 0f01 	tst.w	r3, #1
1a001048:	d01f      	beq.n	1a00108a <Chip_Clock_GetMainPLLHz+0x5e>
	msel = (PLLReg >> 16) & 0xFF;
1a00104a:	f3c4 4307 	ubfx	r3, r4, #16, #8
	nsel = (PLLReg >> 12) & 0x3;
1a00104e:	f3c4 3201 	ubfx	r2, r4, #12, #2
	psel = (PLLReg >> 8) & 0x3;
1a001052:	f3c4 2101 	ubfx	r1, r4, #8, #2
	fbsel = (PLLReg >> 6) & 0x1;
1a001056:	f3c4 1580 	ubfx	r5, r4, #6, #1
	m = msel + 1;
1a00105a:	3301      	adds	r3, #1
	n = nsel + 1;
1a00105c:	3201      	adds	r2, #1
	p = ptab[psel];
1a00105e:	f10d 0c08 	add.w	ip, sp, #8
1a001062:	4461      	add	r1, ip
1a001064:	f811 1c04 	ldrb.w	r1, [r1, #-4]
	if (direct || fbsel) {
1a001068:	f014 0f80 	tst.w	r4, #128	; 0x80
1a00106c:	d108      	bne.n	1a001080 <Chip_Clock_GetMainPLLHz+0x54>
1a00106e:	b93d      	cbnz	r5, 1a001080 <Chip_Clock_GetMainPLLHz+0x54>
	return (m / (2 * p)) * (freq / n);
1a001070:	0049      	lsls	r1, r1, #1
1a001072:	fbb3 f3f1 	udiv	r3, r3, r1
1a001076:	fbb0 f0f2 	udiv	r0, r0, r2
1a00107a:	fb00 f003 	mul.w	r0, r0, r3
1a00107e:	e005      	b.n	1a00108c <Chip_Clock_GetMainPLLHz+0x60>
		return m * (freq / n);
1a001080:	fbb0 f0f2 	udiv	r0, r0, r2
1a001084:	fb03 f000 	mul.w	r0, r3, r0
1a001088:	e000      	b.n	1a00108c <Chip_Clock_GetMainPLLHz+0x60>
		return 0;
1a00108a:	2000      	movs	r0, #0
}
1a00108c:	b003      	add	sp, #12
1a00108e:	bd30      	pop	{r4, r5, pc}
1a001090:	40050000 	.word	0x40050000
1a001094:	1a007648 	.word	0x1a007648

1a001098 <Chip_Clock_GetDivRate>:
{
1a001098:	b538      	push	{r3, r4, r5, lr}
1a00109a:	460c      	mov	r4, r1
	input = Chip_Clock_GetDividerSource(divider);
1a00109c:	4608      	mov	r0, r1
1a00109e:	f7ff ff0d 	bl	1a000ebc <Chip_Clock_GetDividerSource>
1a0010a2:	4605      	mov	r5, r0
	div = Chip_Clock_GetDividerDivisor(divider);
1a0010a4:	4620      	mov	r0, r4
1a0010a6:	f7ff ff17 	bl	1a000ed8 <Chip_Clock_GetDividerDivisor>
1a0010aa:	4604      	mov	r4, r0
	return Chip_Clock_GetClockInputHz(input) / (div + 1);
1a0010ac:	4628      	mov	r0, r5
1a0010ae:	f7ff ff21 	bl	1a000ef4 <Chip_Clock_GetClockInputHz>
1a0010b2:	3401      	adds	r4, #1
}
1a0010b4:	fbb0 f0f4 	udiv	r0, r0, r4
1a0010b8:	bd38      	pop	{r3, r4, r5, pc}
1a0010ba:	Address 0x000000001a0010ba is out of bounds.


1a0010bc <Chip_Clock_SetBaseClock>:
	return Chip_Clock_GetClockInputHz(Chip_Clock_GetBaseClock(clock));
}

/* Sets a CGU Base Clock clock source */
void Chip_Clock_SetBaseClock(CHIP_CGU_BASE_CLK_T BaseClock, CHIP_CGU_CLKIN_T Input, bool autoblocken, bool powerdn)
{
1a0010bc:	b430      	push	{r4, r5}
	uint32_t reg = LPC_CGU->BASE_CLK[BaseClock];
1a0010be:	f100 0416 	add.w	r4, r0, #22
1a0010c2:	00a4      	lsls	r4, r4, #2
1a0010c4:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
1a0010c8:	f504 24a0 	add.w	r4, r4, #327680	; 0x50000
1a0010cc:	6864      	ldr	r4, [r4, #4]

	if (BaseClock < CLK_BASE_NONE) {
1a0010ce:	281b      	cmp	r0, #27
1a0010d0:	d813      	bhi.n	1a0010fa <Chip_Clock_SetBaseClock+0x3e>
		if (Input != CLKINPUT_PD) {
1a0010d2:	2911      	cmp	r1, #17
1a0010d4:	d01a      	beq.n	1a00110c <Chip_Clock_SetBaseClock+0x50>
			/* Mask off fields we plan to update */
			reg &= ~((0x1F << 24) | 1 | (1 << 11));
1a0010d6:	4d0e      	ldr	r5, [pc, #56]	; (1a001110 <Chip_Clock_SetBaseClock+0x54>)
1a0010d8:	4025      	ands	r5, r4

			if (autoblocken) {
1a0010da:	b10a      	cbz	r2, 1a0010e0 <Chip_Clock_SetBaseClock+0x24>
				reg |= (1 << 11);
1a0010dc:	f445 6500 	orr.w	r5, r5, #2048	; 0x800
			}
			if (powerdn) {
1a0010e0:	b10b      	cbz	r3, 1a0010e6 <Chip_Clock_SetBaseClock+0x2a>
				reg |= (1 << 0);
1a0010e2:	f045 0501 	orr.w	r5, r5, #1
			}

			/* Set clock source */
			reg |= (Input << 24);
1a0010e6:	ea45 6501 	orr.w	r5, r5, r1, lsl #24

			LPC_CGU->BASE_CLK[BaseClock] = reg;
1a0010ea:	3016      	adds	r0, #22
1a0010ec:	0080      	lsls	r0, r0, #2
1a0010ee:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a0010f2:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a0010f6:	6045      	str	r5, [r0, #4]
1a0010f8:	e008      	b.n	1a00110c <Chip_Clock_SetBaseClock+0x50>
		}
	}
	else {
		LPC_CGU->BASE_CLK[BaseClock] = reg | 1;	/* Power down this base clock */
1a0010fa:	f044 0401 	orr.w	r4, r4, #1
1a0010fe:	3016      	adds	r0, #22
1a001100:	0080      	lsls	r0, r0, #2
1a001102:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a001106:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a00110a:	6044      	str	r4, [r0, #4]
	}
}
1a00110c:	bc30      	pop	{r4, r5}
1a00110e:	4770      	bx	lr
1a001110:	e0fff7fe 	.word	0xe0fff7fe

1a001114 <Chip_Clock_GetBaseClock>:
/* Gets a CGU Base Clock clock source */
CHIP_CGU_CLKIN_T Chip_Clock_GetBaseClock(CHIP_CGU_BASE_CLK_T BaseClock)
{
	uint32_t reg;

	if (BaseClock >= CLK_BASE_NONE) {
1a001114:	281b      	cmp	r0, #27
1a001116:	d80c      	bhi.n	1a001132 <Chip_Clock_GetBaseClock+0x1e>
		return CLKINPUT_PD;
	}

	reg = LPC_CGU->BASE_CLK[BaseClock];
1a001118:	3016      	adds	r0, #22
1a00111a:	0080      	lsls	r0, r0, #2
1a00111c:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a001120:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a001124:	6840      	ldr	r0, [r0, #4]

	/* base clock is powered down? */
	if (reg & 1) {
1a001126:	f010 0f01 	tst.w	r0, #1
1a00112a:	d104      	bne.n	1a001136 <Chip_Clock_GetBaseClock+0x22>
		return CLKINPUT_PD;
	}

	return (CHIP_CGU_CLKIN_T) ((reg >> 24) & 0x1F);
1a00112c:	f3c0 6004 	ubfx	r0, r0, #24, #5
1a001130:	4770      	bx	lr
		return CLKINPUT_PD;
1a001132:	2011      	movs	r0, #17
1a001134:	4770      	bx	lr
		return CLKINPUT_PD;
1a001136:	2011      	movs	r0, #17
}
1a001138:	4770      	bx	lr

1a00113a <Chip_Clock_GetBaseClocktHz>:
{
1a00113a:	b508      	push	{r3, lr}
	return Chip_Clock_GetClockInputHz(Chip_Clock_GetBaseClock(clock));
1a00113c:	f7ff ffea 	bl	1a001114 <Chip_Clock_GetBaseClock>
1a001140:	f7ff fed8 	bl	1a000ef4 <Chip_Clock_GetClockInputHz>
}
1a001144:	bd08      	pop	{r3, pc}
1a001146:	Address 0x000000001a001146 is out of bounds.


1a001148 <Chip_Clock_EnableOpts>:
/* Enables a peripheral clock and sets clock states */
void Chip_Clock_EnableOpts(CHIP_CCU_CLK_T clk, bool autoen, bool wakeupen, int div)
{
	uint32_t reg = 1;

	if (autoen) {
1a001148:	b969      	cbnz	r1, 1a001166 <Chip_Clock_EnableOpts+0x1e>
	uint32_t reg = 1;
1a00114a:	2101      	movs	r1, #1
		reg |= (1 << 1);
	}
	if (wakeupen) {
1a00114c:	b10a      	cbz	r2, 1a001152 <Chip_Clock_EnableOpts+0xa>
		reg |= (1 << 2);
1a00114e:	f041 0104 	orr.w	r1, r1, #4
	}

	/* Not all clocks support a divider, but we won't check that here. Only
	   dividers of 1 and 2 are allowed. Assume 1 if not 2 */
	if (div == 2) {
1a001152:	2b02      	cmp	r3, #2
1a001154:	d009      	beq.n	1a00116a <Chip_Clock_EnableOpts+0x22>
		reg |= (1 << 5);
	}

	/* Setup peripheral clock and start running */
	if (clk >= CLK_CCU2_START) {
1a001156:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a00115a:	d209      	bcs.n	1a001170 <Chip_Clock_EnableOpts+0x28>
		LPC_CCU2->CLKCCU[clk - CLK_CCU2_START].CFG = reg;
	}
	else {
		LPC_CCU1->CLKCCU[clk].CFG = reg;
1a00115c:	3020      	adds	r0, #32
1a00115e:	4b07      	ldr	r3, [pc, #28]	; (1a00117c <Chip_Clock_EnableOpts+0x34>)
1a001160:	f843 1030 	str.w	r1, [r3, r0, lsl #3]
	}
}
1a001164:	4770      	bx	lr
		reg |= (1 << 1);
1a001166:	2103      	movs	r1, #3
1a001168:	e7f0      	b.n	1a00114c <Chip_Clock_EnableOpts+0x4>
		reg |= (1 << 5);
1a00116a:	f041 0120 	orr.w	r1, r1, #32
1a00116e:	e7f2      	b.n	1a001156 <Chip_Clock_EnableOpts+0xe>
		LPC_CCU2->CLKCCU[clk - CLK_CCU2_START].CFG = reg;
1a001170:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a001174:	4b02      	ldr	r3, [pc, #8]	; (1a001180 <Chip_Clock_EnableOpts+0x38>)
1a001176:	f843 1030 	str.w	r1, [r3, r0, lsl #3]
1a00117a:	4770      	bx	lr
1a00117c:	40051000 	.word	0x40051000
1a001180:	40052000 	.word	0x40052000

1a001184 <Chip_Clock_Enable>:

/* Enables a peripheral clock */
void Chip_Clock_Enable(CHIP_CCU_CLK_T clk)
{
	/* Start peripheral clock running */
	if (clk >= CLK_CCU2_START) {
1a001184:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a001188:	d208      	bcs.n	1a00119c <Chip_Clock_Enable+0x18>
		LPC_CCU2->CLKCCU[clk - CLK_CCU2_START].CFG |= 1;
	}
	else {
		LPC_CCU1->CLKCCU[clk].CFG |= 1;
1a00118a:	4a09      	ldr	r2, [pc, #36]	; (1a0011b0 <Chip_Clock_Enable+0x2c>)
1a00118c:	3020      	adds	r0, #32
1a00118e:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a001192:	f043 0301 	orr.w	r3, r3, #1
1a001196:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
	}
}
1a00119a:	4770      	bx	lr
		LPC_CCU2->CLKCCU[clk - CLK_CCU2_START].CFG |= 1;
1a00119c:	4a05      	ldr	r2, [pc, #20]	; (1a0011b4 <Chip_Clock_Enable+0x30>)
1a00119e:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a0011a2:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a0011a6:	f043 0301 	orr.w	r3, r3, #1
1a0011aa:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
1a0011ae:	4770      	bx	lr
1a0011b0:	40051000 	.word	0x40051000
1a0011b4:	40052000 	.word	0x40052000

1a0011b8 <Chip_Clock_GetRate>:
	LPC_CCU2->PM = 0;
}

/* Returns a peripheral clock rate */
uint32_t Chip_Clock_GetRate(CHIP_CCU_CLK_T clk)
{
1a0011b8:	b510      	push	{r4, lr}
	CHIP_CGU_BASE_CLK_T baseclk;
	uint32_t reg, div, rate;

	/* Get CCU config register for clock */
	if (clk >= CLK_CCU2_START) {
1a0011ba:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a0011be:	d309      	bcc.n	1a0011d4 <Chip_Clock_GetRate+0x1c>
		reg = LPC_CCU2->CLKCCU[clk - CLK_CCU2_START].CFG;
1a0011c0:	f5a0 7391 	sub.w	r3, r0, #290	; 0x122
1a0011c4:	4a0d      	ldr	r2, [pc, #52]	; (1a0011fc <Chip_Clock_GetRate+0x44>)
1a0011c6:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
	else {
		reg = LPC_CCU1->CLKCCU[clk].CFG;
	}

	/* Is the clock enabled? */
	if (reg & 1) {
1a0011ca:	f014 0f01 	tst.w	r4, #1
1a0011ce:	d107      	bne.n	1a0011e0 <Chip_Clock_GetRate+0x28>

		}
		rate = rate / div;
	}
	else {
		rate = 0;
1a0011d0:	2000      	movs	r0, #0
	}

	return rate;
}
1a0011d2:	bd10      	pop	{r4, pc}
		reg = LPC_CCU1->CLKCCU[clk].CFG;
1a0011d4:	f100 0320 	add.w	r3, r0, #32
1a0011d8:	4a09      	ldr	r2, [pc, #36]	; (1a001200 <Chip_Clock_GetRate+0x48>)
1a0011da:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
1a0011de:	e7f4      	b.n	1a0011ca <Chip_Clock_GetRate+0x12>
		baseclk = Chip_Clock_FindBaseClock(clk);
1a0011e0:	f7ff fe20 	bl	1a000e24 <Chip_Clock_FindBaseClock>
		rate = Chip_Clock_GetBaseClocktHz(baseclk);
1a0011e4:	f7ff ffa9 	bl	1a00113a <Chip_Clock_GetBaseClocktHz>
		if (((reg >> 5) & 0x7) == 0) {
1a0011e8:	f014 0fe0 	tst.w	r4, #224	; 0xe0
1a0011ec:	d103      	bne.n	1a0011f6 <Chip_Clock_GetRate+0x3e>
			div = 1;
1a0011ee:	2301      	movs	r3, #1
		rate = rate / div;
1a0011f0:	fbb0 f0f3 	udiv	r0, r0, r3
1a0011f4:	e7ed      	b.n	1a0011d2 <Chip_Clock_GetRate+0x1a>
			div = 2;/* No other dividers supported */
1a0011f6:	2302      	movs	r3, #2
1a0011f8:	e7fa      	b.n	1a0011f0 <Chip_Clock_GetRate+0x38>
1a0011fa:	bf00      	nop
1a0011fc:	40052000 	.word	0x40052000
1a001200:	40051000 	.word	0x40051000

1a001204 <Chip_SetupCoreClock>:
/*****************************************************************************
 * Public functions
 ****************************************************************************/
/* Setup Chip Core clock */
void Chip_SetupCoreClock(CHIP_CGU_CLKIN_T clkin, uint32_t core_freq, bool setbase)
{
1a001204:	b570      	push	{r4, r5, r6, lr}
1a001206:	b08a      	sub	sp, #40	; 0x28
1a001208:	4605      	mov	r5, r0
1a00120a:	460e      	mov	r6, r1
1a00120c:	4614      	mov	r4, r2
	int i;
	volatile uint32_t delay = 10000; // FIXME: original was 500, fix for horrible crystals. @Eric
1a00120e:	f242 7310 	movw	r3, #10000	; 0x2710
1a001212:	9309      	str	r3, [sp, #36]	; 0x24
	uint32_t direct = 0, pdivide = 0;
	PLL_PARAM_T ppll;

	if (clkin == CLKIN_CRYSTAL) {
1a001214:	2806      	cmp	r0, #6
1a001216:	d018      	beq.n	1a00124a <Chip_SetupCoreClock+0x46>
		/* Switch main system clocking to crystal */
		Chip_Clock_EnableCrystal();
	}
	Chip_Clock_SetBaseClock(CLK_BASE_MX, clkin, true, false);
1a001218:	2300      	movs	r3, #0
1a00121a:	2201      	movs	r2, #1
1a00121c:	4629      	mov	r1, r5
1a00121e:	2004      	movs	r0, #4
1a001220:	f7ff ff4c 	bl	1a0010bc <Chip_Clock_SetBaseClock>
 * Saves power if the main PLL is not needed.
 */
__STATIC_INLINE void Chip_Clock_DisableMainPLL(void)
{
	/* power down main PLL */
	LPC_CGU->PLL1_CTRL |= 1;
1a001224:	4a49      	ldr	r2, [pc, #292]	; (1a00134c <Chip_SetupCoreClock+0x148>)
1a001226:	6c53      	ldr	r3, [r2, #68]	; 0x44
1a001228:	f043 0301 	orr.w	r3, r3, #1
1a00122c:	6453      	str	r3, [r2, #68]	; 0x44
	Chip_Clock_DisableMainPLL(); /* Disable PLL */

	/* Calculate the PLL Parameters */
	ppll.srcin = clkin;
1a00122e:	f88d 5008 	strb.w	r5, [sp, #8]
	Chip_Clock_CalcMainPLLValue(core_freq, &ppll);
1a001232:	a901      	add	r1, sp, #4
1a001234:	4630      	mov	r0, r6
1a001236:	f7ff feb9 	bl	1a000fac <Chip_Clock_CalcMainPLLValue>

	if (core_freq > 110000000UL) {
1a00123a:	4b45      	ldr	r3, [pc, #276]	; (1a001350 <Chip_SetupCoreClock+0x14c>)
1a00123c:	429e      	cmp	r6, r3
1a00123e:	d916      	bls.n	1a00126e <Chip_SetupCoreClock+0x6a>
		if (ppll.ctrl & (1 << 6)) {
1a001240:	9b01      	ldr	r3, [sp, #4]
1a001242:	f013 0f40 	tst.w	r3, #64	; 0x40
1a001246:	d003      	beq.n	1a001250 <Chip_SetupCoreClock+0x4c>
1a001248:	e7fe      	b.n	1a001248 <Chip_SetupCoreClock+0x44>
		Chip_Clock_EnableCrystal();
1a00124a:	f7ff fe11 	bl	1a000e70 <Chip_Clock_EnableCrystal>
1a00124e:	e7e3      	b.n	1a001218 <Chip_SetupCoreClock+0x14>
			while(1);		// to run in integer mode above 110 MHz, you need to use IDIV clock to boot strap CPU to that freq
		} else if (ppll.ctrl & (1 << 7)){
1a001250:	f013 0f80 	tst.w	r3, #128	; 0x80
1a001254:	d005      	beq.n	1a001262 <Chip_SetupCoreClock+0x5e>
			direct = 1;
			ppll.ctrl &= ~(1 << 7);
1a001256:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a00125a:	9301      	str	r3, [sp, #4]
	uint32_t direct = 0, pdivide = 0;
1a00125c:	2500      	movs	r5, #0
			direct = 1;
1a00125e:	2601      	movs	r6, #1
1a001260:	e007      	b.n	1a001272 <Chip_SetupCoreClock+0x6e>
		} else {
			pdivide = 1;
			ppll.psel++;
1a001262:	9b04      	ldr	r3, [sp, #16]
1a001264:	3301      	adds	r3, #1
1a001266:	9304      	str	r3, [sp, #16]
			pdivide = 1;
1a001268:	2501      	movs	r5, #1
	uint32_t direct = 0, pdivide = 0;
1a00126a:	2600      	movs	r6, #0
1a00126c:	e001      	b.n	1a001272 <Chip_SetupCoreClock+0x6e>
1a00126e:	2500      	movs	r5, #0
1a001270:	462e      	mov	r6, r5
 * Make sure the main PLL is enabled.
 */
__STATIC_INLINE void Chip_Clock_SetupMainPLL(const PLL_PARAM_T *ppll)
{
	/* power up main PLL */
    LPC_CGU->PLL1_CTRL = ppll->ctrl | ((uint32_t) ppll->srcin << 24) | (ppll->msel << 16) | (ppll->nsel << 12) | (ppll->psel << 8) | ( 1 << 11);	
1a001272:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a001276:	9b01      	ldr	r3, [sp, #4]
1a001278:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
1a00127c:	9a05      	ldr	r2, [sp, #20]
1a00127e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a001282:	9a03      	ldr	r2, [sp, #12]
1a001284:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
1a001288:	9a04      	ldr	r2, [sp, #16]
1a00128a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a00128e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a001292:	4a2e      	ldr	r2, [pc, #184]	; (1a00134c <Chip_SetupCoreClock+0x148>)
1a001294:	6453      	str	r3, [r2, #68]	; 0x44
 * @note	The main PLL should be locked prior to using it as a clock input for a base clock.
 */
__STATIC_INLINE int Chip_Clock_MainPLLLocked(void)
{
	/* Return true if locked */
	return (LPC_CGU->PLL1_STAT & 1) != 0;
1a001296:	4b2d      	ldr	r3, [pc, #180]	; (1a00134c <Chip_SetupCoreClock+0x148>)
1a001298:	6c1b      	ldr	r3, [r3, #64]	; 0x40

	/* Setup and start the PLL */
	Chip_Clock_SetupMainPLL(&ppll);

	/* Wait for the PLL to lock */
	while(!Chip_Clock_MainPLLLocked()) {}
1a00129a:	f013 0f01 	tst.w	r3, #1
1a00129e:	d0fa      	beq.n	1a001296 <Chip_SetupCoreClock+0x92>

	/* Set core clock base as PLL1 */
	Chip_Clock_SetBaseClock(CLK_BASE_MX, CLKIN_MAINPLL, true, false);
1a0012a0:	2300      	movs	r3, #0
1a0012a2:	2201      	movs	r2, #1
1a0012a4:	2109      	movs	r1, #9
1a0012a6:	2004      	movs	r0, #4
1a0012a8:	f7ff ff08 	bl	1a0010bc <Chip_Clock_SetBaseClock>

	if (direct) {
1a0012ac:	b1fe      	cbz	r6, 1a0012ee <Chip_SetupCoreClock+0xea>
		delay = 10000; // FIXME: original was 1000, fix for horrible crystals. @Eric
1a0012ae:	f242 7310 	movw	r3, #10000	; 0x2710
1a0012b2:	9309      	str	r3, [sp, #36]	; 0x24
		while(delay --){} /* Wait for approx 50 uSec -- for power supply to stabilize*/
1a0012b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a0012b6:	1e5a      	subs	r2, r3, #1
1a0012b8:	9209      	str	r2, [sp, #36]	; 0x24
1a0012ba:	2b00      	cmp	r3, #0
1a0012bc:	d1fa      	bne.n	1a0012b4 <Chip_SetupCoreClock+0xb0>
		ppll.ctrl |= 1 << 7;
1a0012be:	9b01      	ldr	r3, [sp, #4]
1a0012c0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a0012c4:	9301      	str	r3, [sp, #4]
    LPC_CGU->PLL1_CTRL = ppll->ctrl | ((uint32_t) ppll->srcin << 24) | (ppll->msel << 16) | (ppll->nsel << 12) | (ppll->psel << 8) | ( 1 << 11);	
1a0012c6:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a0012ca:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
1a0012ce:	9a05      	ldr	r2, [sp, #20]
1a0012d0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a0012d4:	9a03      	ldr	r2, [sp, #12]
1a0012d6:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
1a0012da:	9a04      	ldr	r2, [sp, #16]
1a0012dc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a0012e0:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a0012e4:	4a19      	ldr	r2, [pc, #100]	; (1a00134c <Chip_SetupCoreClock+0x148>)
1a0012e6:	6453      	str	r3, [r2, #68]	; 0x44
		while(delay --){} /* Wait for approx 50 uSec -- for power supply to stabilize */
		ppll.psel--;
		Chip_Clock_SetupMainPLL(&ppll); /* Set PDIV to operate at full frequency */
	}

	if (setbase) {
1a0012e8:	b36c      	cbz	r4, 1a001346 <Chip_SetupCoreClock+0x142>
		/* Setup system base clocks and initial states. This won't enable and
		   disable individual clocks, but sets up the base clock sources for
		   each individual peripheral clock. */
		for (i = 0; i < (sizeof(InitClkStates) / sizeof(InitClkStates[0])); i++) {
1a0012ea:	2400      	movs	r4, #0
1a0012ec:	e029      	b.n	1a001342 <Chip_SetupCoreClock+0x13e>
	} else if (pdivide) {
1a0012ee:	2d00      	cmp	r5, #0
1a0012f0:	d0fa      	beq.n	1a0012e8 <Chip_SetupCoreClock+0xe4>
		delay = 10000; // FIXME: original was 1000, fix for horrible crystals. @Eric
1a0012f2:	f242 7310 	movw	r3, #10000	; 0x2710
1a0012f6:	9309      	str	r3, [sp, #36]	; 0x24
		while(delay --){} /* Wait for approx 50 uSec -- for power supply to stabilize */
1a0012f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a0012fa:	1e5a      	subs	r2, r3, #1
1a0012fc:	9209      	str	r2, [sp, #36]	; 0x24
1a0012fe:	2b00      	cmp	r3, #0
1a001300:	d1fa      	bne.n	1a0012f8 <Chip_SetupCoreClock+0xf4>
		ppll.psel--;
1a001302:	9b04      	ldr	r3, [sp, #16]
1a001304:	1e5a      	subs	r2, r3, #1
1a001306:	9204      	str	r2, [sp, #16]
1a001308:	f89d 1008 	ldrb.w	r1, [sp, #8]
1a00130c:	9b01      	ldr	r3, [sp, #4]
1a00130e:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
1a001312:	9905      	ldr	r1, [sp, #20]
1a001314:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1a001318:	9903      	ldr	r1, [sp, #12]
1a00131a:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
1a00131e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a001322:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a001326:	4a09      	ldr	r2, [pc, #36]	; (1a00134c <Chip_SetupCoreClock+0x148>)
1a001328:	6453      	str	r3, [r2, #68]	; 0x44
1a00132a:	e7dd      	b.n	1a0012e8 <Chip_SetupCoreClock+0xe4>
			Chip_Clock_SetBaseClock(InitClkStates[i].clk, InitClkStates[i].clkin,
1a00132c:	4809      	ldr	r0, [pc, #36]	; (1a001354 <Chip_SetupCoreClock+0x150>)
1a00132e:	eb00 0184 	add.w	r1, r0, r4, lsl #2
1a001332:	78cb      	ldrb	r3, [r1, #3]
1a001334:	788a      	ldrb	r2, [r1, #2]
1a001336:	7849      	ldrb	r1, [r1, #1]
1a001338:	f810 0024 	ldrb.w	r0, [r0, r4, lsl #2]
1a00133c:	f7ff febe 	bl	1a0010bc <Chip_Clock_SetBaseClock>
		for (i = 0; i < (sizeof(InitClkStates) / sizeof(InitClkStates[0])); i++) {
1a001340:	3401      	adds	r4, #1
1a001342:	2c11      	cmp	r4, #17
1a001344:	d9f2      	bls.n	1a00132c <Chip_SetupCoreClock+0x128>
									InitClkStates[i].autoblock_enab, InitClkStates[i].powerdn);
		}
	}
}
1a001346:	b00a      	add	sp, #40	; 0x28
1a001348:	bd70      	pop	{r4, r5, r6, pc}
1a00134a:	bf00      	nop
1a00134c:	40050000 	.word	0x40050000
1a001350:	068e7780 	.word	0x068e7780
1a001354:	1a0076c0 	.word	0x1a0076c0

1a001358 <Chip_GPIO_Init>:
 ****************************************************************************/

/* Initialize GPIO block */
void Chip_GPIO_Init(LPC_GPIO_T *pGPIO)
{
}
1a001358:	4770      	bx	lr
1a00135a:	Address 0x000000001a00135a is out of bounds.


1a00135c <Chip_SSP_GetClockIndex>:
/* Returns clock index for the register interface */
STATIC CHIP_CCU_CLK_T Chip_SSP_GetClockIndex(LPC_SSP_T *pSSP)
{
	CHIP_CCU_CLK_T clkSSP;

	if (pSSP == LPC_SSP1) {
1a00135c:	4b03      	ldr	r3, [pc, #12]	; (1a00136c <Chip_SSP_GetClockIndex+0x10>)
1a00135e:	4298      	cmp	r0, r3
1a001360:	d001      	beq.n	1a001366 <Chip_SSP_GetClockIndex+0xa>
		clkSSP = CLK_MX_SSP1;
	}
	else {
		clkSSP = CLK_MX_SSP0;
1a001362:	2083      	movs	r0, #131	; 0x83
	}

	return clkSSP;
}
1a001364:	4770      	bx	lr
		clkSSP = CLK_MX_SSP1;
1a001366:	20a5      	movs	r0, #165	; 0xa5
1a001368:	4770      	bx	lr
1a00136a:	bf00      	nop
1a00136c:	400c5000 	.word	0x400c5000

1a001370 <Chip_SSP_GetPeriphClockIndex>:
/* Returns clock index for the peripheral block */
STATIC CHIP_CCU_CLK_T Chip_SSP_GetPeriphClockIndex(LPC_SSP_T *pSSP)
{
	CHIP_CCU_CLK_T clkSSP;

	if (pSSP == LPC_SSP1) {
1a001370:	4b04      	ldr	r3, [pc, #16]	; (1a001384 <Chip_SSP_GetPeriphClockIndex+0x14>)
1a001372:	4298      	cmp	r0, r3
1a001374:	d002      	beq.n	1a00137c <Chip_SSP_GetPeriphClockIndex+0xc>
		clkSSP = CLK_APB2_SSP1;
	}
	else {
		clkSSP = CLK_APB0_SSP0;
1a001376:	f240 2002 	movw	r0, #514	; 0x202
	}

	return clkSSP;
}
1a00137a:	4770      	bx	lr
		clkSSP = CLK_APB2_SSP1;
1a00137c:	f44f 70f1 	mov.w	r0, #482	; 0x1e2
1a001380:	4770      	bx	lr
1a001382:	bf00      	nop
1a001384:	400c5000 	.word	0x400c5000

1a001388 <Chip_SSP_SetClockRate>:

/*Set up output clocks per bit for SSP bus*/
void Chip_SSP_SetClockRate(LPC_SSP_T *pSSP, uint32_t clk_rate, uint32_t prescale)
{
	uint32_t temp;
	temp = pSSP->CR0 & (~(SSP_CR0_SCR(0xFF)));
1a001388:	6803      	ldr	r3, [r0, #0]
1a00138a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
	pSSP->CR0 = temp | (SSP_CR0_SCR(clk_rate));
1a00138e:	0209      	lsls	r1, r1, #8
1a001390:	b289      	uxth	r1, r1
1a001392:	4319      	orrs	r1, r3
1a001394:	6001      	str	r1, [r0, #0]
	pSSP->CPSR = prescale;
1a001396:	6102      	str	r2, [r0, #16]
}
1a001398:	4770      	bx	lr

1a00139a <Chip_SSP_SetBitRate>:
	}
}

/* Set the clock frequency for SSP interface */
void Chip_SSP_SetBitRate(LPC_SSP_T *pSSP, uint32_t bitRate)
{
1a00139a:	b570      	push	{r4, r5, r6, lr}
1a00139c:	4606      	mov	r6, r0
1a00139e:	460d      	mov	r5, r1
	uint32_t ssp_clk, cr0_div, cmp_clk, prescale;

	ssp_clk = Chip_Clock_GetRate(Chip_SSP_GetPeriphClockIndex(pSSP));
1a0013a0:	f7ff ffe6 	bl	1a001370 <Chip_SSP_GetPeriphClockIndex>
1a0013a4:	f7ff ff08 	bl	1a0011b8 <Chip_Clock_GetRate>

	cr0_div = 0;
	cmp_clk = 0xFFFFFFFF;
	prescale = 2;
1a0013a8:	2202      	movs	r2, #2
	cmp_clk = 0xFFFFFFFF;
1a0013aa:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
	cr0_div = 0;
1a0013ae:	2100      	movs	r1, #0

	while (cmp_clk > bitRate) {
1a0013b0:	e000      	b.n	1a0013b4 <Chip_SSP_SetBitRate+0x1a>
		cmp_clk = ssp_clk / ((cr0_div + 1) * prescale);
		if (cmp_clk > bitRate) {
			cr0_div++;
1a0013b2:	4621      	mov	r1, r4
	while (cmp_clk > bitRate) {
1a0013b4:	42ab      	cmp	r3, r5
1a0013b6:	d90b      	bls.n	1a0013d0 <Chip_SSP_SetBitRate+0x36>
		cmp_clk = ssp_clk / ((cr0_div + 1) * prescale);
1a0013b8:	1c4c      	adds	r4, r1, #1
1a0013ba:	fb02 f304 	mul.w	r3, r2, r4
1a0013be:	fbb0 f3f3 	udiv	r3, r0, r3
		if (cmp_clk > bitRate) {
1a0013c2:	429d      	cmp	r5, r3
1a0013c4:	d2f6      	bcs.n	1a0013b4 <Chip_SSP_SetBitRate+0x1a>
			if (cr0_div > 0xFF) {
1a0013c6:	2cff      	cmp	r4, #255	; 0xff
1a0013c8:	d9f3      	bls.n	1a0013b2 <Chip_SSP_SetBitRate+0x18>
				cr0_div = 0;
				prescale += 2;
1a0013ca:	3202      	adds	r2, #2
				cr0_div = 0;
1a0013cc:	2100      	movs	r1, #0
1a0013ce:	e7f1      	b.n	1a0013b4 <Chip_SSP_SetBitRate+0x1a>
			}
		}
	}

	Chip_SSP_SetClockRate(pSSP, cr0_div, prescale);
1a0013d0:	4630      	mov	r0, r6
1a0013d2:	f7ff ffd9 	bl	1a001388 <Chip_SSP_SetClockRate>
}
1a0013d6:	bd70      	pop	{r4, r5, r6, pc}

1a0013d8 <Chip_SSP_Init>:

/* Initialize the SSP */
void Chip_SSP_Init(LPC_SSP_T *pSSP)
{
1a0013d8:	b510      	push	{r4, lr}
1a0013da:	4604      	mov	r4, r0
	Chip_Clock_Enable(Chip_SSP_GetClockIndex(pSSP));
1a0013dc:	f7ff ffbe 	bl	1a00135c <Chip_SSP_GetClockIndex>
1a0013e0:	f7ff fed0 	bl	1a001184 <Chip_Clock_Enable>
	Chip_Clock_Enable(Chip_SSP_GetPeriphClockIndex(pSSP));
1a0013e4:	4620      	mov	r0, r4
1a0013e6:	f7ff ffc3 	bl	1a001370 <Chip_SSP_GetPeriphClockIndex>
1a0013ea:	f7ff fecb 	bl	1a001184 <Chip_Clock_Enable>
	pSSP->CR1 = (pSSP->CR1 & ~(1 << 2)) | mode;
1a0013ee:	6863      	ldr	r3, [r4, #4]
1a0013f0:	f023 0304 	bic.w	r3, r3, #4
1a0013f4:	6063      	str	r3, [r4, #4]
	pSSP->CR0 = (pSSP->CR0 & ~0xFF) | bits | frameFormat | clockMode;
1a0013f6:	6823      	ldr	r3, [r4, #0]
1a0013f8:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
1a0013fc:	f043 0307 	orr.w	r3, r3, #7
1a001400:	6023      	str	r3, [r4, #0]

	Chip_SSP_Set_Mode(pSSP, SSP_MODE_MASTER);
	Chip_SSP_SetFormat(pSSP, SSP_BITS_8, SSP_FRAMEFORMAT_SPI, SSP_CLOCK_CPHA0_CPOL0);
	Chip_SSP_SetBitRate(pSSP, 100000);
1a001402:	4902      	ldr	r1, [pc, #8]	; (1a00140c <Chip_SSP_Init+0x34>)
1a001404:	4620      	mov	r0, r4
1a001406:	f7ff ffc8 	bl	1a00139a <Chip_SSP_SetBitRate>
}
1a00140a:	bd10      	pop	{r4, pc}
1a00140c:	000186a0 	.word	0x000186a0

1a001410 <Chip_I2C_EventHandler>:
{
	struct i2c_interface *iic = &i2c[id];
	volatile I2C_STATUS_T *stat;

	/* Only WAIT event needs to be handled */
	if (event != I2C_EVENT_WAIT) {
1a001410:	2901      	cmp	r1, #1
1a001412:	d000      	beq.n	1a001416 <Chip_I2C_EventHandler+0x6>
	}

	stat = &iic->mXfer->status;
	/* Wait for the status to change */
	while (*stat == I2C_STATUS_BUSY) {}
}
1a001414:	4770      	bx	lr
	stat = &iic->mXfer->status;
1a001416:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
1a00141a:	0082      	lsls	r2, r0, #2
1a00141c:	4b03      	ldr	r3, [pc, #12]	; (1a00142c <Chip_I2C_EventHandler+0x1c>)
1a00141e:	4413      	add	r3, r2
1a001420:	691a      	ldr	r2, [r3, #16]
	while (*stat == I2C_STATUS_BUSY) {}
1a001422:	7d13      	ldrb	r3, [r2, #20]
1a001424:	b2db      	uxtb	r3, r3
1a001426:	2b04      	cmp	r3, #4
1a001428:	d0fb      	beq.n	1a001422 <Chip_I2C_EventHandler+0x12>
1a00142a:	e7f3      	b.n	1a001414 <Chip_I2C_EventHandler+0x4>
1a00142c:	10000004 	.word	0x10000004

1a001430 <Chip_I2C_Init>:
	}
}

/* Initializes the LPC_I2C peripheral with specified parameter */
void Chip_I2C_Init(I2C_ID_T id)
{
1a001430:	b570      	push	{r4, r5, r6, lr}
1a001432:	4605      	mov	r5, r0
	Chip_Clock_Enable(i2c[id].clk);
1a001434:	4e06      	ldr	r6, [pc, #24]	; (1a001450 <Chip_I2C_Init+0x20>)
1a001436:	00c4      	lsls	r4, r0, #3
1a001438:	1a22      	subs	r2, r4, r0
1a00143a:	0093      	lsls	r3, r2, #2
1a00143c:	4433      	add	r3, r6
1a00143e:	8898      	ldrh	r0, [r3, #4]
1a001440:	f7ff fea0 	bl	1a001184 <Chip_Clock_Enable>
	enableClk(id);

	/* Set I2C operation to default */
	LPC_I2Cx(id)->CONCLR = (I2C_CON_AA | I2C_CON_SI | I2C_CON_STA | I2C_CON_I2EN);
1a001444:	1b64      	subs	r4, r4, r5
1a001446:	00a3      	lsls	r3, r4, #2
1a001448:	58f3      	ldr	r3, [r6, r3]
1a00144a:	226c      	movs	r2, #108	; 0x6c
1a00144c:	619a      	str	r2, [r3, #24]
}
1a00144e:	bd70      	pop	{r4, r5, r6, pc}
1a001450:	10000004 	.word	0x10000004

1a001454 <Chip_I2C_SetClockRate>:
	disableClk(id);
}

/* Set up clock rate for LPC_I2C peripheral */
void Chip_I2C_SetClockRate(I2C_ID_T id, uint32_t clockrate)
{
1a001454:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a001458:	460c      	mov	r4, r1
	return Chip_Clock_GetRate(i2c[id].clk);
1a00145a:	4e0b      	ldr	r6, [pc, #44]	; (1a001488 <Chip_I2C_SetClockRate+0x34>)
1a00145c:	00c5      	lsls	r5, r0, #3
1a00145e:	1a2b      	subs	r3, r5, r0
1a001460:	ea4f 0883 	mov.w	r8, r3, lsl #2
1a001464:	eb06 0308 	add.w	r3, r6, r8
1a001468:	8898      	ldrh	r0, [r3, #4]
1a00146a:	f7ff fea5 	bl	1a0011b8 <Chip_Clock_GetRate>
	uint32_t SCLValue;

	SCLValue = (getClkRate(id) / clockrate);
1a00146e:	fbb0 f0f4 	udiv	r0, r0, r4
	LPC_I2Cx(id)->SCLH = (uint32_t) (SCLValue >> 1);
1a001472:	f856 3008 	ldr.w	r3, [r6, r8]
1a001476:	0842      	lsrs	r2, r0, #1
1a001478:	611a      	str	r2, [r3, #16]
	LPC_I2Cx(id)->SCLL = (uint32_t) (SCLValue - LPC_I2Cx(id)->SCLH);
1a00147a:	f856 3008 	ldr.w	r3, [r6, r8]
1a00147e:	691a      	ldr	r2, [r3, #16]
1a001480:	1a80      	subs	r0, r0, r2
1a001482:	6158      	str	r0, [r3, #20]
}
1a001484:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a001488:	10000004 	.word	0x10000004

1a00148c <SystemInit>:
 */

#include <board.h>

void SystemInit(void)
{
1a00148c:	b508      	push	{r3, lr}
   extern void *g_pfnVectors;
   SCB->VTOR = (unsigned int) &g_pfnVectors;
1a00148e:	4a0b      	ldr	r2, [pc, #44]	; (1a0014bc <SystemInit+0x30>)
1a001490:	4b0b      	ldr	r3, [pc, #44]	; (1a0014c0 <SystemInit+0x34>)
1a001492:	609a      	str	r2, [r3, #8]
 */
__STATIC_INLINE uint32_t SCB_GetFPUType(void)
{
  uint32_t mvfr0;

  mvfr0 = FPU->MVFR0;
1a001494:	f503 730c 	add.w	r3, r3, #560	; 0x230
1a001498:	691b      	ldr	r3, [r3, #16]
  if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
1a00149a:	f403 637f 	and.w	r3, r3, #4080	; 0xff0
1a00149e:	2b20      	cmp	r3, #32
1a0014a0:	d004      	beq.n	1a0014ac <SystemInit+0x20>

   if (SCB_GetFPUType() > 0)
      SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */

   /* Board specific SystemInit */
   Board_SystemInit();
1a0014a2:	f7ff fabf 	bl	1a000a24 <Board_SystemInit>
   Board_Init();
1a0014a6:	f7ff fa47 	bl	1a000938 <Board_Init>
}
1a0014aa:	bd08      	pop	{r3, pc}
      SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
1a0014ac:	4a04      	ldr	r2, [pc, #16]	; (1a0014c0 <SystemInit+0x34>)
1a0014ae:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
1a0014b2:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
1a0014b6:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
1a0014ba:	e7f2      	b.n	1a0014a2 <SystemInit+0x16>
1a0014bc:	1a000000 	.word	0x1a000000
1a0014c0:	e000ed00 	.word	0xe000ed00

1a0014c4 <cyclesCounterInit>:
 * @return TRUE si esta OK, FALSE en caso de error.
 */
bool_t cyclesCounterInit( uint32_t clockSpeed )
{
   //Asigna  a la variable local ClockSpeed el valor recibido como argumento.
   ClockSpeed = clockSpeed;
1a0014c4:	4b04      	ldr	r3, [pc, #16]	; (1a0014d8 <cyclesCounterInit+0x14>)
1a0014c6:	6018      	str	r0, [r3, #0]
   //Iniciar el contador de ciclos de clock.
   DWT_CTRL  |= 1; // *DWT_CTRL  |= 1;
1a0014c8:	4a04      	ldr	r2, [pc, #16]	; (1a0014dc <cyclesCounterInit+0x18>)
1a0014ca:	6813      	ldr	r3, [r2, #0]
1a0014cc:	f043 0301 	orr.w	r3, r3, #1
1a0014d0:	6013      	str	r3, [r2, #0]
   return TRUE;
}
1a0014d2:	2001      	movs	r0, #1
1a0014d4:	4770      	bx	lr
1a0014d6:	bf00      	nop
1a0014d8:	1000003c 	.word	0x1000003c
1a0014dc:	e0001000 	.word	0xe0001000

1a0014e0 <tickRead>:

// Read Tick Counter
tick_t tickRead( void )
{
   return tickCounter;
}
1a0014e0:	4b01      	ldr	r3, [pc, #4]	; (1a0014e8 <tickRead+0x8>)
1a0014e2:	e9d3 0100 	ldrd	r0, r1, [r3]
1a0014e6:	4770      	bx	lr
1a0014e8:	10000a90 	.word	0x10000a90

1a0014ec <tickPowerSet>:
}

// Enable or disable the peripheral energy and clock
void tickPowerSet( bool_t power )
{
   if( power ) {
1a0014ec:	b918      	cbnz	r0, 1a0014f6 <tickPowerSet+0xa>
      SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk |
                      SysTick_CTRL_TICKINT_Msk   |
                      SysTick_CTRL_ENABLE_Msk;
   } else {
      // Disable SysTick IRQ and SysTick Timer
      SysTick->CTRL = 0x0000000;
1a0014ee:	4b04      	ldr	r3, [pc, #16]	; (1a001500 <tickPowerSet+0x14>)
1a0014f0:	2200      	movs	r2, #0
1a0014f2:	601a      	str	r2, [r3, #0]
   }
}
1a0014f4:	4770      	bx	lr
      SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk |
1a0014f6:	4b02      	ldr	r3, [pc, #8]	; (1a001500 <tickPowerSet+0x14>)
1a0014f8:	2207      	movs	r2, #7
1a0014fa:	601a      	str	r2, [r3, #0]
1a0014fc:	4770      	bx	lr
1a0014fe:	bf00      	nop
1a001500:	e000e010 	.word	0xe000e010

1a001504 <tickInit>:
{
1a001504:	b538      	push	{r3, r4, r5, lr}
      if( tickRateMSvalue == 0 ) {
1a001506:	ea50 0301 	orrs.w	r3, r0, r1
1a00150a:	d02a      	beq.n	1a001562 <tickInit+0x5e>
         if( (tickRateMSvalue >= 1) && (tickRateMSvalue <= 50) ) {
1a00150c:	f110 32ff 	adds.w	r2, r0, #4294967295	; 0xffffffff
1a001510:	f141 33ff 	adc.w	r3, r1, #4294967295	; 0xffffffff
1a001514:	2b00      	cmp	r3, #0
1a001516:	bf08      	it	eq
1a001518:	2a32      	cmpeq	r2, #50	; 0x32
1a00151a:	d227      	bcs.n	1a00156c <tickInit+0x68>
            tickRateMS = tickRateMSvalue;
1a00151c:	4b14      	ldr	r3, [pc, #80]	; (1a001570 <tickInit+0x6c>)
1a00151e:	e9c3 0100 	strd	r0, r1, [r3]
            SysTick_Config( SystemCoreClock * tickRateMSvalue / 1000 );
1a001522:	4b14      	ldr	r3, [pc, #80]	; (1a001574 <tickInit+0x70>)
1a001524:	681b      	ldr	r3, [r3, #0]
1a001526:	fba3 4500 	umull	r4, r5, r3, r0
1a00152a:	fb03 5501 	mla	r5, r3, r1, r5
1a00152e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
1a001532:	2300      	movs	r3, #0
1a001534:	4620      	mov	r0, r4
1a001536:	4629      	mov	r1, r5
1a001538:	f000 fe2e 	bl	1a002198 <__aeabi_uldivmod>
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
1a00153c:	3801      	subs	r0, #1
1a00153e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
1a001542:	d209      	bcs.n	1a001558 <tickInit+0x54>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
1a001544:	4b0c      	ldr	r3, [pc, #48]	; (1a001578 <tickInit+0x74>)
1a001546:	6058      	str	r0, [r3, #4]
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
1a001548:	4a0c      	ldr	r2, [pc, #48]	; (1a00157c <tickInit+0x78>)
1a00154a:	21e0      	movs	r1, #224	; 0xe0
1a00154c:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
1a001550:	2200      	movs	r2, #0
1a001552:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
1a001554:	2207      	movs	r2, #7
1a001556:	601a      	str	r2, [r3, #0]
            tickPowerSet( ON );
1a001558:	2001      	movs	r0, #1
1a00155a:	f7ff ffc7 	bl	1a0014ec <tickPowerSet>
      bool_t ret_val = 1;
1a00155e:	2001      	movs	r0, #1
}
1a001560:	bd38      	pop	{r3, r4, r5, pc}
         tickPowerSet( OFF );
1a001562:	2000      	movs	r0, #0
1a001564:	f7ff ffc2 	bl	1a0014ec <tickPowerSet>
         ret_val = 0;
1a001568:	2000      	movs	r0, #0
1a00156a:	e7f9      	b.n	1a001560 <tickInit+0x5c>
            ret_val = 0;
1a00156c:	2000      	movs	r0, #0
1a00156e:	e7f7      	b.n	1a001560 <tickInit+0x5c>
1a001570:	10000ad8 	.word	0x10000ad8
1a001574:	10000ad4 	.word	0x10000ad4
1a001578:	e000e010 	.word	0xe000e010
1a00157c:	e000ed00 	.word	0xe000ed00

1a001580 <SysTick_Handler>:

//__attribute__ ((section(".after_vectors")))

// SysTick Timer ISR Handler
void tickerCallback( void )   // Before SysTick_Handler
{
1a001580:	e92d 4800 	stmdb	sp!, {fp, lr}
   // Increment Tick counters
   tickCounter++;
1a001584:	4908      	ldr	r1, [pc, #32]	; (1a0015a8 <SysTick_Handler+0x28>)
1a001586:	e9d1 2300 	ldrd	r2, r3, [r1]
1a00158a:	f112 0b01 	adds.w	fp, r2, #1
1a00158e:	f143 0c00 	adc.w	ip, r3, #0
1a001592:	e9c1 bc00 	strd	fp, ip, [r1]
   // Execute Tick Hook function if pointer is not NULL
   if( (tickHookFunction != NULL) ) {
1a001596:	4b05      	ldr	r3, [pc, #20]	; (1a0015ac <SysTick_Handler+0x2c>)
1a001598:	681b      	ldr	r3, [r3, #0]
1a00159a:	b113      	cbz	r3, 1a0015a2 <SysTick_Handler+0x22>
      (* tickHookFunction )( callBackFuncParams );
1a00159c:	4a04      	ldr	r2, [pc, #16]	; (1a0015b0 <SysTick_Handler+0x30>)
1a00159e:	6810      	ldr	r0, [r2, #0]
1a0015a0:	4798      	blx	r3
   }
}
1a0015a2:	e8bd 8800 	ldmia.w	sp!, {fp, pc}
1a0015a6:	bf00      	nop
1a0015a8:	10000a90 	.word	0x10000a90
1a0015ac:	10000a98 	.word	0x10000a98
1a0015b0:	10000a88 	.word	0x10000a88

1a0015b4 <gpioObtainPinInit>:

static void gpioObtainPinInit( gpioMap_t pin,
                               int8_t *pinNamePort, int8_t *pinNamePin,
                               int8_t *func, int8_t *gpioPort,
                               int8_t *gpioPin )
{
1a0015b4:	b430      	push	{r4, r5}

   *pinNamePort = gpioPinsInit[pin].pinName.port;
1a0015b6:	4d0b      	ldr	r5, [pc, #44]	; (1a0015e4 <gpioObtainPinInit+0x30>)
1a0015b8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
1a0015bc:	182c      	adds	r4, r5, r0
1a0015be:	5628      	ldrsb	r0, [r5, r0]
1a0015c0:	7008      	strb	r0, [r1, #0]
   *pinNamePin  = gpioPinsInit[pin].pinName.pin;
1a0015c2:	f994 1001 	ldrsb.w	r1, [r4, #1]
1a0015c6:	7011      	strb	r1, [r2, #0]
   *func        = gpioPinsInit[pin].func;
1a0015c8:	f994 2002 	ldrsb.w	r2, [r4, #2]
1a0015cc:	701a      	strb	r2, [r3, #0]
   *gpioPort    = gpioPinsInit[pin].gpio.port;
1a0015ce:	f994 2003 	ldrsb.w	r2, [r4, #3]
1a0015d2:	9b02      	ldr	r3, [sp, #8]
1a0015d4:	701a      	strb	r2, [r3, #0]
   *gpioPin     = gpioPinsInit[pin].gpio.pin;
1a0015d6:	f994 2004 	ldrsb.w	r2, [r4, #4]
1a0015da:	9b03      	ldr	r3, [sp, #12]
1a0015dc:	701a      	strb	r2, [r3, #0]
}
1a0015de:	bc30      	pop	{r4, r5}
1a0015e0:	4770      	bx	lr
1a0015e2:	bf00      	nop
1a0015e4:	1a007708 	.word	0x1a007708

1a0015e8 <gpioInit>:

/*==================[external functions definition]==========================*/

bool_t gpioInit( gpioMap_t pin, gpioInit_t config )
{
1a0015e8:	b570      	push	{r4, r5, r6, lr}
1a0015ea:	b084      	sub	sp, #16
1a0015ec:	460c      	mov	r4, r1

   bool_t ret_val     = 1;

   int8_t pinNamePort = 0;
1a0015ee:	2300      	movs	r3, #0
1a0015f0:	f88d 300f 	strb.w	r3, [sp, #15]
   int8_t pinNamePin  = 0;
1a0015f4:	f88d 300e 	strb.w	r3, [sp, #14]

   int8_t func        = 0;
1a0015f8:	f88d 300d 	strb.w	r3, [sp, #13]

   int8_t gpioPort    = 0;
1a0015fc:	f88d 300c 	strb.w	r3, [sp, #12]
   int8_t gpioPin     = 0;
1a001600:	f88d 300b 	strb.w	r3, [sp, #11]

   gpioObtainPinInit( pin, &pinNamePort, &pinNamePin, &func,
1a001604:	f10d 030b 	add.w	r3, sp, #11
1a001608:	9301      	str	r3, [sp, #4]
1a00160a:	ab03      	add	r3, sp, #12
1a00160c:	9300      	str	r3, [sp, #0]
1a00160e:	f10d 030d 	add.w	r3, sp, #13
1a001612:	f10d 020e 	add.w	r2, sp, #14
1a001616:	f10d 010f 	add.w	r1, sp, #15
1a00161a:	f7ff ffcb 	bl	1a0015b4 <gpioObtainPinInit>
                      &gpioPort, &gpioPin );

   switch(config) {
1a00161e:	2c05      	cmp	r4, #5
1a001620:	f200 80a5 	bhi.w	1a00176e <gpioInit+0x186>
1a001624:	e8df f004 	tbb	[pc, r4]
1a001628:	45278109 	.word	0x45278109
1a00162c:	0363      	.short	0x0363

   case GPIO_ENABLE:
      /* Initializes GPIO */
      Chip_GPIO_Init(LPC_GPIO_PORT);
1a00162e:	4851      	ldr	r0, [pc, #324]	; (1a001774 <gpioInit+0x18c>)
1a001630:	f7ff fe92 	bl	1a001358 <Chip_GPIO_Init>
   bool_t ret_val     = 1;
1a001634:	2001      	movs	r0, #1
      break;
   }

   return ret_val;

}
1a001636:	b004      	add	sp, #16
1a001638:	bd70      	pop	{r4, r5, r6, pc}
      Chip_SCU_PinMux(
1a00163a:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a00163e:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a001642:	f89d 200d 	ldrb.w	r2, [sp, #13]
	LPC_SCU->SFSP[port][pin] = modefunc;
1a001646:	f042 02d0 	orr.w	r2, r2, #208	; 0xd0
1a00164a:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a00164e:	494a      	ldr	r1, [pc, #296]	; (1a001778 <gpioInit+0x190>)
1a001650:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_INPUT );
1a001654:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a001658:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a00165c:	2001      	movs	r0, #1
1a00165e:	fa00 f102 	lsl.w	r1, r0, r2
{
	if (out) {
		pGPIO->DIR[portNum] |= bitValue;
	}
	else {
		pGPIO->DIR[portNum] &= ~bitValue;
1a001662:	4c44      	ldr	r4, [pc, #272]	; (1a001774 <gpioInit+0x18c>)
1a001664:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a001668:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a00166c:	ea22 0201 	bic.w	r2, r2, r1
1a001670:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a001674:	e7df      	b.n	1a001636 <gpioInit+0x4e>
      Chip_SCU_PinMux(
1a001676:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a00167a:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a00167e:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a001682:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
1a001686:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a00168a:	493b      	ldr	r1, [pc, #236]	; (1a001778 <gpioInit+0x190>)
1a00168c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_INPUT );
1a001690:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a001694:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a001698:	2001      	movs	r0, #1
1a00169a:	fa00 f102 	lsl.w	r1, r0, r2
1a00169e:	4c35      	ldr	r4, [pc, #212]	; (1a001774 <gpioInit+0x18c>)
1a0016a0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a0016a4:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a0016a8:	ea22 0201 	bic.w	r2, r2, r1
1a0016ac:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a0016b0:	e7c1      	b.n	1a001636 <gpioInit+0x4e>
      Chip_SCU_PinMux(
1a0016b2:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a0016b6:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a0016ba:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a0016be:	f042 02d8 	orr.w	r2, r2, #216	; 0xd8
1a0016c2:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a0016c6:	492c      	ldr	r1, [pc, #176]	; (1a001778 <gpioInit+0x190>)
1a0016c8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_INPUT );
1a0016cc:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a0016d0:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a0016d4:	2001      	movs	r0, #1
1a0016d6:	fa00 f102 	lsl.w	r1, r0, r2
1a0016da:	4c26      	ldr	r4, [pc, #152]	; (1a001774 <gpioInit+0x18c>)
1a0016dc:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a0016e0:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a0016e4:	ea22 0201 	bic.w	r2, r2, r1
1a0016e8:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a0016ec:	e7a3      	b.n	1a001636 <gpioInit+0x4e>
      Chip_SCU_PinMux(
1a0016ee:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a0016f2:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a0016f6:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a0016fa:	f042 02c8 	orr.w	r2, r2, #200	; 0xc8
1a0016fe:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a001702:	491d      	ldr	r1, [pc, #116]	; (1a001778 <gpioInit+0x190>)
1a001704:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_INPUT );
1a001708:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a00170c:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a001710:	2001      	movs	r0, #1
1a001712:	fa00 f102 	lsl.w	r1, r0, r2
1a001716:	4c17      	ldr	r4, [pc, #92]	; (1a001774 <gpioInit+0x18c>)
1a001718:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a00171c:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a001720:	ea22 0201 	bic.w	r2, r2, r1
1a001724:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a001728:	e785      	b.n	1a001636 <gpioInit+0x4e>
      Chip_SCU_PinMux(
1a00172a:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a00172e:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a001732:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a001736:	f042 02d0 	orr.w	r2, r2, #208	; 0xd0
1a00173a:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a00173e:	490e      	ldr	r1, [pc, #56]	; (1a001778 <gpioInit+0x190>)
1a001740:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_OUTPUT );
1a001744:	f89d 400c 	ldrb.w	r4, [sp, #12]
1a001748:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a00174c:	2001      	movs	r0, #1
1a00174e:	fa00 f102 	lsl.w	r1, r0, r2
		pGPIO->DIR[portNum] |= bitValue;
1a001752:	4b08      	ldr	r3, [pc, #32]	; (1a001774 <gpioInit+0x18c>)
1a001754:	f504 6500 	add.w	r5, r4, #2048	; 0x800
1a001758:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
1a00175c:	4331      	orrs	r1, r6
1a00175e:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
      Chip_GPIO_SetPinState( LPC_GPIO_PORT, gpioPort, gpioPin, 0);
1a001762:	b2d2      	uxtb	r2, r2
	pGPIO->B[port][pin] = setting;
1a001764:	eb03 1344 	add.w	r3, r3, r4, lsl #5
1a001768:	2100      	movs	r1, #0
1a00176a:	5499      	strb	r1, [r3, r2]
1a00176c:	e763      	b.n	1a001636 <gpioInit+0x4e>
      ret_val = 0;
1a00176e:	2000      	movs	r0, #0
1a001770:	e761      	b.n	1a001636 <gpioInit+0x4e>
1a001772:	bf00      	nop
1a001774:	400f4000 	.word	0x400f4000
1a001778:	40086000 	.word	0x40086000

1a00177c <gpioWrite>:


bool_t gpioWrite( gpioMap_t pin, bool_t value )
{
1a00177c:	b510      	push	{r4, lr}
1a00177e:	b084      	sub	sp, #16
1a001780:	460c      	mov	r4, r1

   bool_t ret_val     = 1;

   int8_t pinNamePort = 0;
1a001782:	2300      	movs	r3, #0
1a001784:	f88d 300f 	strb.w	r3, [sp, #15]
   int8_t pinNamePin  = 0;
1a001788:	f88d 300e 	strb.w	r3, [sp, #14]

   int8_t func        = 0;
1a00178c:	f88d 300d 	strb.w	r3, [sp, #13]

   int8_t gpioPort    = 0;
1a001790:	f88d 300c 	strb.w	r3, [sp, #12]
   int8_t gpioPin     = 0;
1a001794:	f88d 300b 	strb.w	r3, [sp, #11]

   gpioObtainPinInit( pin, &pinNamePort, &pinNamePin, &func,
1a001798:	f10d 030b 	add.w	r3, sp, #11
1a00179c:	9301      	str	r3, [sp, #4]
1a00179e:	ab03      	add	r3, sp, #12
1a0017a0:	9300      	str	r3, [sp, #0]
1a0017a2:	f10d 030d 	add.w	r3, sp, #13
1a0017a6:	f10d 020e 	add.w	r2, sp, #14
1a0017aa:	f10d 010f 	add.w	r1, sp, #15
1a0017ae:	f7ff ff01 	bl	1a0015b4 <gpioObtainPinInit>
                      &gpioPort, &gpioPin );

   Chip_GPIO_SetPinState( LPC_GPIO_PORT, gpioPort, gpioPin, value);
1a0017b2:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a0017b6:	f89d 200b 	ldrb.w	r2, [sp, #11]
1a0017ba:	3400      	adds	r4, #0
1a0017bc:	bf18      	it	ne
1a0017be:	2401      	movne	r4, #1
1a0017c0:	015b      	lsls	r3, r3, #5
1a0017c2:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
1a0017c6:	f503 2370 	add.w	r3, r3, #983040	; 0xf0000
1a0017ca:	549c      	strb	r4, [r3, r2]

   return ret_val;
}
1a0017cc:	2001      	movs	r0, #1
1a0017ce:	b004      	add	sp, #16
1a0017d0:	bd10      	pop	{r4, pc}

1a0017d2 <gpioRead>:
   return gpioWrite( pin, !gpioRead(pin) );
}


bool_t gpioRead( gpioMap_t pin )
{
1a0017d2:	b500      	push	{lr}
1a0017d4:	b085      	sub	sp, #20

   bool_t ret_val     = OFF;

   int8_t pinNamePort = 0;
1a0017d6:	2300      	movs	r3, #0
1a0017d8:	f88d 300f 	strb.w	r3, [sp, #15]
   int8_t pinNamePin  = 0;
1a0017dc:	f88d 300e 	strb.w	r3, [sp, #14]

   int8_t func        = 0;
1a0017e0:	f88d 300d 	strb.w	r3, [sp, #13]

   int8_t gpioPort    = 0;
1a0017e4:	f88d 300c 	strb.w	r3, [sp, #12]
   int8_t gpioPin     = 0;
1a0017e8:	f88d 300b 	strb.w	r3, [sp, #11]

   gpioObtainPinInit( pin, &pinNamePort, &pinNamePin, &func,
1a0017ec:	f10d 030b 	add.w	r3, sp, #11
1a0017f0:	9301      	str	r3, [sp, #4]
1a0017f2:	ab03      	add	r3, sp, #12
1a0017f4:	9300      	str	r3, [sp, #0]
1a0017f6:	f10d 030d 	add.w	r3, sp, #13
1a0017fa:	f10d 020e 	add.w	r2, sp, #14
1a0017fe:	f10d 010f 	add.w	r1, sp, #15
1a001802:	f7ff fed7 	bl	1a0015b4 <gpioObtainPinInit>
                      &gpioPort, &gpioPin );

   ret_val = (bool_t) Chip_GPIO_ReadPortBit( LPC_GPIO_PORT, gpioPort, gpioPin );
1a001806:	f99d 300c 	ldrsb.w	r3, [sp, #12]
1a00180a:	f89d 200b 	ldrb.w	r2, [sp, #11]
	return (bool) pGPIO->B[port][pin];
1a00180e:	015b      	lsls	r3, r3, #5
1a001810:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
1a001814:	f503 2370 	add.w	r3, r3, #983040	; 0xf0000
1a001818:	5c98      	ldrb	r0, [r3, r2]

   return ret_val;
}
1a00181a:	3000      	adds	r0, #0
1a00181c:	bf18      	it	ne
1a00181e:	2001      	movne	r0, #1
1a001820:	b005      	add	sp, #20
1a001822:	f85d fb04 	ldr.w	pc, [sp], #4
1a001826:	Address 0x000000001a001826 is out of bounds.


1a001828 <USB0_IRQHandler>:
/**
 * @brief   Handle interrupt from USB
 * @return  Nothing
 */
#ifndef USB_HOST_ONLY // Parche para envitar conflictos con biblioteca host
void USB_IRQHandler(void){
1a001828:	b508      	push	{r3, lr}
   USBD_API->hw->ISR(g_hUsb);
1a00182a:	4b04      	ldr	r3, [pc, #16]	; (1a00183c <USB0_IRQHandler+0x14>)
1a00182c:	681b      	ldr	r3, [r3, #0]
1a00182e:	681b      	ldr	r3, [r3, #0]
1a001830:	68db      	ldr	r3, [r3, #12]
1a001832:	4a03      	ldr	r2, [pc, #12]	; (1a001840 <USB0_IRQHandler+0x18>)
1a001834:	6810      	ldr	r0, [r2, #0]
1a001836:	4798      	blx	r3
}
1a001838:	bd08      	pop	{r3, pc}
1a00183a:	bf00      	nop
1a00183c:	10000ae0 	.word	0x10000ae0
1a001840:	10000a9c 	.word	0x10000a9c

1a001844 <boardInit>:

/*==================[external functions definition]==========================*/

/* Set up and initialize board hardware */
void boardInit(void)
{
1a001844:	b508      	push	{r3, lr}
   // Read clock settings and update SystemCoreClock variable
   SystemCoreClockUpdate();
1a001846:	f7ff fa0b 	bl	1a000c60 <SystemCoreClockUpdate>

   cyclesCounterInit( SystemCoreClock );
1a00184a:	4b3a      	ldr	r3, [pc, #232]	; (1a001934 <boardInit+0xf0>)
1a00184c:	6818      	ldr	r0, [r3, #0]
1a00184e:	f7ff fe39 	bl	1a0014c4 <cyclesCounterInit>

   // Inicializar el conteo de Ticks con resolucion de 1ms
   tickInit( 1 );
1a001852:	2001      	movs	r0, #1
1a001854:	2100      	movs	r1, #0
1a001856:	f7ff fe55 	bl	1a001504 <tickInit>

   // Inicializar GPIOs
   gpioInit( 0, GPIO_ENABLE );
1a00185a:	2105      	movs	r1, #5
1a00185c:	2000      	movs	r0, #0
1a00185e:	f7ff fec3 	bl	1a0015e8 <gpioInit>

   // Configuracion de pines de entrada para Teclas de la EDU-CIAA-NXP
   gpioInit( TEC1, GPIO_INPUT );
1a001862:	2100      	movs	r1, #0
1a001864:	2024      	movs	r0, #36	; 0x24
1a001866:	f7ff febf 	bl	1a0015e8 <gpioInit>
   gpioInit( TEC2, GPIO_INPUT );
1a00186a:	2100      	movs	r1, #0
1a00186c:	2025      	movs	r0, #37	; 0x25
1a00186e:	f7ff febb 	bl	1a0015e8 <gpioInit>
   gpioInit( TEC3, GPIO_INPUT );
1a001872:	2100      	movs	r1, #0
1a001874:	2026      	movs	r0, #38	; 0x26
1a001876:	f7ff feb7 	bl	1a0015e8 <gpioInit>
   gpioInit( TEC4, GPIO_INPUT );
1a00187a:	2100      	movs	r1, #0
1a00187c:	2027      	movs	r0, #39	; 0x27
1a00187e:	f7ff feb3 	bl	1a0015e8 <gpioInit>

   // Configuracion de pines de salida para Leds de la EDU-CIAA-NXP
   gpioInit( LEDR, GPIO_OUTPUT );
1a001882:	2101      	movs	r1, #1
1a001884:	2028      	movs	r0, #40	; 0x28
1a001886:	f7ff feaf 	bl	1a0015e8 <gpioInit>
   gpioInit( LEDG, GPIO_OUTPUT );
1a00188a:	2101      	movs	r1, #1
1a00188c:	2029      	movs	r0, #41	; 0x29
1a00188e:	f7ff feab 	bl	1a0015e8 <gpioInit>
   gpioInit( LEDB, GPIO_OUTPUT );
1a001892:	2101      	movs	r1, #1
1a001894:	202a      	movs	r0, #42	; 0x2a
1a001896:	f7ff fea7 	bl	1a0015e8 <gpioInit>
   gpioInit( LED1, GPIO_OUTPUT );
1a00189a:	2101      	movs	r1, #1
1a00189c:	202b      	movs	r0, #43	; 0x2b
1a00189e:	f7ff fea3 	bl	1a0015e8 <gpioInit>
   gpioInit( LED2, GPIO_OUTPUT );
1a0018a2:	2101      	movs	r1, #1
1a0018a4:	202c      	movs	r0, #44	; 0x2c
1a0018a6:	f7ff fe9f 	bl	1a0015e8 <gpioInit>
   gpioInit( LED3, GPIO_OUTPUT );
1a0018aa:	2101      	movs	r1, #1
1a0018ac:	202d      	movs	r0, #45	; 0x2d
1a0018ae:	f7ff fe9b 	bl	1a0015e8 <gpioInit>


   // Configuracion de pines de entrada de la CIAA-NXP
   gpioInit( DI0, GPIO_INPUT );
1a0018b2:	2100      	movs	r1, #0
1a0018b4:	202e      	movs	r0, #46	; 0x2e
1a0018b6:	f7ff fe97 	bl	1a0015e8 <gpioInit>
   gpioInit( DI1, GPIO_INPUT );
1a0018ba:	2100      	movs	r1, #0
1a0018bc:	202f      	movs	r0, #47	; 0x2f
1a0018be:	f7ff fe93 	bl	1a0015e8 <gpioInit>
   gpioInit( DI2, GPIO_INPUT );
1a0018c2:	2100      	movs	r1, #0
1a0018c4:	2030      	movs	r0, #48	; 0x30
1a0018c6:	f7ff fe8f 	bl	1a0015e8 <gpioInit>
   gpioInit( DI3, GPIO_INPUT );
1a0018ca:	2100      	movs	r1, #0
1a0018cc:	2031      	movs	r0, #49	; 0x31
1a0018ce:	f7ff fe8b 	bl	1a0015e8 <gpioInit>
   gpioInit( DI4, GPIO_INPUT );
1a0018d2:	2100      	movs	r1, #0
1a0018d4:	2032      	movs	r0, #50	; 0x32
1a0018d6:	f7ff fe87 	bl	1a0015e8 <gpioInit>
   gpioInit( DI5, GPIO_INPUT );
1a0018da:	2100      	movs	r1, #0
1a0018dc:	2033      	movs	r0, #51	; 0x33
1a0018de:	f7ff fe83 	bl	1a0015e8 <gpioInit>
   gpioInit( DI6, GPIO_INPUT );
1a0018e2:	2100      	movs	r1, #0
1a0018e4:	2034      	movs	r0, #52	; 0x34
1a0018e6:	f7ff fe7f 	bl	1a0015e8 <gpioInit>
   gpioInit( DI7, GPIO_INPUT );
1a0018ea:	2100      	movs	r1, #0
1a0018ec:	2035      	movs	r0, #53	; 0x35
1a0018ee:	f7ff fe7b 	bl	1a0015e8 <gpioInit>

   // Configuracion de pines de salida de la CIAA-NXP
   gpioInit( DO0, GPIO_OUTPUT );
1a0018f2:	2101      	movs	r1, #1
1a0018f4:	2036      	movs	r0, #54	; 0x36
1a0018f6:	f7ff fe77 	bl	1a0015e8 <gpioInit>
   gpioInit( DO1, GPIO_OUTPUT );
1a0018fa:	2101      	movs	r1, #1
1a0018fc:	2037      	movs	r0, #55	; 0x37
1a0018fe:	f7ff fe73 	bl	1a0015e8 <gpioInit>
   gpioInit( DO2, GPIO_OUTPUT );
1a001902:	2101      	movs	r1, #1
1a001904:	2038      	movs	r0, #56	; 0x38
1a001906:	f7ff fe6f 	bl	1a0015e8 <gpioInit>
   gpioInit( DO3, GPIO_OUTPUT );
1a00190a:	2101      	movs	r1, #1
1a00190c:	2039      	movs	r0, #57	; 0x39
1a00190e:	f7ff fe6b 	bl	1a0015e8 <gpioInit>
   gpioInit( DO4, GPIO_OUTPUT );
1a001912:	2101      	movs	r1, #1
1a001914:	203a      	movs	r0, #58	; 0x3a
1a001916:	f7ff fe67 	bl	1a0015e8 <gpioInit>
   gpioInit( DO5, GPIO_OUTPUT );
1a00191a:	2101      	movs	r1, #1
1a00191c:	203b      	movs	r0, #59	; 0x3b
1a00191e:	f7ff fe63 	bl	1a0015e8 <gpioInit>
   gpioInit( DO6, GPIO_OUTPUT );
1a001922:	2101      	movs	r1, #1
1a001924:	203c      	movs	r0, #60	; 0x3c
1a001926:	f7ff fe5f 	bl	1a0015e8 <gpioInit>
   gpioInit( DO7, GPIO_OUTPUT );
1a00192a:	2101      	movs	r1, #1
1a00192c:	203d      	movs	r0, #61	; 0x3d
1a00192e:	f7ff fe5b 	bl	1a0015e8 <gpioInit>

}
1a001932:	bd08      	pop	{r3, pc}
1a001934:	10000ad4 	.word	0x10000ad4

1a001938 <delay>:
/* ---- Blocking Delay ---- */

// delay( 1, DELAY_US );

void delay(tick_t duration)
{
1a001938:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a00193c:	4680      	mov	r8, r0
1a00193e:	4689      	mov	r9, r1
   tick_t startTime = tickRead();
1a001940:	f7ff fdce 	bl	1a0014e0 <tickRead>
1a001944:	4606      	mov	r6, r0
1a001946:	460f      	mov	r7, r1
   while ( (tick_t)(tickRead() - startTime) < duration/tickRateMS );
1a001948:	f7ff fdca 	bl	1a0014e0 <tickRead>
1a00194c:	1b84      	subs	r4, r0, r6
1a00194e:	eb61 0507 	sbc.w	r5, r1, r7
1a001952:	4b06      	ldr	r3, [pc, #24]	; (1a00196c <delay+0x34>)
1a001954:	e9d3 2300 	ldrd	r2, r3, [r3]
1a001958:	4640      	mov	r0, r8
1a00195a:	4649      	mov	r1, r9
1a00195c:	f000 fc1c 	bl	1a002198 <__aeabi_uldivmod>
1a001960:	428d      	cmp	r5, r1
1a001962:	bf08      	it	eq
1a001964:	4284      	cmpeq	r4, r0
1a001966:	d3ef      	bcc.n	1a001948 <delay+0x10>
}
1a001968:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a00196c:	10000ad8 	.word	0x10000ad8

1a001970 <clearInterrupt>:
}

static void clearInterrupt(uint8_t irqChannel)
{
   /* Clear interrupt flag for irqChannel */
   Chip_PININT_ClearIntStatus(LPC_GPIO_PIN_INT,PININTCH(irqChannel));
1a001970:	2301      	movs	r3, #1
1a001972:	fa03 f000 	lsl.w	r0, r3, r0
 * @param	pins	: Pin interrupts to clear (ORed value of PININTCH*)
 * @return	Nothing
 */
STATIC INLINE void Chip_PININT_ClearIntStatus(LPC_PIN_INT_T *pPININT, uint32_t pins)
{
	pPININT->IST = pins;
1a001976:	4b01      	ldr	r3, [pc, #4]	; (1a00197c <clearInterrupt+0xc>)
1a001978:	6258      	str	r0, [r3, #36]	; 0x24
}
1a00197a:	4770      	bx	lr
1a00197c:	40087000 	.word	0x40087000

1a001980 <serveInterrupt>:

static void serveInterrupt(uint8_t irqChannel)
{
1a001980:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   ultrasonicSensorMap_t aSensor = ultrasonicSensorsIrqMap[irqChannel];
1a001982:	4b12      	ldr	r3, [pc, #72]	; (1a0019cc <serveInterrupt+0x4c>)
1a001984:	5c1a      	ldrb	r2, [r3, r0]
	return pPININT->RISE;
1a001986:	4b12      	ldr	r3, [pc, #72]	; (1a0019d0 <serveInterrupt+0x50>)
1a001988:	69d9      	ldr	r1, [r3, #28]
   /* If interrupt was because a rising edge */
   if ( Chip_PININT_GetRiseStates(LPC_GPIO_PIN_INT) & PININTCH(irqChannel) ) {
1a00198a:	2301      	movs	r3, #1
1a00198c:	4083      	lsls	r3, r0
1a00198e:	420b      	tst	r3, r1
1a001990:	d111      	bne.n	1a0019b6 <serveInterrupt+0x36>
 * @return	Current timer terminal count value
 * @note	Returns the current timer terminal count.
 */
STATIC INLINE uint32_t Chip_TIMER_ReadCount(LPC_TIMER_T *pTMR)
{
	return pTMR->TC;
1a001992:	4910      	ldr	r1, [pc, #64]	; (1a0019d4 <serveInterrupt+0x54>)
1a001994:	688e      	ldr	r6, [r1, #8]
   else {
      //TODO add method to sapi_timer.h in order to get a timer count -> avoid using LPC_TIMER0 directly
      //TODO echoFallTime may not be necesary

      /* Save actual timer count in echoFallTime */
      ultrasonicSensors[aSensor].echoFallTime = Chip_TIMER_ReadCount(LPC_TIMER0);
1a001996:	4d10      	ldr	r5, [pc, #64]	; (1a0019d8 <serveInterrupt+0x58>)
1a001998:	0051      	lsls	r1, r2, #1
1a00199a:	188f      	adds	r7, r1, r2
1a00199c:	00fc      	lsls	r4, r7, #3
1a00199e:	4627      	mov	r7, r4
1a0019a0:	442c      	add	r4, r5
1a0019a2:	60a6      	str	r6, [r4, #8]
      /* Compute echo pulse width in timer ticks and save in lastEchoWidth */
      ultrasonicSensors[aSensor].lastEchoWidth = ultrasonicSensors[aSensor].echoFallTime - ultrasonicSensors[aSensor].echoRiseTime;
1a0019a4:	6864      	ldr	r4, [r4, #4]
1a0019a6:	1b36      	subs	r6, r6, r4
1a0019a8:	443d      	add	r5, r7
1a0019aa:	60ee      	str	r6, [r5, #12]
	pPININT->FALL = pins;
1a0019ac:	4a08      	ldr	r2, [pc, #32]	; (1a0019d0 <serveInterrupt+0x50>)
1a0019ae:	6213      	str	r3, [r2, #32]
      /* Clear falling edge irq */
      Chip_PININT_ClearFallStates(LPC_GPIO_PIN_INT,PININTCH(irqChannel));
   }

   /* Clear IRQ status */
   clearInterrupt(irqChannel);
1a0019b0:	f7ff ffde 	bl	1a001970 <clearInterrupt>
}
1a0019b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a0019b6:	4907      	ldr	r1, [pc, #28]	; (1a0019d4 <serveInterrupt+0x54>)
1a0019b8:	688c      	ldr	r4, [r1, #8]
      ultrasonicSensors[aSensor].echoRiseTime = Chip_TIMER_ReadCount(LPC_TIMER0);
1a0019ba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
1a0019be:	00d1      	lsls	r1, r2, #3
1a0019c0:	4a05      	ldr	r2, [pc, #20]	; (1a0019d8 <serveInterrupt+0x58>)
1a0019c2:	440a      	add	r2, r1
1a0019c4:	6054      	str	r4, [r2, #4]
	pPININT->RISE = pins;
1a0019c6:	4a02      	ldr	r2, [pc, #8]	; (1a0019d0 <serveInterrupt+0x50>)
1a0019c8:	61d3      	str	r3, [r2, #28]
1a0019ca:	e7f1      	b.n	1a0019b0 <serveInterrupt+0x30>
1a0019cc:	1a007840 	.word	0x1a007840
1a0019d0:	40087000 	.word	0x40087000
1a0019d4:	40084000 	.word	0x40084000
1a0019d8:	10000040 	.word	0x10000040

1a0019dc <GPIO0_IRQHandler>:
/*
 * @Brief:   GPIO Echo interrupt handler for each sensor
 */
#ifndef OVERRIDE_SAPI_HCSR04_GPIO_IRQ
void GPIO0_IRQHandler(void)
{
1a0019dc:	b508      	push	{r3, lr}
   serveInterrupt(0);
1a0019de:	2000      	movs	r0, #0
1a0019e0:	f7ff ffce 	bl	1a001980 <serveInterrupt>
}
1a0019e4:	bd08      	pop	{r3, pc}

1a0019e6 <GPIO1_IRQHandler>:

void GPIO1_IRQHandler(void)
{
1a0019e6:	b508      	push	{r3, lr}
   serveInterrupt(1);
1a0019e8:	2001      	movs	r0, #1
1a0019ea:	f7ff ffc9 	bl	1a001980 <serveInterrupt>
}
1a0019ee:	bd08      	pop	{r3, pc}

1a0019f0 <GPIO2_IRQHandler>:

void GPIO2_IRQHandler(void)
{
1a0019f0:	b508      	push	{r3, lr}
   serveInterrupt(2);
1a0019f2:	2002      	movs	r0, #2
1a0019f4:	f7ff ffc4 	bl	1a001980 <serveInterrupt>
}
1a0019f8:	bd08      	pop	{r3, pc}
1a0019fa:	Address 0x000000001a0019fa is out of bounds.


1a0019fc <__aeabi_drsub>:
1a0019fc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
1a001a00:	e002      	b.n	1a001a08 <__adddf3>
1a001a02:	bf00      	nop

1a001a04 <__aeabi_dsub>:
1a001a04:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

1a001a08 <__adddf3>:
1a001a08:	b530      	push	{r4, r5, lr}
1a001a0a:	ea4f 0441 	mov.w	r4, r1, lsl #1
1a001a0e:	ea4f 0543 	mov.w	r5, r3, lsl #1
1a001a12:	ea94 0f05 	teq	r4, r5
1a001a16:	bf08      	it	eq
1a001a18:	ea90 0f02 	teqeq	r0, r2
1a001a1c:	bf1f      	itttt	ne
1a001a1e:	ea54 0c00 	orrsne.w	ip, r4, r0
1a001a22:	ea55 0c02 	orrsne.w	ip, r5, r2
1a001a26:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
1a001a2a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1a001a2e:	f000 80e2 	beq.w	1a001bf6 <__adddf3+0x1ee>
1a001a32:	ea4f 5454 	mov.w	r4, r4, lsr #21
1a001a36:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
1a001a3a:	bfb8      	it	lt
1a001a3c:	426d      	neglt	r5, r5
1a001a3e:	dd0c      	ble.n	1a001a5a <__adddf3+0x52>
1a001a40:	442c      	add	r4, r5
1a001a42:	ea80 0202 	eor.w	r2, r0, r2
1a001a46:	ea81 0303 	eor.w	r3, r1, r3
1a001a4a:	ea82 0000 	eor.w	r0, r2, r0
1a001a4e:	ea83 0101 	eor.w	r1, r3, r1
1a001a52:	ea80 0202 	eor.w	r2, r0, r2
1a001a56:	ea81 0303 	eor.w	r3, r1, r3
1a001a5a:	2d36      	cmp	r5, #54	; 0x36
1a001a5c:	bf88      	it	hi
1a001a5e:	bd30      	pophi	{r4, r5, pc}
1a001a60:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
1a001a64:	ea4f 3101 	mov.w	r1, r1, lsl #12
1a001a68:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
1a001a6c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
1a001a70:	d002      	beq.n	1a001a78 <__adddf3+0x70>
1a001a72:	4240      	negs	r0, r0
1a001a74:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1a001a78:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
1a001a7c:	ea4f 3303 	mov.w	r3, r3, lsl #12
1a001a80:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
1a001a84:	d002      	beq.n	1a001a8c <__adddf3+0x84>
1a001a86:	4252      	negs	r2, r2
1a001a88:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
1a001a8c:	ea94 0f05 	teq	r4, r5
1a001a90:	f000 80a7 	beq.w	1a001be2 <__adddf3+0x1da>
1a001a94:	f1a4 0401 	sub.w	r4, r4, #1
1a001a98:	f1d5 0e20 	rsbs	lr, r5, #32
1a001a9c:	db0d      	blt.n	1a001aba <__adddf3+0xb2>
1a001a9e:	fa02 fc0e 	lsl.w	ip, r2, lr
1a001aa2:	fa22 f205 	lsr.w	r2, r2, r5
1a001aa6:	1880      	adds	r0, r0, r2
1a001aa8:	f141 0100 	adc.w	r1, r1, #0
1a001aac:	fa03 f20e 	lsl.w	r2, r3, lr
1a001ab0:	1880      	adds	r0, r0, r2
1a001ab2:	fa43 f305 	asr.w	r3, r3, r5
1a001ab6:	4159      	adcs	r1, r3
1a001ab8:	e00e      	b.n	1a001ad8 <__adddf3+0xd0>
1a001aba:	f1a5 0520 	sub.w	r5, r5, #32
1a001abe:	f10e 0e20 	add.w	lr, lr, #32
1a001ac2:	2a01      	cmp	r2, #1
1a001ac4:	fa03 fc0e 	lsl.w	ip, r3, lr
1a001ac8:	bf28      	it	cs
1a001aca:	f04c 0c02 	orrcs.w	ip, ip, #2
1a001ace:	fa43 f305 	asr.w	r3, r3, r5
1a001ad2:	18c0      	adds	r0, r0, r3
1a001ad4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
1a001ad8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
1a001adc:	d507      	bpl.n	1a001aee <__adddf3+0xe6>
1a001ade:	f04f 0e00 	mov.w	lr, #0
1a001ae2:	f1dc 0c00 	rsbs	ip, ip, #0
1a001ae6:	eb7e 0000 	sbcs.w	r0, lr, r0
1a001aea:	eb6e 0101 	sbc.w	r1, lr, r1
1a001aee:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
1a001af2:	d31b      	bcc.n	1a001b2c <__adddf3+0x124>
1a001af4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
1a001af8:	d30c      	bcc.n	1a001b14 <__adddf3+0x10c>
1a001afa:	0849      	lsrs	r1, r1, #1
1a001afc:	ea5f 0030 	movs.w	r0, r0, rrx
1a001b00:	ea4f 0c3c 	mov.w	ip, ip, rrx
1a001b04:	f104 0401 	add.w	r4, r4, #1
1a001b08:	ea4f 5244 	mov.w	r2, r4, lsl #21
1a001b0c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
1a001b10:	f080 809a 	bcs.w	1a001c48 <__adddf3+0x240>
1a001b14:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
1a001b18:	bf08      	it	eq
1a001b1a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1a001b1e:	f150 0000 	adcs.w	r0, r0, #0
1a001b22:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1a001b26:	ea41 0105 	orr.w	r1, r1, r5
1a001b2a:	bd30      	pop	{r4, r5, pc}
1a001b2c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
1a001b30:	4140      	adcs	r0, r0
1a001b32:	eb41 0101 	adc.w	r1, r1, r1
1a001b36:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1a001b3a:	f1a4 0401 	sub.w	r4, r4, #1
1a001b3e:	d1e9      	bne.n	1a001b14 <__adddf3+0x10c>
1a001b40:	f091 0f00 	teq	r1, #0
1a001b44:	bf04      	itt	eq
1a001b46:	4601      	moveq	r1, r0
1a001b48:	2000      	moveq	r0, #0
1a001b4a:	fab1 f381 	clz	r3, r1
1a001b4e:	bf08      	it	eq
1a001b50:	3320      	addeq	r3, #32
1a001b52:	f1a3 030b 	sub.w	r3, r3, #11
1a001b56:	f1b3 0220 	subs.w	r2, r3, #32
1a001b5a:	da0c      	bge.n	1a001b76 <__adddf3+0x16e>
1a001b5c:	320c      	adds	r2, #12
1a001b5e:	dd08      	ble.n	1a001b72 <__adddf3+0x16a>
1a001b60:	f102 0c14 	add.w	ip, r2, #20
1a001b64:	f1c2 020c 	rsb	r2, r2, #12
1a001b68:	fa01 f00c 	lsl.w	r0, r1, ip
1a001b6c:	fa21 f102 	lsr.w	r1, r1, r2
1a001b70:	e00c      	b.n	1a001b8c <__adddf3+0x184>
1a001b72:	f102 0214 	add.w	r2, r2, #20
1a001b76:	bfd8      	it	le
1a001b78:	f1c2 0c20 	rsble	ip, r2, #32
1a001b7c:	fa01 f102 	lsl.w	r1, r1, r2
1a001b80:	fa20 fc0c 	lsr.w	ip, r0, ip
1a001b84:	bfdc      	itt	le
1a001b86:	ea41 010c 	orrle.w	r1, r1, ip
1a001b8a:	4090      	lslle	r0, r2
1a001b8c:	1ae4      	subs	r4, r4, r3
1a001b8e:	bfa2      	ittt	ge
1a001b90:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
1a001b94:	4329      	orrge	r1, r5
1a001b96:	bd30      	popge	{r4, r5, pc}
1a001b98:	ea6f 0404 	mvn.w	r4, r4
1a001b9c:	3c1f      	subs	r4, #31
1a001b9e:	da1c      	bge.n	1a001bda <__adddf3+0x1d2>
1a001ba0:	340c      	adds	r4, #12
1a001ba2:	dc0e      	bgt.n	1a001bc2 <__adddf3+0x1ba>
1a001ba4:	f104 0414 	add.w	r4, r4, #20
1a001ba8:	f1c4 0220 	rsb	r2, r4, #32
1a001bac:	fa20 f004 	lsr.w	r0, r0, r4
1a001bb0:	fa01 f302 	lsl.w	r3, r1, r2
1a001bb4:	ea40 0003 	orr.w	r0, r0, r3
1a001bb8:	fa21 f304 	lsr.w	r3, r1, r4
1a001bbc:	ea45 0103 	orr.w	r1, r5, r3
1a001bc0:	bd30      	pop	{r4, r5, pc}
1a001bc2:	f1c4 040c 	rsb	r4, r4, #12
1a001bc6:	f1c4 0220 	rsb	r2, r4, #32
1a001bca:	fa20 f002 	lsr.w	r0, r0, r2
1a001bce:	fa01 f304 	lsl.w	r3, r1, r4
1a001bd2:	ea40 0003 	orr.w	r0, r0, r3
1a001bd6:	4629      	mov	r1, r5
1a001bd8:	bd30      	pop	{r4, r5, pc}
1a001bda:	fa21 f004 	lsr.w	r0, r1, r4
1a001bde:	4629      	mov	r1, r5
1a001be0:	bd30      	pop	{r4, r5, pc}
1a001be2:	f094 0f00 	teq	r4, #0
1a001be6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
1a001bea:	bf06      	itte	eq
1a001bec:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
1a001bf0:	3401      	addeq	r4, #1
1a001bf2:	3d01      	subne	r5, #1
1a001bf4:	e74e      	b.n	1a001a94 <__adddf3+0x8c>
1a001bf6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
1a001bfa:	bf18      	it	ne
1a001bfc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1a001c00:	d029      	beq.n	1a001c56 <__adddf3+0x24e>
1a001c02:	ea94 0f05 	teq	r4, r5
1a001c06:	bf08      	it	eq
1a001c08:	ea90 0f02 	teqeq	r0, r2
1a001c0c:	d005      	beq.n	1a001c1a <__adddf3+0x212>
1a001c0e:	ea54 0c00 	orrs.w	ip, r4, r0
1a001c12:	bf04      	itt	eq
1a001c14:	4619      	moveq	r1, r3
1a001c16:	4610      	moveq	r0, r2
1a001c18:	bd30      	pop	{r4, r5, pc}
1a001c1a:	ea91 0f03 	teq	r1, r3
1a001c1e:	bf1e      	ittt	ne
1a001c20:	2100      	movne	r1, #0
1a001c22:	2000      	movne	r0, #0
1a001c24:	bd30      	popne	{r4, r5, pc}
1a001c26:	ea5f 5c54 	movs.w	ip, r4, lsr #21
1a001c2a:	d105      	bne.n	1a001c38 <__adddf3+0x230>
1a001c2c:	0040      	lsls	r0, r0, #1
1a001c2e:	4149      	adcs	r1, r1
1a001c30:	bf28      	it	cs
1a001c32:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
1a001c36:	bd30      	pop	{r4, r5, pc}
1a001c38:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
1a001c3c:	bf3c      	itt	cc
1a001c3e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
1a001c42:	bd30      	popcc	{r4, r5, pc}
1a001c44:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
1a001c48:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
1a001c4c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
1a001c50:	f04f 0000 	mov.w	r0, #0
1a001c54:	bd30      	pop	{r4, r5, pc}
1a001c56:	ea7f 5c64 	mvns.w	ip, r4, asr #21
1a001c5a:	bf1a      	itte	ne
1a001c5c:	4619      	movne	r1, r3
1a001c5e:	4610      	movne	r0, r2
1a001c60:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
1a001c64:	bf1c      	itt	ne
1a001c66:	460b      	movne	r3, r1
1a001c68:	4602      	movne	r2, r0
1a001c6a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1a001c6e:	bf06      	itte	eq
1a001c70:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
1a001c74:	ea91 0f03 	teqeq	r1, r3
1a001c78:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
1a001c7c:	bd30      	pop	{r4, r5, pc}
1a001c7e:	bf00      	nop

1a001c80 <__aeabi_ui2d>:
1a001c80:	f090 0f00 	teq	r0, #0
1a001c84:	bf04      	itt	eq
1a001c86:	2100      	moveq	r1, #0
1a001c88:	4770      	bxeq	lr
1a001c8a:	b530      	push	{r4, r5, lr}
1a001c8c:	f44f 6480 	mov.w	r4, #1024	; 0x400
1a001c90:	f104 0432 	add.w	r4, r4, #50	; 0x32
1a001c94:	f04f 0500 	mov.w	r5, #0
1a001c98:	f04f 0100 	mov.w	r1, #0
1a001c9c:	e750      	b.n	1a001b40 <__adddf3+0x138>
1a001c9e:	bf00      	nop

1a001ca0 <__aeabi_i2d>:
1a001ca0:	f090 0f00 	teq	r0, #0
1a001ca4:	bf04      	itt	eq
1a001ca6:	2100      	moveq	r1, #0
1a001ca8:	4770      	bxeq	lr
1a001caa:	b530      	push	{r4, r5, lr}
1a001cac:	f44f 6480 	mov.w	r4, #1024	; 0x400
1a001cb0:	f104 0432 	add.w	r4, r4, #50	; 0x32
1a001cb4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
1a001cb8:	bf48      	it	mi
1a001cba:	4240      	negmi	r0, r0
1a001cbc:	f04f 0100 	mov.w	r1, #0
1a001cc0:	e73e      	b.n	1a001b40 <__adddf3+0x138>
1a001cc2:	bf00      	nop

1a001cc4 <__aeabi_f2d>:
1a001cc4:	0042      	lsls	r2, r0, #1
1a001cc6:	ea4f 01e2 	mov.w	r1, r2, asr #3
1a001cca:	ea4f 0131 	mov.w	r1, r1, rrx
1a001cce:	ea4f 7002 	mov.w	r0, r2, lsl #28
1a001cd2:	bf1f      	itttt	ne
1a001cd4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
1a001cd8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
1a001cdc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
1a001ce0:	4770      	bxne	lr
1a001ce2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
1a001ce6:	bf08      	it	eq
1a001ce8:	4770      	bxeq	lr
1a001cea:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
1a001cee:	bf04      	itt	eq
1a001cf0:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
1a001cf4:	4770      	bxeq	lr
1a001cf6:	b530      	push	{r4, r5, lr}
1a001cf8:	f44f 7460 	mov.w	r4, #896	; 0x380
1a001cfc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
1a001d00:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
1a001d04:	e71c      	b.n	1a001b40 <__adddf3+0x138>
1a001d06:	bf00      	nop

1a001d08 <__aeabi_ul2d>:
1a001d08:	ea50 0201 	orrs.w	r2, r0, r1
1a001d0c:	bf08      	it	eq
1a001d0e:	4770      	bxeq	lr
1a001d10:	b530      	push	{r4, r5, lr}
1a001d12:	f04f 0500 	mov.w	r5, #0
1a001d16:	e00a      	b.n	1a001d2e <__aeabi_l2d+0x16>

1a001d18 <__aeabi_l2d>:
1a001d18:	ea50 0201 	orrs.w	r2, r0, r1
1a001d1c:	bf08      	it	eq
1a001d1e:	4770      	bxeq	lr
1a001d20:	b530      	push	{r4, r5, lr}
1a001d22:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
1a001d26:	d502      	bpl.n	1a001d2e <__aeabi_l2d+0x16>
1a001d28:	4240      	negs	r0, r0
1a001d2a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1a001d2e:	f44f 6480 	mov.w	r4, #1024	; 0x400
1a001d32:	f104 0432 	add.w	r4, r4, #50	; 0x32
1a001d36:	ea5f 5c91 	movs.w	ip, r1, lsr #22
1a001d3a:	f43f aed8 	beq.w	1a001aee <__adddf3+0xe6>
1a001d3e:	f04f 0203 	mov.w	r2, #3
1a001d42:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1a001d46:	bf18      	it	ne
1a001d48:	3203      	addne	r2, #3
1a001d4a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1a001d4e:	bf18      	it	ne
1a001d50:	3203      	addne	r2, #3
1a001d52:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
1a001d56:	f1c2 0320 	rsb	r3, r2, #32
1a001d5a:	fa00 fc03 	lsl.w	ip, r0, r3
1a001d5e:	fa20 f002 	lsr.w	r0, r0, r2
1a001d62:	fa01 fe03 	lsl.w	lr, r1, r3
1a001d66:	ea40 000e 	orr.w	r0, r0, lr
1a001d6a:	fa21 f102 	lsr.w	r1, r1, r2
1a001d6e:	4414      	add	r4, r2
1a001d70:	e6bd      	b.n	1a001aee <__adddf3+0xe6>
1a001d72:	bf00      	nop

1a001d74 <__aeabi_dmul>:
1a001d74:	b570      	push	{r4, r5, r6, lr}
1a001d76:	f04f 0cff 	mov.w	ip, #255	; 0xff
1a001d7a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
1a001d7e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1a001d82:	bf1d      	ittte	ne
1a001d84:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
1a001d88:	ea94 0f0c 	teqne	r4, ip
1a001d8c:	ea95 0f0c 	teqne	r5, ip
1a001d90:	f000 f8de 	bleq	1a001f50 <__aeabi_dmul+0x1dc>
1a001d94:	442c      	add	r4, r5
1a001d96:	ea81 0603 	eor.w	r6, r1, r3
1a001d9a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
1a001d9e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
1a001da2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
1a001da6:	bf18      	it	ne
1a001da8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
1a001dac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
1a001db0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
1a001db4:	d038      	beq.n	1a001e28 <__aeabi_dmul+0xb4>
1a001db6:	fba0 ce02 	umull	ip, lr, r0, r2
1a001dba:	f04f 0500 	mov.w	r5, #0
1a001dbe:	fbe1 e502 	umlal	lr, r5, r1, r2
1a001dc2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
1a001dc6:	fbe0 e503 	umlal	lr, r5, r0, r3
1a001dca:	f04f 0600 	mov.w	r6, #0
1a001dce:	fbe1 5603 	umlal	r5, r6, r1, r3
1a001dd2:	f09c 0f00 	teq	ip, #0
1a001dd6:	bf18      	it	ne
1a001dd8:	f04e 0e01 	orrne.w	lr, lr, #1
1a001ddc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
1a001de0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
1a001de4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
1a001de8:	d204      	bcs.n	1a001df4 <__aeabi_dmul+0x80>
1a001dea:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
1a001dee:	416d      	adcs	r5, r5
1a001df0:	eb46 0606 	adc.w	r6, r6, r6
1a001df4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
1a001df8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
1a001dfc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
1a001e00:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
1a001e04:	ea4f 2ece 	mov.w	lr, lr, lsl #11
1a001e08:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
1a001e0c:	bf88      	it	hi
1a001e0e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
1a001e12:	d81e      	bhi.n	1a001e52 <__aeabi_dmul+0xde>
1a001e14:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
1a001e18:	bf08      	it	eq
1a001e1a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
1a001e1e:	f150 0000 	adcs.w	r0, r0, #0
1a001e22:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1a001e26:	bd70      	pop	{r4, r5, r6, pc}
1a001e28:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
1a001e2c:	ea46 0101 	orr.w	r1, r6, r1
1a001e30:	ea40 0002 	orr.w	r0, r0, r2
1a001e34:	ea81 0103 	eor.w	r1, r1, r3
1a001e38:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
1a001e3c:	bfc2      	ittt	gt
1a001e3e:	ebd4 050c 	rsbsgt	r5, r4, ip
1a001e42:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1a001e46:	bd70      	popgt	{r4, r5, r6, pc}
1a001e48:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
1a001e4c:	f04f 0e00 	mov.w	lr, #0
1a001e50:	3c01      	subs	r4, #1
1a001e52:	f300 80ab 	bgt.w	1a001fac <__aeabi_dmul+0x238>
1a001e56:	f114 0f36 	cmn.w	r4, #54	; 0x36
1a001e5a:	bfde      	ittt	le
1a001e5c:	2000      	movle	r0, #0
1a001e5e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
1a001e62:	bd70      	pople	{r4, r5, r6, pc}
1a001e64:	f1c4 0400 	rsb	r4, r4, #0
1a001e68:	3c20      	subs	r4, #32
1a001e6a:	da35      	bge.n	1a001ed8 <__aeabi_dmul+0x164>
1a001e6c:	340c      	adds	r4, #12
1a001e6e:	dc1b      	bgt.n	1a001ea8 <__aeabi_dmul+0x134>
1a001e70:	f104 0414 	add.w	r4, r4, #20
1a001e74:	f1c4 0520 	rsb	r5, r4, #32
1a001e78:	fa00 f305 	lsl.w	r3, r0, r5
1a001e7c:	fa20 f004 	lsr.w	r0, r0, r4
1a001e80:	fa01 f205 	lsl.w	r2, r1, r5
1a001e84:	ea40 0002 	orr.w	r0, r0, r2
1a001e88:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
1a001e8c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
1a001e90:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
1a001e94:	fa21 f604 	lsr.w	r6, r1, r4
1a001e98:	eb42 0106 	adc.w	r1, r2, r6
1a001e9c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1a001ea0:	bf08      	it	eq
1a001ea2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1a001ea6:	bd70      	pop	{r4, r5, r6, pc}
1a001ea8:	f1c4 040c 	rsb	r4, r4, #12
1a001eac:	f1c4 0520 	rsb	r5, r4, #32
1a001eb0:	fa00 f304 	lsl.w	r3, r0, r4
1a001eb4:	fa20 f005 	lsr.w	r0, r0, r5
1a001eb8:	fa01 f204 	lsl.w	r2, r1, r4
1a001ebc:	ea40 0002 	orr.w	r0, r0, r2
1a001ec0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1a001ec4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
1a001ec8:	f141 0100 	adc.w	r1, r1, #0
1a001ecc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1a001ed0:	bf08      	it	eq
1a001ed2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1a001ed6:	bd70      	pop	{r4, r5, r6, pc}
1a001ed8:	f1c4 0520 	rsb	r5, r4, #32
1a001edc:	fa00 f205 	lsl.w	r2, r0, r5
1a001ee0:	ea4e 0e02 	orr.w	lr, lr, r2
1a001ee4:	fa20 f304 	lsr.w	r3, r0, r4
1a001ee8:	fa01 f205 	lsl.w	r2, r1, r5
1a001eec:	ea43 0302 	orr.w	r3, r3, r2
1a001ef0:	fa21 f004 	lsr.w	r0, r1, r4
1a001ef4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1a001ef8:	fa21 f204 	lsr.w	r2, r1, r4
1a001efc:	ea20 0002 	bic.w	r0, r0, r2
1a001f00:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
1a001f04:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1a001f08:	bf08      	it	eq
1a001f0a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1a001f0e:	bd70      	pop	{r4, r5, r6, pc}
1a001f10:	f094 0f00 	teq	r4, #0
1a001f14:	d10f      	bne.n	1a001f36 <__aeabi_dmul+0x1c2>
1a001f16:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
1a001f1a:	0040      	lsls	r0, r0, #1
1a001f1c:	eb41 0101 	adc.w	r1, r1, r1
1a001f20:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1a001f24:	bf08      	it	eq
1a001f26:	3c01      	subeq	r4, #1
1a001f28:	d0f7      	beq.n	1a001f1a <__aeabi_dmul+0x1a6>
1a001f2a:	ea41 0106 	orr.w	r1, r1, r6
1a001f2e:	f095 0f00 	teq	r5, #0
1a001f32:	bf18      	it	ne
1a001f34:	4770      	bxne	lr
1a001f36:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
1a001f3a:	0052      	lsls	r2, r2, #1
1a001f3c:	eb43 0303 	adc.w	r3, r3, r3
1a001f40:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
1a001f44:	bf08      	it	eq
1a001f46:	3d01      	subeq	r5, #1
1a001f48:	d0f7      	beq.n	1a001f3a <__aeabi_dmul+0x1c6>
1a001f4a:	ea43 0306 	orr.w	r3, r3, r6
1a001f4e:	4770      	bx	lr
1a001f50:	ea94 0f0c 	teq	r4, ip
1a001f54:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1a001f58:	bf18      	it	ne
1a001f5a:	ea95 0f0c 	teqne	r5, ip
1a001f5e:	d00c      	beq.n	1a001f7a <__aeabi_dmul+0x206>
1a001f60:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1a001f64:	bf18      	it	ne
1a001f66:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1a001f6a:	d1d1      	bne.n	1a001f10 <__aeabi_dmul+0x19c>
1a001f6c:	ea81 0103 	eor.w	r1, r1, r3
1a001f70:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1a001f74:	f04f 0000 	mov.w	r0, #0
1a001f78:	bd70      	pop	{r4, r5, r6, pc}
1a001f7a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1a001f7e:	bf06      	itte	eq
1a001f80:	4610      	moveq	r0, r2
1a001f82:	4619      	moveq	r1, r3
1a001f84:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1a001f88:	d019      	beq.n	1a001fbe <__aeabi_dmul+0x24a>
1a001f8a:	ea94 0f0c 	teq	r4, ip
1a001f8e:	d102      	bne.n	1a001f96 <__aeabi_dmul+0x222>
1a001f90:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
1a001f94:	d113      	bne.n	1a001fbe <__aeabi_dmul+0x24a>
1a001f96:	ea95 0f0c 	teq	r5, ip
1a001f9a:	d105      	bne.n	1a001fa8 <__aeabi_dmul+0x234>
1a001f9c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
1a001fa0:	bf1c      	itt	ne
1a001fa2:	4610      	movne	r0, r2
1a001fa4:	4619      	movne	r1, r3
1a001fa6:	d10a      	bne.n	1a001fbe <__aeabi_dmul+0x24a>
1a001fa8:	ea81 0103 	eor.w	r1, r1, r3
1a001fac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1a001fb0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
1a001fb4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
1a001fb8:	f04f 0000 	mov.w	r0, #0
1a001fbc:	bd70      	pop	{r4, r5, r6, pc}
1a001fbe:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
1a001fc2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
1a001fc6:	bd70      	pop	{r4, r5, r6, pc}

1a001fc8 <__aeabi_ddiv>:
1a001fc8:	b570      	push	{r4, r5, r6, lr}
1a001fca:	f04f 0cff 	mov.w	ip, #255	; 0xff
1a001fce:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
1a001fd2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1a001fd6:	bf1d      	ittte	ne
1a001fd8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
1a001fdc:	ea94 0f0c 	teqne	r4, ip
1a001fe0:	ea95 0f0c 	teqne	r5, ip
1a001fe4:	f000 f8a7 	bleq	1a002136 <__aeabi_ddiv+0x16e>
1a001fe8:	eba4 0405 	sub.w	r4, r4, r5
1a001fec:	ea81 0e03 	eor.w	lr, r1, r3
1a001ff0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1a001ff4:	ea4f 3101 	mov.w	r1, r1, lsl #12
1a001ff8:	f000 8088 	beq.w	1a00210c <__aeabi_ddiv+0x144>
1a001ffc:	ea4f 3303 	mov.w	r3, r3, lsl #12
1a002000:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
1a002004:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
1a002008:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
1a00200c:	ea4f 2202 	mov.w	r2, r2, lsl #8
1a002010:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
1a002014:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
1a002018:	ea4f 2600 	mov.w	r6, r0, lsl #8
1a00201c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
1a002020:	429d      	cmp	r5, r3
1a002022:	bf08      	it	eq
1a002024:	4296      	cmpeq	r6, r2
1a002026:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
1a00202a:	f504 7440 	add.w	r4, r4, #768	; 0x300
1a00202e:	d202      	bcs.n	1a002036 <__aeabi_ddiv+0x6e>
1a002030:	085b      	lsrs	r3, r3, #1
1a002032:	ea4f 0232 	mov.w	r2, r2, rrx
1a002036:	1ab6      	subs	r6, r6, r2
1a002038:	eb65 0503 	sbc.w	r5, r5, r3
1a00203c:	085b      	lsrs	r3, r3, #1
1a00203e:	ea4f 0232 	mov.w	r2, r2, rrx
1a002042:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
1a002046:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
1a00204a:	ebb6 0e02 	subs.w	lr, r6, r2
1a00204e:	eb75 0e03 	sbcs.w	lr, r5, r3
1a002052:	bf22      	ittt	cs
1a002054:	1ab6      	subcs	r6, r6, r2
1a002056:	4675      	movcs	r5, lr
1a002058:	ea40 000c 	orrcs.w	r0, r0, ip
1a00205c:	085b      	lsrs	r3, r3, #1
1a00205e:	ea4f 0232 	mov.w	r2, r2, rrx
1a002062:	ebb6 0e02 	subs.w	lr, r6, r2
1a002066:	eb75 0e03 	sbcs.w	lr, r5, r3
1a00206a:	bf22      	ittt	cs
1a00206c:	1ab6      	subcs	r6, r6, r2
1a00206e:	4675      	movcs	r5, lr
1a002070:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
1a002074:	085b      	lsrs	r3, r3, #1
1a002076:	ea4f 0232 	mov.w	r2, r2, rrx
1a00207a:	ebb6 0e02 	subs.w	lr, r6, r2
1a00207e:	eb75 0e03 	sbcs.w	lr, r5, r3
1a002082:	bf22      	ittt	cs
1a002084:	1ab6      	subcs	r6, r6, r2
1a002086:	4675      	movcs	r5, lr
1a002088:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
1a00208c:	085b      	lsrs	r3, r3, #1
1a00208e:	ea4f 0232 	mov.w	r2, r2, rrx
1a002092:	ebb6 0e02 	subs.w	lr, r6, r2
1a002096:	eb75 0e03 	sbcs.w	lr, r5, r3
1a00209a:	bf22      	ittt	cs
1a00209c:	1ab6      	subcs	r6, r6, r2
1a00209e:	4675      	movcs	r5, lr
1a0020a0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
1a0020a4:	ea55 0e06 	orrs.w	lr, r5, r6
1a0020a8:	d018      	beq.n	1a0020dc <__aeabi_ddiv+0x114>
1a0020aa:	ea4f 1505 	mov.w	r5, r5, lsl #4
1a0020ae:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
1a0020b2:	ea4f 1606 	mov.w	r6, r6, lsl #4
1a0020b6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
1a0020ba:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
1a0020be:	ea4f 02c2 	mov.w	r2, r2, lsl #3
1a0020c2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
1a0020c6:	d1c0      	bne.n	1a00204a <__aeabi_ddiv+0x82>
1a0020c8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1a0020cc:	d10b      	bne.n	1a0020e6 <__aeabi_ddiv+0x11e>
1a0020ce:	ea41 0100 	orr.w	r1, r1, r0
1a0020d2:	f04f 0000 	mov.w	r0, #0
1a0020d6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
1a0020da:	e7b6      	b.n	1a00204a <__aeabi_ddiv+0x82>
1a0020dc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1a0020e0:	bf04      	itt	eq
1a0020e2:	4301      	orreq	r1, r0
1a0020e4:	2000      	moveq	r0, #0
1a0020e6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
1a0020ea:	bf88      	it	hi
1a0020ec:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
1a0020f0:	f63f aeaf 	bhi.w	1a001e52 <__aeabi_dmul+0xde>
1a0020f4:	ebb5 0c03 	subs.w	ip, r5, r3
1a0020f8:	bf04      	itt	eq
1a0020fa:	ebb6 0c02 	subseq.w	ip, r6, r2
1a0020fe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1a002102:	f150 0000 	adcs.w	r0, r0, #0
1a002106:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1a00210a:	bd70      	pop	{r4, r5, r6, pc}
1a00210c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
1a002110:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
1a002114:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
1a002118:	bfc2      	ittt	gt
1a00211a:	ebd4 050c 	rsbsgt	r5, r4, ip
1a00211e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1a002122:	bd70      	popgt	{r4, r5, r6, pc}
1a002124:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
1a002128:	f04f 0e00 	mov.w	lr, #0
1a00212c:	3c01      	subs	r4, #1
1a00212e:	e690      	b.n	1a001e52 <__aeabi_dmul+0xde>
1a002130:	ea45 0e06 	orr.w	lr, r5, r6
1a002134:	e68d      	b.n	1a001e52 <__aeabi_dmul+0xde>
1a002136:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1a00213a:	ea94 0f0c 	teq	r4, ip
1a00213e:	bf08      	it	eq
1a002140:	ea95 0f0c 	teqeq	r5, ip
1a002144:	f43f af3b 	beq.w	1a001fbe <__aeabi_dmul+0x24a>
1a002148:	ea94 0f0c 	teq	r4, ip
1a00214c:	d10a      	bne.n	1a002164 <__aeabi_ddiv+0x19c>
1a00214e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1a002152:	f47f af34 	bne.w	1a001fbe <__aeabi_dmul+0x24a>
1a002156:	ea95 0f0c 	teq	r5, ip
1a00215a:	f47f af25 	bne.w	1a001fa8 <__aeabi_dmul+0x234>
1a00215e:	4610      	mov	r0, r2
1a002160:	4619      	mov	r1, r3
1a002162:	e72c      	b.n	1a001fbe <__aeabi_dmul+0x24a>
1a002164:	ea95 0f0c 	teq	r5, ip
1a002168:	d106      	bne.n	1a002178 <__aeabi_ddiv+0x1b0>
1a00216a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1a00216e:	f43f aefd 	beq.w	1a001f6c <__aeabi_dmul+0x1f8>
1a002172:	4610      	mov	r0, r2
1a002174:	4619      	mov	r1, r3
1a002176:	e722      	b.n	1a001fbe <__aeabi_dmul+0x24a>
1a002178:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1a00217c:	bf18      	it	ne
1a00217e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1a002182:	f47f aec5 	bne.w	1a001f10 <__aeabi_dmul+0x19c>
1a002186:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
1a00218a:	f47f af0d 	bne.w	1a001fa8 <__aeabi_dmul+0x234>
1a00218e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
1a002192:	f47f aeeb 	bne.w	1a001f6c <__aeabi_dmul+0x1f8>
1a002196:	e712      	b.n	1a001fbe <__aeabi_dmul+0x24a>

1a002198 <__aeabi_uldivmod>:
1a002198:	b953      	cbnz	r3, 1a0021b0 <__aeabi_uldivmod+0x18>
1a00219a:	b94a      	cbnz	r2, 1a0021b0 <__aeabi_uldivmod+0x18>
1a00219c:	2900      	cmp	r1, #0
1a00219e:	bf08      	it	eq
1a0021a0:	2800      	cmpeq	r0, #0
1a0021a2:	bf1c      	itt	ne
1a0021a4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
1a0021a8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
1a0021ac:	f000 b972 	b.w	1a002494 <__aeabi_idiv0>
1a0021b0:	f1ad 0c08 	sub.w	ip, sp, #8
1a0021b4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
1a0021b8:	f000 f806 	bl	1a0021c8 <__udivmoddi4>
1a0021bc:	f8dd e004 	ldr.w	lr, [sp, #4]
1a0021c0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a0021c4:	b004      	add	sp, #16
1a0021c6:	4770      	bx	lr

1a0021c8 <__udivmoddi4>:
1a0021c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1a0021cc:	9e08      	ldr	r6, [sp, #32]
1a0021ce:	4604      	mov	r4, r0
1a0021d0:	4688      	mov	r8, r1
1a0021d2:	2b00      	cmp	r3, #0
1a0021d4:	d14b      	bne.n	1a00226e <__udivmoddi4+0xa6>
1a0021d6:	428a      	cmp	r2, r1
1a0021d8:	4615      	mov	r5, r2
1a0021da:	d967      	bls.n	1a0022ac <__udivmoddi4+0xe4>
1a0021dc:	fab2 f282 	clz	r2, r2
1a0021e0:	b14a      	cbz	r2, 1a0021f6 <__udivmoddi4+0x2e>
1a0021e2:	f1c2 0720 	rsb	r7, r2, #32
1a0021e6:	fa01 f302 	lsl.w	r3, r1, r2
1a0021ea:	fa20 f707 	lsr.w	r7, r0, r7
1a0021ee:	4095      	lsls	r5, r2
1a0021f0:	ea47 0803 	orr.w	r8, r7, r3
1a0021f4:	4094      	lsls	r4, r2
1a0021f6:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a0021fa:	0c23      	lsrs	r3, r4, #16
1a0021fc:	fbb8 f7fe 	udiv	r7, r8, lr
1a002200:	fa1f fc85 	uxth.w	ip, r5
1a002204:	fb0e 8817 	mls	r8, lr, r7, r8
1a002208:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
1a00220c:	fb07 f10c 	mul.w	r1, r7, ip
1a002210:	4299      	cmp	r1, r3
1a002212:	d909      	bls.n	1a002228 <__udivmoddi4+0x60>
1a002214:	18eb      	adds	r3, r5, r3
1a002216:	f107 30ff 	add.w	r0, r7, #4294967295	; 0xffffffff
1a00221a:	f080 811b 	bcs.w	1a002454 <__udivmoddi4+0x28c>
1a00221e:	4299      	cmp	r1, r3
1a002220:	f240 8118 	bls.w	1a002454 <__udivmoddi4+0x28c>
1a002224:	3f02      	subs	r7, #2
1a002226:	442b      	add	r3, r5
1a002228:	1a5b      	subs	r3, r3, r1
1a00222a:	b2a4      	uxth	r4, r4
1a00222c:	fbb3 f0fe 	udiv	r0, r3, lr
1a002230:	fb0e 3310 	mls	r3, lr, r0, r3
1a002234:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
1a002238:	fb00 fc0c 	mul.w	ip, r0, ip
1a00223c:	45a4      	cmp	ip, r4
1a00223e:	d909      	bls.n	1a002254 <__udivmoddi4+0x8c>
1a002240:	192c      	adds	r4, r5, r4
1a002242:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
1a002246:	f080 8107 	bcs.w	1a002458 <__udivmoddi4+0x290>
1a00224a:	45a4      	cmp	ip, r4
1a00224c:	f240 8104 	bls.w	1a002458 <__udivmoddi4+0x290>
1a002250:	3802      	subs	r0, #2
1a002252:	442c      	add	r4, r5
1a002254:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
1a002258:	eba4 040c 	sub.w	r4, r4, ip
1a00225c:	2700      	movs	r7, #0
1a00225e:	b11e      	cbz	r6, 1a002268 <__udivmoddi4+0xa0>
1a002260:	40d4      	lsrs	r4, r2
1a002262:	2300      	movs	r3, #0
1a002264:	e9c6 4300 	strd	r4, r3, [r6]
1a002268:	4639      	mov	r1, r7
1a00226a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a00226e:	428b      	cmp	r3, r1
1a002270:	d909      	bls.n	1a002286 <__udivmoddi4+0xbe>
1a002272:	2e00      	cmp	r6, #0
1a002274:	f000 80eb 	beq.w	1a00244e <__udivmoddi4+0x286>
1a002278:	2700      	movs	r7, #0
1a00227a:	e9c6 0100 	strd	r0, r1, [r6]
1a00227e:	4638      	mov	r0, r7
1a002280:	4639      	mov	r1, r7
1a002282:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a002286:	fab3 f783 	clz	r7, r3
1a00228a:	2f00      	cmp	r7, #0
1a00228c:	d147      	bne.n	1a00231e <__udivmoddi4+0x156>
1a00228e:	428b      	cmp	r3, r1
1a002290:	d302      	bcc.n	1a002298 <__udivmoddi4+0xd0>
1a002292:	4282      	cmp	r2, r0
1a002294:	f200 80fa 	bhi.w	1a00248c <__udivmoddi4+0x2c4>
1a002298:	1a84      	subs	r4, r0, r2
1a00229a:	eb61 0303 	sbc.w	r3, r1, r3
1a00229e:	2001      	movs	r0, #1
1a0022a0:	4698      	mov	r8, r3
1a0022a2:	2e00      	cmp	r6, #0
1a0022a4:	d0e0      	beq.n	1a002268 <__udivmoddi4+0xa0>
1a0022a6:	e9c6 4800 	strd	r4, r8, [r6]
1a0022aa:	e7dd      	b.n	1a002268 <__udivmoddi4+0xa0>
1a0022ac:	b902      	cbnz	r2, 1a0022b0 <__udivmoddi4+0xe8>
1a0022ae:	deff      	udf	#255	; 0xff
1a0022b0:	fab2 f282 	clz	r2, r2
1a0022b4:	2a00      	cmp	r2, #0
1a0022b6:	f040 808f 	bne.w	1a0023d8 <__udivmoddi4+0x210>
1a0022ba:	1b49      	subs	r1, r1, r5
1a0022bc:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a0022c0:	fa1f f885 	uxth.w	r8, r5
1a0022c4:	2701      	movs	r7, #1
1a0022c6:	fbb1 fcfe 	udiv	ip, r1, lr
1a0022ca:	0c23      	lsrs	r3, r4, #16
1a0022cc:	fb0e 111c 	mls	r1, lr, ip, r1
1a0022d0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1a0022d4:	fb08 f10c 	mul.w	r1, r8, ip
1a0022d8:	4299      	cmp	r1, r3
1a0022da:	d907      	bls.n	1a0022ec <__udivmoddi4+0x124>
1a0022dc:	18eb      	adds	r3, r5, r3
1a0022de:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
1a0022e2:	d202      	bcs.n	1a0022ea <__udivmoddi4+0x122>
1a0022e4:	4299      	cmp	r1, r3
1a0022e6:	f200 80cd 	bhi.w	1a002484 <__udivmoddi4+0x2bc>
1a0022ea:	4684      	mov	ip, r0
1a0022ec:	1a59      	subs	r1, r3, r1
1a0022ee:	b2a3      	uxth	r3, r4
1a0022f0:	fbb1 f0fe 	udiv	r0, r1, lr
1a0022f4:	fb0e 1410 	mls	r4, lr, r0, r1
1a0022f8:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
1a0022fc:	fb08 f800 	mul.w	r8, r8, r0
1a002300:	45a0      	cmp	r8, r4
1a002302:	d907      	bls.n	1a002314 <__udivmoddi4+0x14c>
1a002304:	192c      	adds	r4, r5, r4
1a002306:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
1a00230a:	d202      	bcs.n	1a002312 <__udivmoddi4+0x14a>
1a00230c:	45a0      	cmp	r8, r4
1a00230e:	f200 80b6 	bhi.w	1a00247e <__udivmoddi4+0x2b6>
1a002312:	4618      	mov	r0, r3
1a002314:	eba4 0408 	sub.w	r4, r4, r8
1a002318:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
1a00231c:	e79f      	b.n	1a00225e <__udivmoddi4+0x96>
1a00231e:	f1c7 0c20 	rsb	ip, r7, #32
1a002322:	40bb      	lsls	r3, r7
1a002324:	fa22 fe0c 	lsr.w	lr, r2, ip
1a002328:	ea4e 0e03 	orr.w	lr, lr, r3
1a00232c:	fa01 f407 	lsl.w	r4, r1, r7
1a002330:	fa20 f50c 	lsr.w	r5, r0, ip
1a002334:	fa21 f30c 	lsr.w	r3, r1, ip
1a002338:	ea4f 481e 	mov.w	r8, lr, lsr #16
1a00233c:	4325      	orrs	r5, r4
1a00233e:	fbb3 f9f8 	udiv	r9, r3, r8
1a002342:	0c2c      	lsrs	r4, r5, #16
1a002344:	fb08 3319 	mls	r3, r8, r9, r3
1a002348:	fa1f fa8e 	uxth.w	sl, lr
1a00234c:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
1a002350:	fb09 f40a 	mul.w	r4, r9, sl
1a002354:	429c      	cmp	r4, r3
1a002356:	fa02 f207 	lsl.w	r2, r2, r7
1a00235a:	fa00 f107 	lsl.w	r1, r0, r7
1a00235e:	d90b      	bls.n	1a002378 <__udivmoddi4+0x1b0>
1a002360:	eb1e 0303 	adds.w	r3, lr, r3
1a002364:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
1a002368:	f080 8087 	bcs.w	1a00247a <__udivmoddi4+0x2b2>
1a00236c:	429c      	cmp	r4, r3
1a00236e:	f240 8084 	bls.w	1a00247a <__udivmoddi4+0x2b2>
1a002372:	f1a9 0902 	sub.w	r9, r9, #2
1a002376:	4473      	add	r3, lr
1a002378:	1b1b      	subs	r3, r3, r4
1a00237a:	b2ad      	uxth	r5, r5
1a00237c:	fbb3 f0f8 	udiv	r0, r3, r8
1a002380:	fb08 3310 	mls	r3, r8, r0, r3
1a002384:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
1a002388:	fb00 fa0a 	mul.w	sl, r0, sl
1a00238c:	45a2      	cmp	sl, r4
1a00238e:	d908      	bls.n	1a0023a2 <__udivmoddi4+0x1da>
1a002390:	eb1e 0404 	adds.w	r4, lr, r4
1a002394:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
1a002398:	d26b      	bcs.n	1a002472 <__udivmoddi4+0x2aa>
1a00239a:	45a2      	cmp	sl, r4
1a00239c:	d969      	bls.n	1a002472 <__udivmoddi4+0x2aa>
1a00239e:	3802      	subs	r0, #2
1a0023a0:	4474      	add	r4, lr
1a0023a2:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
1a0023a6:	fba0 8902 	umull	r8, r9, r0, r2
1a0023aa:	eba4 040a 	sub.w	r4, r4, sl
1a0023ae:	454c      	cmp	r4, r9
1a0023b0:	46c2      	mov	sl, r8
1a0023b2:	464b      	mov	r3, r9
1a0023b4:	d354      	bcc.n	1a002460 <__udivmoddi4+0x298>
1a0023b6:	d051      	beq.n	1a00245c <__udivmoddi4+0x294>
1a0023b8:	2e00      	cmp	r6, #0
1a0023ba:	d069      	beq.n	1a002490 <__udivmoddi4+0x2c8>
1a0023bc:	ebb1 050a 	subs.w	r5, r1, sl
1a0023c0:	eb64 0403 	sbc.w	r4, r4, r3
1a0023c4:	fa04 fc0c 	lsl.w	ip, r4, ip
1a0023c8:	40fd      	lsrs	r5, r7
1a0023ca:	40fc      	lsrs	r4, r7
1a0023cc:	ea4c 0505 	orr.w	r5, ip, r5
1a0023d0:	e9c6 5400 	strd	r5, r4, [r6]
1a0023d4:	2700      	movs	r7, #0
1a0023d6:	e747      	b.n	1a002268 <__udivmoddi4+0xa0>
1a0023d8:	f1c2 0320 	rsb	r3, r2, #32
1a0023dc:	fa20 f703 	lsr.w	r7, r0, r3
1a0023e0:	4095      	lsls	r5, r2
1a0023e2:	fa01 f002 	lsl.w	r0, r1, r2
1a0023e6:	fa21 f303 	lsr.w	r3, r1, r3
1a0023ea:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a0023ee:	4338      	orrs	r0, r7
1a0023f0:	0c01      	lsrs	r1, r0, #16
1a0023f2:	fbb3 f7fe 	udiv	r7, r3, lr
1a0023f6:	fa1f f885 	uxth.w	r8, r5
1a0023fa:	fb0e 3317 	mls	r3, lr, r7, r3
1a0023fe:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
1a002402:	fb07 f308 	mul.w	r3, r7, r8
1a002406:	428b      	cmp	r3, r1
1a002408:	fa04 f402 	lsl.w	r4, r4, r2
1a00240c:	d907      	bls.n	1a00241e <__udivmoddi4+0x256>
1a00240e:	1869      	adds	r1, r5, r1
1a002410:	f107 3cff 	add.w	ip, r7, #4294967295	; 0xffffffff
1a002414:	d22f      	bcs.n	1a002476 <__udivmoddi4+0x2ae>
1a002416:	428b      	cmp	r3, r1
1a002418:	d92d      	bls.n	1a002476 <__udivmoddi4+0x2ae>
1a00241a:	3f02      	subs	r7, #2
1a00241c:	4429      	add	r1, r5
1a00241e:	1acb      	subs	r3, r1, r3
1a002420:	b281      	uxth	r1, r0
1a002422:	fbb3 f0fe 	udiv	r0, r3, lr
1a002426:	fb0e 3310 	mls	r3, lr, r0, r3
1a00242a:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
1a00242e:	fb00 f308 	mul.w	r3, r0, r8
1a002432:	428b      	cmp	r3, r1
1a002434:	d907      	bls.n	1a002446 <__udivmoddi4+0x27e>
1a002436:	1869      	adds	r1, r5, r1
1a002438:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
1a00243c:	d217      	bcs.n	1a00246e <__udivmoddi4+0x2a6>
1a00243e:	428b      	cmp	r3, r1
1a002440:	d915      	bls.n	1a00246e <__udivmoddi4+0x2a6>
1a002442:	3802      	subs	r0, #2
1a002444:	4429      	add	r1, r5
1a002446:	1ac9      	subs	r1, r1, r3
1a002448:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
1a00244c:	e73b      	b.n	1a0022c6 <__udivmoddi4+0xfe>
1a00244e:	4637      	mov	r7, r6
1a002450:	4630      	mov	r0, r6
1a002452:	e709      	b.n	1a002268 <__udivmoddi4+0xa0>
1a002454:	4607      	mov	r7, r0
1a002456:	e6e7      	b.n	1a002228 <__udivmoddi4+0x60>
1a002458:	4618      	mov	r0, r3
1a00245a:	e6fb      	b.n	1a002254 <__udivmoddi4+0x8c>
1a00245c:	4541      	cmp	r1, r8
1a00245e:	d2ab      	bcs.n	1a0023b8 <__udivmoddi4+0x1f0>
1a002460:	ebb8 0a02 	subs.w	sl, r8, r2
1a002464:	eb69 020e 	sbc.w	r2, r9, lr
1a002468:	3801      	subs	r0, #1
1a00246a:	4613      	mov	r3, r2
1a00246c:	e7a4      	b.n	1a0023b8 <__udivmoddi4+0x1f0>
1a00246e:	4660      	mov	r0, ip
1a002470:	e7e9      	b.n	1a002446 <__udivmoddi4+0x27e>
1a002472:	4618      	mov	r0, r3
1a002474:	e795      	b.n	1a0023a2 <__udivmoddi4+0x1da>
1a002476:	4667      	mov	r7, ip
1a002478:	e7d1      	b.n	1a00241e <__udivmoddi4+0x256>
1a00247a:	4681      	mov	r9, r0
1a00247c:	e77c      	b.n	1a002378 <__udivmoddi4+0x1b0>
1a00247e:	3802      	subs	r0, #2
1a002480:	442c      	add	r4, r5
1a002482:	e747      	b.n	1a002314 <__udivmoddi4+0x14c>
1a002484:	f1ac 0c02 	sub.w	ip, ip, #2
1a002488:	442b      	add	r3, r5
1a00248a:	e72f      	b.n	1a0022ec <__udivmoddi4+0x124>
1a00248c:	4638      	mov	r0, r7
1a00248e:	e708      	b.n	1a0022a2 <__udivmoddi4+0xda>
1a002490:	4637      	mov	r7, r6
1a002492:	e6e9      	b.n	1a002268 <__udivmoddi4+0xa0>

1a002494 <__aeabi_idiv0>:
1a002494:	4770      	bx	lr
1a002496:	bf00      	nop

1a002498 <__libc_init_array>:
1a002498:	b570      	push	{r4, r5, r6, lr}
1a00249a:	4e0d      	ldr	r6, [pc, #52]	; (1a0024d0 <__libc_init_array+0x38>)
1a00249c:	4d0d      	ldr	r5, [pc, #52]	; (1a0024d4 <__libc_init_array+0x3c>)
1a00249e:	1b76      	subs	r6, r6, r5
1a0024a0:	10b6      	asrs	r6, r6, #2
1a0024a2:	d006      	beq.n	1a0024b2 <__libc_init_array+0x1a>
1a0024a4:	2400      	movs	r4, #0
1a0024a6:	3401      	adds	r4, #1
1a0024a8:	f855 3b04 	ldr.w	r3, [r5], #4
1a0024ac:	4798      	blx	r3
1a0024ae:	42a6      	cmp	r6, r4
1a0024b0:	d1f9      	bne.n	1a0024a6 <__libc_init_array+0xe>
1a0024b2:	4e09      	ldr	r6, [pc, #36]	; (1a0024d8 <__libc_init_array+0x40>)
1a0024b4:	4d09      	ldr	r5, [pc, #36]	; (1a0024dc <__libc_init_array+0x44>)
1a0024b6:	1b76      	subs	r6, r6, r5
1a0024b8:	f7fe f907 	bl	1a0006ca <_init>
1a0024bc:	10b6      	asrs	r6, r6, #2
1a0024be:	d006      	beq.n	1a0024ce <__libc_init_array+0x36>
1a0024c0:	2400      	movs	r4, #0
1a0024c2:	3401      	adds	r4, #1
1a0024c4:	f855 3b04 	ldr.w	r3, [r5], #4
1a0024c8:	4798      	blx	r3
1a0024ca:	42a6      	cmp	r6, r4
1a0024cc:	d1f9      	bne.n	1a0024c2 <__libc_init_array+0x2a>
1a0024ce:	bd70      	pop	{r4, r5, r6, pc}
1a0024d0:	1a007ac8 	.word	0x1a007ac8
1a0024d4:	1a007ac8 	.word	0x1a007ac8
1a0024d8:	1a007acc 	.word	0x1a007acc
1a0024dc:	1a007ac8 	.word	0x1a007ac8

1a0024e0 <memcpy>:
1a0024e0:	4684      	mov	ip, r0
1a0024e2:	ea41 0300 	orr.w	r3, r1, r0
1a0024e6:	f013 0303 	ands.w	r3, r3, #3
1a0024ea:	d16d      	bne.n	1a0025c8 <memcpy+0xe8>
1a0024ec:	3a40      	subs	r2, #64	; 0x40
1a0024ee:	d341      	bcc.n	1a002574 <memcpy+0x94>
1a0024f0:	f851 3b04 	ldr.w	r3, [r1], #4
1a0024f4:	f840 3b04 	str.w	r3, [r0], #4
1a0024f8:	f851 3b04 	ldr.w	r3, [r1], #4
1a0024fc:	f840 3b04 	str.w	r3, [r0], #4
1a002500:	f851 3b04 	ldr.w	r3, [r1], #4
1a002504:	f840 3b04 	str.w	r3, [r0], #4
1a002508:	f851 3b04 	ldr.w	r3, [r1], #4
1a00250c:	f840 3b04 	str.w	r3, [r0], #4
1a002510:	f851 3b04 	ldr.w	r3, [r1], #4
1a002514:	f840 3b04 	str.w	r3, [r0], #4
1a002518:	f851 3b04 	ldr.w	r3, [r1], #4
1a00251c:	f840 3b04 	str.w	r3, [r0], #4
1a002520:	f851 3b04 	ldr.w	r3, [r1], #4
1a002524:	f840 3b04 	str.w	r3, [r0], #4
1a002528:	f851 3b04 	ldr.w	r3, [r1], #4
1a00252c:	f840 3b04 	str.w	r3, [r0], #4
1a002530:	f851 3b04 	ldr.w	r3, [r1], #4
1a002534:	f840 3b04 	str.w	r3, [r0], #4
1a002538:	f851 3b04 	ldr.w	r3, [r1], #4
1a00253c:	f840 3b04 	str.w	r3, [r0], #4
1a002540:	f851 3b04 	ldr.w	r3, [r1], #4
1a002544:	f840 3b04 	str.w	r3, [r0], #4
1a002548:	f851 3b04 	ldr.w	r3, [r1], #4
1a00254c:	f840 3b04 	str.w	r3, [r0], #4
1a002550:	f851 3b04 	ldr.w	r3, [r1], #4
1a002554:	f840 3b04 	str.w	r3, [r0], #4
1a002558:	f851 3b04 	ldr.w	r3, [r1], #4
1a00255c:	f840 3b04 	str.w	r3, [r0], #4
1a002560:	f851 3b04 	ldr.w	r3, [r1], #4
1a002564:	f840 3b04 	str.w	r3, [r0], #4
1a002568:	f851 3b04 	ldr.w	r3, [r1], #4
1a00256c:	f840 3b04 	str.w	r3, [r0], #4
1a002570:	3a40      	subs	r2, #64	; 0x40
1a002572:	d2bd      	bcs.n	1a0024f0 <memcpy+0x10>
1a002574:	3230      	adds	r2, #48	; 0x30
1a002576:	d311      	bcc.n	1a00259c <memcpy+0xbc>
1a002578:	f851 3b04 	ldr.w	r3, [r1], #4
1a00257c:	f840 3b04 	str.w	r3, [r0], #4
1a002580:	f851 3b04 	ldr.w	r3, [r1], #4
1a002584:	f840 3b04 	str.w	r3, [r0], #4
1a002588:	f851 3b04 	ldr.w	r3, [r1], #4
1a00258c:	f840 3b04 	str.w	r3, [r0], #4
1a002590:	f851 3b04 	ldr.w	r3, [r1], #4
1a002594:	f840 3b04 	str.w	r3, [r0], #4
1a002598:	3a10      	subs	r2, #16
1a00259a:	d2ed      	bcs.n	1a002578 <memcpy+0x98>
1a00259c:	320c      	adds	r2, #12
1a00259e:	d305      	bcc.n	1a0025ac <memcpy+0xcc>
1a0025a0:	f851 3b04 	ldr.w	r3, [r1], #4
1a0025a4:	f840 3b04 	str.w	r3, [r0], #4
1a0025a8:	3a04      	subs	r2, #4
1a0025aa:	d2f9      	bcs.n	1a0025a0 <memcpy+0xc0>
1a0025ac:	3204      	adds	r2, #4
1a0025ae:	d008      	beq.n	1a0025c2 <memcpy+0xe2>
1a0025b0:	07d2      	lsls	r2, r2, #31
1a0025b2:	bf1c      	itt	ne
1a0025b4:	f811 3b01 	ldrbne.w	r3, [r1], #1
1a0025b8:	f800 3b01 	strbne.w	r3, [r0], #1
1a0025bc:	d301      	bcc.n	1a0025c2 <memcpy+0xe2>
1a0025be:	880b      	ldrh	r3, [r1, #0]
1a0025c0:	8003      	strh	r3, [r0, #0]
1a0025c2:	4660      	mov	r0, ip
1a0025c4:	4770      	bx	lr
1a0025c6:	bf00      	nop
1a0025c8:	2a08      	cmp	r2, #8
1a0025ca:	d313      	bcc.n	1a0025f4 <memcpy+0x114>
1a0025cc:	078b      	lsls	r3, r1, #30
1a0025ce:	d08d      	beq.n	1a0024ec <memcpy+0xc>
1a0025d0:	f010 0303 	ands.w	r3, r0, #3
1a0025d4:	d08a      	beq.n	1a0024ec <memcpy+0xc>
1a0025d6:	f1c3 0304 	rsb	r3, r3, #4
1a0025da:	1ad2      	subs	r2, r2, r3
1a0025dc:	07db      	lsls	r3, r3, #31
1a0025de:	bf1c      	itt	ne
1a0025e0:	f811 3b01 	ldrbne.w	r3, [r1], #1
1a0025e4:	f800 3b01 	strbne.w	r3, [r0], #1
1a0025e8:	d380      	bcc.n	1a0024ec <memcpy+0xc>
1a0025ea:	f831 3b02 	ldrh.w	r3, [r1], #2
1a0025ee:	f820 3b02 	strh.w	r3, [r0], #2
1a0025f2:	e77b      	b.n	1a0024ec <memcpy+0xc>
1a0025f4:	3a04      	subs	r2, #4
1a0025f6:	d3d9      	bcc.n	1a0025ac <memcpy+0xcc>
1a0025f8:	3a01      	subs	r2, #1
1a0025fa:	f811 3b01 	ldrb.w	r3, [r1], #1
1a0025fe:	f800 3b01 	strb.w	r3, [r0], #1
1a002602:	d2f9      	bcs.n	1a0025f8 <memcpy+0x118>
1a002604:	780b      	ldrb	r3, [r1, #0]
1a002606:	7003      	strb	r3, [r0, #0]
1a002608:	784b      	ldrb	r3, [r1, #1]
1a00260a:	7043      	strb	r3, [r0, #1]
1a00260c:	788b      	ldrb	r3, [r1, #2]
1a00260e:	7083      	strb	r3, [r0, #2]
1a002610:	4660      	mov	r0, ip
1a002612:	4770      	bx	lr

1a002614 <memset>:
1a002614:	b4f0      	push	{r4, r5, r6, r7}
1a002616:	0786      	lsls	r6, r0, #30
1a002618:	d043      	beq.n	1a0026a2 <memset+0x8e>
1a00261a:	1e54      	subs	r4, r2, #1
1a00261c:	2a00      	cmp	r2, #0
1a00261e:	d03e      	beq.n	1a00269e <memset+0x8a>
1a002620:	b2ca      	uxtb	r2, r1
1a002622:	4603      	mov	r3, r0
1a002624:	e002      	b.n	1a00262c <memset+0x18>
1a002626:	f114 34ff 	adds.w	r4, r4, #4294967295	; 0xffffffff
1a00262a:	d338      	bcc.n	1a00269e <memset+0x8a>
1a00262c:	f803 2b01 	strb.w	r2, [r3], #1
1a002630:	079d      	lsls	r5, r3, #30
1a002632:	d1f8      	bne.n	1a002626 <memset+0x12>
1a002634:	2c03      	cmp	r4, #3
1a002636:	d92b      	bls.n	1a002690 <memset+0x7c>
1a002638:	b2cd      	uxtb	r5, r1
1a00263a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
1a00263e:	2c0f      	cmp	r4, #15
1a002640:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
1a002644:	d916      	bls.n	1a002674 <memset+0x60>
1a002646:	f1a4 0710 	sub.w	r7, r4, #16
1a00264a:	093f      	lsrs	r7, r7, #4
1a00264c:	f103 0620 	add.w	r6, r3, #32
1a002650:	eb06 1607 	add.w	r6, r6, r7, lsl #4
1a002654:	f103 0210 	add.w	r2, r3, #16
1a002658:	e942 5504 	strd	r5, r5, [r2, #-16]
1a00265c:	e942 5502 	strd	r5, r5, [r2, #-8]
1a002660:	3210      	adds	r2, #16
1a002662:	42b2      	cmp	r2, r6
1a002664:	d1f8      	bne.n	1a002658 <memset+0x44>
1a002666:	f004 040f 	and.w	r4, r4, #15
1a00266a:	3701      	adds	r7, #1
1a00266c:	2c03      	cmp	r4, #3
1a00266e:	eb03 1307 	add.w	r3, r3, r7, lsl #4
1a002672:	d90d      	bls.n	1a002690 <memset+0x7c>
1a002674:	461e      	mov	r6, r3
1a002676:	4622      	mov	r2, r4
1a002678:	3a04      	subs	r2, #4
1a00267a:	2a03      	cmp	r2, #3
1a00267c:	f846 5b04 	str.w	r5, [r6], #4
1a002680:	d8fa      	bhi.n	1a002678 <memset+0x64>
1a002682:	1f22      	subs	r2, r4, #4
1a002684:	f022 0203 	bic.w	r2, r2, #3
1a002688:	3204      	adds	r2, #4
1a00268a:	4413      	add	r3, r2
1a00268c:	f004 0403 	and.w	r4, r4, #3
1a002690:	b12c      	cbz	r4, 1a00269e <memset+0x8a>
1a002692:	b2c9      	uxtb	r1, r1
1a002694:	441c      	add	r4, r3
1a002696:	f803 1b01 	strb.w	r1, [r3], #1
1a00269a:	429c      	cmp	r4, r3
1a00269c:	d1fb      	bne.n	1a002696 <memset+0x82>
1a00269e:	bcf0      	pop	{r4, r5, r6, r7}
1a0026a0:	4770      	bx	lr
1a0026a2:	4614      	mov	r4, r2
1a0026a4:	4603      	mov	r3, r0
1a0026a6:	e7c5      	b.n	1a002634 <memset+0x20>

1a0026a8 <printf>:
1a0026a8:	b40f      	push	{r0, r1, r2, r3}
1a0026aa:	b500      	push	{lr}
1a0026ac:	4907      	ldr	r1, [pc, #28]	; (1a0026cc <printf+0x24>)
1a0026ae:	b083      	sub	sp, #12
1a0026b0:	ab04      	add	r3, sp, #16
1a0026b2:	6808      	ldr	r0, [r1, #0]
1a0026b4:	f853 2b04 	ldr.w	r2, [r3], #4
1a0026b8:	6881      	ldr	r1, [r0, #8]
1a0026ba:	9301      	str	r3, [sp, #4]
1a0026bc:	f000 f8d0 	bl	1a002860 <_vfprintf_r>
1a0026c0:	b003      	add	sp, #12
1a0026c2:	f85d eb04 	ldr.w	lr, [sp], #4
1a0026c6:	b004      	add	sp, #16
1a0026c8:	4770      	bx	lr
1a0026ca:	bf00      	nop
1a0026cc:	10000088 	.word	0x10000088

1a0026d0 <_puts_r>:
1a0026d0:	b570      	push	{r4, r5, r6, lr}
1a0026d2:	4605      	mov	r5, r0
1a0026d4:	b088      	sub	sp, #32
1a0026d6:	4608      	mov	r0, r1
1a0026d8:	460c      	mov	r4, r1
1a0026da:	f000 f851 	bl	1a002780 <strlen>
1a0026de:	4a22      	ldr	r2, [pc, #136]	; (1a002768 <_puts_r+0x98>)
1a0026e0:	6bab      	ldr	r3, [r5, #56]	; 0x38
1a0026e2:	9404      	str	r4, [sp, #16]
1a0026e4:	2601      	movs	r6, #1
1a0026e6:	1c44      	adds	r4, r0, #1
1a0026e8:	a904      	add	r1, sp, #16
1a0026ea:	9206      	str	r2, [sp, #24]
1a0026ec:	2202      	movs	r2, #2
1a0026ee:	9403      	str	r4, [sp, #12]
1a0026f0:	9005      	str	r0, [sp, #20]
1a0026f2:	68ac      	ldr	r4, [r5, #8]
1a0026f4:	9607      	str	r6, [sp, #28]
1a0026f6:	e9cd 1201 	strd	r1, r2, [sp, #4]
1a0026fa:	b31b      	cbz	r3, 1a002744 <_puts_r+0x74>
1a0026fc:	6e61      	ldr	r1, [r4, #100]	; 0x64
1a0026fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a002702:	07ce      	lsls	r6, r1, #31
1a002704:	b29a      	uxth	r2, r3
1a002706:	d401      	bmi.n	1a00270c <_puts_r+0x3c>
1a002708:	0590      	lsls	r0, r2, #22
1a00270a:	d525      	bpl.n	1a002758 <_puts_r+0x88>
1a00270c:	0491      	lsls	r1, r2, #18
1a00270e:	d406      	bmi.n	1a00271e <_puts_r+0x4e>
1a002710:	6e62      	ldr	r2, [r4, #100]	; 0x64
1a002712:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
1a002716:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
1a00271a:	81a3      	strh	r3, [r4, #12]
1a00271c:	6662      	str	r2, [r4, #100]	; 0x64
1a00271e:	4628      	mov	r0, r5
1a002720:	aa01      	add	r2, sp, #4
1a002722:	4621      	mov	r1, r4
1a002724:	f003 f8a6 	bl	1a005874 <__sfvwrite_r>
1a002728:	6e63      	ldr	r3, [r4, #100]	; 0x64
1a00272a:	2800      	cmp	r0, #0
1a00272c:	bf0c      	ite	eq
1a00272e:	250a      	moveq	r5, #10
1a002730:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
1a002734:	07da      	lsls	r2, r3, #31
1a002736:	d402      	bmi.n	1a00273e <_puts_r+0x6e>
1a002738:	89a3      	ldrh	r3, [r4, #12]
1a00273a:	059b      	lsls	r3, r3, #22
1a00273c:	d506      	bpl.n	1a00274c <_puts_r+0x7c>
1a00273e:	4628      	mov	r0, r5
1a002740:	b008      	add	sp, #32
1a002742:	bd70      	pop	{r4, r5, r6, pc}
1a002744:	4628      	mov	r0, r5
1a002746:	f002 ff19 	bl	1a00557c <__sinit>
1a00274a:	e7d7      	b.n	1a0026fc <_puts_r+0x2c>
1a00274c:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a00274e:	f003 fa4d 	bl	1a005bec <__retarget_lock_release_recursive>
1a002752:	4628      	mov	r0, r5
1a002754:	b008      	add	sp, #32
1a002756:	bd70      	pop	{r4, r5, r6, pc}
1a002758:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a00275a:	f003 fa45 	bl	1a005be8 <__retarget_lock_acquire_recursive>
1a00275e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a002762:	b29a      	uxth	r2, r3
1a002764:	e7d2      	b.n	1a00270c <_puts_r+0x3c>
1a002766:	bf00      	nop
1a002768:	1a00758c 	.word	0x1a00758c

1a00276c <puts>:
1a00276c:	4b02      	ldr	r3, [pc, #8]	; (1a002778 <puts+0xc>)
1a00276e:	4601      	mov	r1, r0
1a002770:	6818      	ldr	r0, [r3, #0]
1a002772:	f7ff bfad 	b.w	1a0026d0 <_puts_r>
1a002776:	bf00      	nop
1a002778:	10000088 	.word	0x10000088
1a00277c:	ffffffff 	.word	0xffffffff

1a002780 <strlen>:
1a002780:	f890 f000 	pld	[r0]
1a002784:	e96d 4502 	strd	r4, r5, [sp, #-8]!
1a002788:	f020 0107 	bic.w	r1, r0, #7
1a00278c:	f06f 0c00 	mvn.w	ip, #0
1a002790:	f010 0407 	ands.w	r4, r0, #7
1a002794:	f891 f020 	pld	[r1, #32]
1a002798:	f040 8049 	bne.w	1a00282e <strlen+0xae>
1a00279c:	f04f 0400 	mov.w	r4, #0
1a0027a0:	f06f 0007 	mvn.w	r0, #7
1a0027a4:	e9d1 2300 	ldrd	r2, r3, [r1]
1a0027a8:	f891 f040 	pld	[r1, #64]	; 0x40
1a0027ac:	f100 0008 	add.w	r0, r0, #8
1a0027b0:	fa82 f24c 	uadd8	r2, r2, ip
1a0027b4:	faa4 f28c 	sel	r2, r4, ip
1a0027b8:	fa83 f34c 	uadd8	r3, r3, ip
1a0027bc:	faa2 f38c 	sel	r3, r2, ip
1a0027c0:	bb4b      	cbnz	r3, 1a002816 <strlen+0x96>
1a0027c2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
1a0027c6:	fa82 f24c 	uadd8	r2, r2, ip
1a0027ca:	f100 0008 	add.w	r0, r0, #8
1a0027ce:	faa4 f28c 	sel	r2, r4, ip
1a0027d2:	fa83 f34c 	uadd8	r3, r3, ip
1a0027d6:	faa2 f38c 	sel	r3, r2, ip
1a0027da:	b9e3      	cbnz	r3, 1a002816 <strlen+0x96>
1a0027dc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
1a0027e0:	fa82 f24c 	uadd8	r2, r2, ip
1a0027e4:	f100 0008 	add.w	r0, r0, #8
1a0027e8:	faa4 f28c 	sel	r2, r4, ip
1a0027ec:	fa83 f34c 	uadd8	r3, r3, ip
1a0027f0:	faa2 f38c 	sel	r3, r2, ip
1a0027f4:	b97b      	cbnz	r3, 1a002816 <strlen+0x96>
1a0027f6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
1a0027fa:	f101 0120 	add.w	r1, r1, #32
1a0027fe:	fa82 f24c 	uadd8	r2, r2, ip
1a002802:	f100 0008 	add.w	r0, r0, #8
1a002806:	faa4 f28c 	sel	r2, r4, ip
1a00280a:	fa83 f34c 	uadd8	r3, r3, ip
1a00280e:	faa2 f38c 	sel	r3, r2, ip
1a002812:	2b00      	cmp	r3, #0
1a002814:	d0c6      	beq.n	1a0027a4 <strlen+0x24>
1a002816:	2a00      	cmp	r2, #0
1a002818:	bf04      	itt	eq
1a00281a:	3004      	addeq	r0, #4
1a00281c:	461a      	moveq	r2, r3
1a00281e:	ba12      	rev	r2, r2
1a002820:	fab2 f282 	clz	r2, r2
1a002824:	e8fd 4502 	ldrd	r4, r5, [sp], #8
1a002828:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
1a00282c:	4770      	bx	lr
1a00282e:	e9d1 2300 	ldrd	r2, r3, [r1]
1a002832:	f004 0503 	and.w	r5, r4, #3
1a002836:	f1c4 0000 	rsb	r0, r4, #0
1a00283a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
1a00283e:	f014 0f04 	tst.w	r4, #4
1a002842:	f891 f040 	pld	[r1, #64]	; 0x40
1a002846:	fa0c f505 	lsl.w	r5, ip, r5
1a00284a:	ea62 0205 	orn	r2, r2, r5
1a00284e:	bf1c      	itt	ne
1a002850:	ea63 0305 	ornne	r3, r3, r5
1a002854:	4662      	movne	r2, ip
1a002856:	f04f 0400 	mov.w	r4, #0
1a00285a:	e7a9      	b.n	1a0027b0 <strlen+0x30>
1a00285c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

1a002860 <_vfprintf_r>:
1a002860:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a002864:	b0d7      	sub	sp, #348	; 0x15c
1a002866:	461c      	mov	r4, r3
1a002868:	4689      	mov	r9, r1
1a00286a:	4617      	mov	r7, r2
1a00286c:	4605      	mov	r5, r0
1a00286e:	9003      	str	r0, [sp, #12]
1a002870:	f003 f9a8 	bl	1a005bc4 <_localeconv_r>
1a002874:	6803      	ldr	r3, [r0, #0]
1a002876:	9316      	str	r3, [sp, #88]	; 0x58
1a002878:	4618      	mov	r0, r3
1a00287a:	f7ff ff81 	bl	1a002780 <strlen>
1a00287e:	9408      	str	r4, [sp, #32]
1a002880:	9015      	str	r0, [sp, #84]	; 0x54
1a002882:	b11d      	cbz	r5, 1a00288c <_vfprintf_r+0x2c>
1a002884:	6bab      	ldr	r3, [r5, #56]	; 0x38
1a002886:	2b00      	cmp	r3, #0
1a002888:	f000 8107 	beq.w	1a002a9a <_vfprintf_r+0x23a>
1a00288c:	f8d9 1064 	ldr.w	r1, [r9, #100]	; 0x64
1a002890:	f9b9 200c 	ldrsh.w	r2, [r9, #12]
1a002894:	07c8      	lsls	r0, r1, #31
1a002896:	b293      	uxth	r3, r2
1a002898:	d402      	bmi.n	1a0028a0 <_vfprintf_r+0x40>
1a00289a:	0599      	lsls	r1, r3, #22
1a00289c:	f140 811f 	bpl.w	1a002ade <_vfprintf_r+0x27e>
1a0028a0:	049e      	lsls	r6, r3, #18
1a0028a2:	d40a      	bmi.n	1a0028ba <_vfprintf_r+0x5a>
1a0028a4:	f8d9 1064 	ldr.w	r1, [r9, #100]	; 0x64
1a0028a8:	f442 5300 	orr.w	r3, r2, #8192	; 0x2000
1a0028ac:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
1a0028b0:	f8a9 300c 	strh.w	r3, [r9, #12]
1a0028b4:	f8c9 1064 	str.w	r1, [r9, #100]	; 0x64
1a0028b8:	b29b      	uxth	r3, r3
1a0028ba:	071d      	lsls	r5, r3, #28
1a0028bc:	f140 80b2 	bpl.w	1a002a24 <_vfprintf_r+0x1c4>
1a0028c0:	f8d9 2010 	ldr.w	r2, [r9, #16]
1a0028c4:	2a00      	cmp	r2, #0
1a0028c6:	f000 80ad 	beq.w	1a002a24 <_vfprintf_r+0x1c4>
1a0028ca:	f003 021a 	and.w	r2, r3, #26
1a0028ce:	2a0a      	cmp	r2, #10
1a0028d0:	f000 80c9 	beq.w	1a002a66 <_vfprintf_r+0x206>
1a0028d4:	2300      	movs	r3, #0
1a0028d6:	ed9f 7b86 	vldr	d7, [pc, #536]	; 1a002af0 <_vfprintf_r+0x290>
1a0028da:	9310      	str	r3, [sp, #64]	; 0x40
1a0028dc:	e9cd 332b 	strd	r3, r3, [sp, #172]	; 0xac
1a0028e0:	9317      	str	r3, [sp, #92]	; 0x5c
1a0028e2:	e9cd 3319 	strd	r3, r3, [sp, #100]	; 0x64
1a0028e6:	931b      	str	r3, [sp, #108]	; 0x6c
1a0028e8:	9318      	str	r3, [sp, #96]	; 0x60
1a0028ea:	9305      	str	r3, [sp, #20]
1a0028ec:	ab2d      	add	r3, sp, #180	; 0xb4
1a0028ee:	932a      	str	r3, [sp, #168]	; 0xa8
1a0028f0:	469b      	mov	fp, r3
1a0028f2:	783b      	ldrb	r3, [r7, #0]
1a0028f4:	f8cd 901c 	str.w	r9, [sp, #28]
1a0028f8:	ed8d 7b12 	vstr	d7, [sp, #72]	; 0x48
1a0028fc:	2b00      	cmp	r3, #0
1a0028fe:	f000 8259 	beq.w	1a002db4 <_vfprintf_r+0x554>
1a002902:	2b25      	cmp	r3, #37	; 0x25
1a002904:	463c      	mov	r4, r7
1a002906:	d102      	bne.n	1a00290e <_vfprintf_r+0xae>
1a002908:	e01d      	b.n	1a002946 <_vfprintf_r+0xe6>
1a00290a:	2b25      	cmp	r3, #37	; 0x25
1a00290c:	d003      	beq.n	1a002916 <_vfprintf_r+0xb6>
1a00290e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
1a002912:	2b00      	cmp	r3, #0
1a002914:	d1f9      	bne.n	1a00290a <_vfprintf_r+0xaa>
1a002916:	1be5      	subs	r5, r4, r7
1a002918:	b18d      	cbz	r5, 1a00293e <_vfprintf_r+0xde>
1a00291a:	e9dd 322b 	ldrd	r3, r2, [sp, #172]	; 0xac
1a00291e:	3301      	adds	r3, #1
1a002920:	442a      	add	r2, r5
1a002922:	2b07      	cmp	r3, #7
1a002924:	f8cb 7000 	str.w	r7, [fp]
1a002928:	f8cb 5004 	str.w	r5, [fp, #4]
1a00292c:	e9cd 322b 	strd	r3, r2, [sp, #172]	; 0xac
1a002930:	f300 80ca 	bgt.w	1a002ac8 <_vfprintf_r+0x268>
1a002934:	f10b 0b08 	add.w	fp, fp, #8
1a002938:	9b05      	ldr	r3, [sp, #20]
1a00293a:	442b      	add	r3, r5
1a00293c:	9305      	str	r3, [sp, #20]
1a00293e:	7823      	ldrb	r3, [r4, #0]
1a002940:	2b00      	cmp	r3, #0
1a002942:	f000 8237 	beq.w	1a002db4 <_vfprintf_r+0x554>
1a002946:	2300      	movs	r3, #0
1a002948:	7866      	ldrb	r6, [r4, #1]
1a00294a:	9306      	str	r3, [sp, #24]
1a00294c:	4698      	mov	r8, r3
1a00294e:	f88d 308b 	strb.w	r3, [sp, #139]	; 0x8b
1a002952:	f104 0a01 	add.w	sl, r4, #1
1a002956:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
1a00295a:	252b      	movs	r5, #43	; 0x2b
1a00295c:	f10a 0a01 	add.w	sl, sl, #1
1a002960:	f1a6 0320 	sub.w	r3, r6, #32
1a002964:	2b5a      	cmp	r3, #90	; 0x5a
1a002966:	f200 842a 	bhi.w	1a0031be <_vfprintf_r+0x95e>
1a00296a:	e8df f013 	tbh	[pc, r3, lsl #1]
1a00296e:	03aa      	.short	0x03aa
1a002970:	04280428 	.word	0x04280428
1a002974:	0428029c 	.word	0x0428029c
1a002978:	04280428 	.word	0x04280428
1a00297c:	042802a7 	.word	0x042802a7
1a002980:	02c60428 	.word	0x02c60428
1a002984:	042802d2 	.word	0x042802d2
1a002988:	02dc02d7 	.word	0x02dc02d7
1a00298c:	02f60428 	.word	0x02f60428
1a002990:	026d026d 	.word	0x026d026d
1a002994:	026d026d 	.word	0x026d026d
1a002998:	026d026d 	.word	0x026d026d
1a00299c:	026d026d 	.word	0x026d026d
1a0029a0:	0428026d 	.word	0x0428026d
1a0029a4:	04280428 	.word	0x04280428
1a0029a8:	04280428 	.word	0x04280428
1a0029ac:	04280428 	.word	0x04280428
1a0029b0:	042802fb 	.word	0x042802fb
1a0029b4:	03f3033c 	.word	0x03f3033c
1a0029b8:	02fb02fb 	.word	0x02fb02fb
1a0029bc:	042802fb 	.word	0x042802fb
1a0029c0:	04280428 	.word	0x04280428
1a0029c4:	03ee0428 	.word	0x03ee0428
1a0029c8:	04280428 	.word	0x04280428
1a0029cc:	0428009a 	.word	0x0428009a
1a0029d0:	04280428 	.word	0x04280428
1a0029d4:	04280350 	.word	0x04280350
1a0029d8:	04280379 	.word	0x04280379
1a0029dc:	03900428 	.word	0x03900428
1a0029e0:	04280428 	.word	0x04280428
1a0029e4:	04280428 	.word	0x04280428
1a0029e8:	04280428 	.word	0x04280428
1a0029ec:	04280428 	.word	0x04280428
1a0029f0:	042802fb 	.word	0x042802fb
1a0029f4:	00c5033c 	.word	0x00c5033c
1a0029f8:	02fb02fb 	.word	0x02fb02fb
1a0029fc:	03d102fb 	.word	0x03d102fb
1a002a00:	007000c5 	.word	0x007000c5
1a002a04:	03b50428 	.word	0x03b50428
1a002a08:	03c20428 	.word	0x03c20428
1a002a0c:	03de009c 	.word	0x03de009c
1a002a10:	04280070 	.word	0x04280070
1a002a14:	00720350 	.word	0x00720350
1a002a18:	0428022c 	.word	0x0428022c
1a002a1c:	027c0428 	.word	0x027c0428
1a002a20:	00720428 	.word	0x00720428
1a002a24:	4649      	mov	r1, r9
1a002a26:	9803      	ldr	r0, [sp, #12]
1a002a28:	f001 fc9a 	bl	1a004360 <__swsetup_r>
1a002a2c:	b1a0      	cbz	r0, 1a002a58 <_vfprintf_r+0x1f8>
1a002a2e:	f8d9 3064 	ldr.w	r3, [r9, #100]	; 0x64
1a002a32:	07d8      	lsls	r0, r3, #31
1a002a34:	d404      	bmi.n	1a002a40 <_vfprintf_r+0x1e0>
1a002a36:	f8b9 300c 	ldrh.w	r3, [r9, #12]
1a002a3a:	0599      	lsls	r1, r3, #22
1a002a3c:	f140 83b7 	bpl.w	1a0031ae <_vfprintf_r+0x94e>
1a002a40:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
1a002a44:	9305      	str	r3, [sp, #20]
1a002a46:	9805      	ldr	r0, [sp, #20]
1a002a48:	b057      	add	sp, #348	; 0x15c
1a002a4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a002a4e:	f048 0820 	orr.w	r8, r8, #32
1a002a52:	f89a 6000 	ldrb.w	r6, [sl]
1a002a56:	e781      	b.n	1a00295c <_vfprintf_r+0xfc>
1a002a58:	f8b9 300c 	ldrh.w	r3, [r9, #12]
1a002a5c:	f003 021a 	and.w	r2, r3, #26
1a002a60:	2a0a      	cmp	r2, #10
1a002a62:	f47f af37 	bne.w	1a0028d4 <_vfprintf_r+0x74>
1a002a66:	f9b9 200e 	ldrsh.w	r2, [r9, #14]
1a002a6a:	2a00      	cmp	r2, #0
1a002a6c:	f6ff af32 	blt.w	1a0028d4 <_vfprintf_r+0x74>
1a002a70:	f8d9 2064 	ldr.w	r2, [r9, #100]	; 0x64
1a002a74:	07d2      	lsls	r2, r2, #31
1a002a76:	d405      	bmi.n	1a002a84 <_vfprintf_r+0x224>
1a002a78:	059b      	lsls	r3, r3, #22
1a002a7a:	d403      	bmi.n	1a002a84 <_vfprintf_r+0x224>
1a002a7c:	f8d9 0058 	ldr.w	r0, [r9, #88]	; 0x58
1a002a80:	f003 f8b4 	bl	1a005bec <__retarget_lock_release_recursive>
1a002a84:	4623      	mov	r3, r4
1a002a86:	463a      	mov	r2, r7
1a002a88:	4649      	mov	r1, r9
1a002a8a:	9803      	ldr	r0, [sp, #12]
1a002a8c:	f001 fc26 	bl	1a0042dc <__sbprintf>
1a002a90:	9005      	str	r0, [sp, #20]
1a002a92:	9805      	ldr	r0, [sp, #20]
1a002a94:	b057      	add	sp, #348	; 0x15c
1a002a96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a002a9a:	9803      	ldr	r0, [sp, #12]
1a002a9c:	f002 fd6e 	bl	1a00557c <__sinit>
1a002aa0:	e6f4      	b.n	1a00288c <_vfprintf_r+0x2c>
1a002aa2:	f048 0810 	orr.w	r8, r8, #16
1a002aa6:	f018 0f20 	tst.w	r8, #32
1a002aaa:	f000 836c 	beq.w	1a003186 <_vfprintf_r+0x926>
1a002aae:	9c08      	ldr	r4, [sp, #32]
1a002ab0:	3407      	adds	r4, #7
1a002ab2:	f024 0307 	bic.w	r3, r4, #7
1a002ab6:	e9d3 4500 	ldrd	r4, r5, [r3]
1a002aba:	f103 0208 	add.w	r2, r3, #8
1a002abe:	9208      	str	r2, [sp, #32]
1a002ac0:	f428 6380 	bic.w	r3, r8, #1024	; 0x400
1a002ac4:	2200      	movs	r2, #0
1a002ac6:	e18c      	b.n	1a002de2 <_vfprintf_r+0x582>
1a002ac8:	aa2a      	add	r2, sp, #168	; 0xa8
1a002aca:	9907      	ldr	r1, [sp, #28]
1a002acc:	9803      	ldr	r0, [sp, #12]
1a002ace:	f004 fa0d 	bl	1a006eec <__sprint_r>
1a002ad2:	2800      	cmp	r0, #0
1a002ad4:	f041 8376 	bne.w	1a0041c4 <_vfprintf_r+0x1964>
1a002ad8:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a002adc:	e72c      	b.n	1a002938 <_vfprintf_r+0xd8>
1a002ade:	f8d9 0058 	ldr.w	r0, [r9, #88]	; 0x58
1a002ae2:	f003 f881 	bl	1a005be8 <__retarget_lock_acquire_recursive>
1a002ae6:	f9b9 200c 	ldrsh.w	r2, [r9, #12]
1a002aea:	b293      	uxth	r3, r2
1a002aec:	e6d8      	b.n	1a0028a0 <_vfprintf_r+0x40>
1a002aee:	bf00      	nop
	...
1a002af8:	4643      	mov	r3, r8
1a002afa:	069f      	lsls	r7, r3, #26
1a002afc:	f140 832f 	bpl.w	1a00315e <_vfprintf_r+0x8fe>
1a002b00:	9c08      	ldr	r4, [sp, #32]
1a002b02:	3407      	adds	r4, #7
1a002b04:	f024 0407 	bic.w	r4, r4, #7
1a002b08:	e9d4 0100 	ldrd	r0, r1, [r4]
1a002b0c:	f104 0208 	add.w	r2, r4, #8
1a002b10:	9208      	str	r2, [sp, #32]
1a002b12:	4604      	mov	r4, r0
1a002b14:	460d      	mov	r5, r1
1a002b16:	2800      	cmp	r0, #0
1a002b18:	f171 0200 	sbcs.w	r2, r1, #0
1a002b1c:	da05      	bge.n	1a002b2a <_vfprintf_r+0x2ca>
1a002b1e:	222d      	movs	r2, #45	; 0x2d
1a002b20:	4264      	negs	r4, r4
1a002b22:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
1a002b26:	f88d 208b 	strb.w	r2, [sp, #139]	; 0x8b
1a002b2a:	aa56      	add	r2, sp, #344	; 0x158
1a002b2c:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
1a002b30:	9204      	str	r2, [sp, #16]
1a002b32:	f000 84b2 	beq.w	1a00349a <_vfprintf_r+0xc3a>
1a002b36:	2201      	movs	r2, #1
1a002b38:	ea54 0105 	orrs.w	r1, r4, r5
1a002b3c:	f023 0880 	bic.w	r8, r3, #128	; 0x80
1a002b40:	f040 8159 	bne.w	1a002df6 <_vfprintf_r+0x596>
1a002b44:	f1b9 0f00 	cmp.w	r9, #0
1a002b48:	f040 8619 	bne.w	1a00377e <_vfprintf_r+0xf1e>
1a002b4c:	2a00      	cmp	r2, #0
1a002b4e:	f040 8508 	bne.w	1a003562 <_vfprintf_r+0xd02>
1a002b52:	f013 0301 	ands.w	r3, r3, #1
1a002b56:	af56      	add	r7, sp, #344	; 0x158
1a002b58:	9309      	str	r3, [sp, #36]	; 0x24
1a002b5a:	d002      	beq.n	1a002b62 <_vfprintf_r+0x302>
1a002b5c:	2330      	movs	r3, #48	; 0x30
1a002b5e:	f807 3d01 	strb.w	r3, [r7, #-1]!
1a002b62:	2300      	movs	r3, #0
1a002b64:	930a      	str	r3, [sp, #40]	; 0x28
1a002b66:	930f      	str	r3, [sp, #60]	; 0x3c
1a002b68:	9314      	str	r3, [sp, #80]	; 0x50
1a002b6a:	9311      	str	r3, [sp, #68]	; 0x44
1a002b6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a002b6e:	f89d 208b 	ldrb.w	r2, [sp, #139]	; 0x8b
1a002b72:	454b      	cmp	r3, r9
1a002b74:	bfb8      	it	lt
1a002b76:	464b      	movlt	r3, r9
1a002b78:	9304      	str	r3, [sp, #16]
1a002b7a:	b112      	cbz	r2, 1a002b82 <_vfprintf_r+0x322>
1a002b7c:	9b04      	ldr	r3, [sp, #16]
1a002b7e:	3301      	adds	r3, #1
1a002b80:	9304      	str	r3, [sp, #16]
1a002b82:	f018 0302 	ands.w	r3, r8, #2
1a002b86:	930b      	str	r3, [sp, #44]	; 0x2c
1a002b88:	d002      	beq.n	1a002b90 <_vfprintf_r+0x330>
1a002b8a:	9b04      	ldr	r3, [sp, #16]
1a002b8c:	3302      	adds	r3, #2
1a002b8e:	9304      	str	r3, [sp, #16]
1a002b90:	f018 0384 	ands.w	r3, r8, #132	; 0x84
1a002b94:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
1a002b96:	930e      	str	r3, [sp, #56]	; 0x38
1a002b98:	d13f      	bne.n	1a002c1a <_vfprintf_r+0x3ba>
1a002b9a:	9b06      	ldr	r3, [sp, #24]
1a002b9c:	9904      	ldr	r1, [sp, #16]
1a002b9e:	1a5d      	subs	r5, r3, r1
1a002ba0:	2d00      	cmp	r5, #0
1a002ba2:	dd3a      	ble.n	1a002c1a <_vfprintf_r+0x3ba>
1a002ba4:	2d10      	cmp	r5, #16
1a002ba6:	9a2b      	ldr	r2, [sp, #172]	; 0xac
1a002ba8:	dd29      	ble.n	1a002bfe <_vfprintf_r+0x39e>
1a002baa:	4659      	mov	r1, fp
1a002bac:	4620      	mov	r0, r4
1a002bae:	9620      	str	r6, [sp, #128]	; 0x80
1a002bb0:	2310      	movs	r3, #16
1a002bb2:	9c03      	ldr	r4, [sp, #12]
1a002bb4:	9e07      	ldr	r6, [sp, #28]
1a002bb6:	46bb      	mov	fp, r7
1a002bb8:	e004      	b.n	1a002bc4 <_vfprintf_r+0x364>
1a002bba:	3d10      	subs	r5, #16
1a002bbc:	2d10      	cmp	r5, #16
1a002bbe:	f101 0108 	add.w	r1, r1, #8
1a002bc2:	dd18      	ble.n	1a002bf6 <_vfprintf_r+0x396>
1a002bc4:	3201      	adds	r2, #1
1a002bc6:	4fba      	ldr	r7, [pc, #744]	; (1a002eb0 <_vfprintf_r+0x650>)
1a002bc8:	3010      	adds	r0, #16
1a002bca:	2a07      	cmp	r2, #7
1a002bcc:	e9cd 202b 	strd	r2, r0, [sp, #172]	; 0xac
1a002bd0:	e9c1 7300 	strd	r7, r3, [r1]
1a002bd4:	ddf1      	ble.n	1a002bba <_vfprintf_r+0x35a>
1a002bd6:	aa2a      	add	r2, sp, #168	; 0xa8
1a002bd8:	4631      	mov	r1, r6
1a002bda:	4620      	mov	r0, r4
1a002bdc:	930c      	str	r3, [sp, #48]	; 0x30
1a002bde:	f004 f985 	bl	1a006eec <__sprint_r>
1a002be2:	2800      	cmp	r0, #0
1a002be4:	f040 843d 	bne.w	1a003462 <_vfprintf_r+0xc02>
1a002be8:	3d10      	subs	r5, #16
1a002bea:	2d10      	cmp	r5, #16
1a002bec:	e9dd 202b 	ldrd	r2, r0, [sp, #172]	; 0xac
1a002bf0:	a92d      	add	r1, sp, #180	; 0xb4
1a002bf2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a002bf4:	dce6      	bgt.n	1a002bc4 <_vfprintf_r+0x364>
1a002bf6:	9e20      	ldr	r6, [sp, #128]	; 0x80
1a002bf8:	465f      	mov	r7, fp
1a002bfa:	4604      	mov	r4, r0
1a002bfc:	468b      	mov	fp, r1
1a002bfe:	3201      	adds	r2, #1
1a002c00:	4bab      	ldr	r3, [pc, #684]	; (1a002eb0 <_vfprintf_r+0x650>)
1a002c02:	442c      	add	r4, r5
1a002c04:	2a07      	cmp	r2, #7
1a002c06:	e9cd 242b 	strd	r2, r4, [sp, #172]	; 0xac
1a002c0a:	e9cb 3500 	strd	r3, r5, [fp]
1a002c0e:	f300 84ff 	bgt.w	1a003610 <_vfprintf_r+0xdb0>
1a002c12:	f89d 208b 	ldrb.w	r2, [sp, #139]	; 0x8b
1a002c16:	f10b 0b08 	add.w	fp, fp, #8
1a002c1a:	b172      	cbz	r2, 1a002c3a <_vfprintf_r+0x3da>
1a002c1c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
1a002c1e:	3201      	adds	r2, #1
1a002c20:	3401      	adds	r4, #1
1a002c22:	f10d 008b 	add.w	r0, sp, #139	; 0x8b
1a002c26:	2101      	movs	r1, #1
1a002c28:	2a07      	cmp	r2, #7
1a002c2a:	e9cd 242b 	strd	r2, r4, [sp, #172]	; 0xac
1a002c2e:	e9cb 0100 	strd	r0, r1, [fp]
1a002c32:	f300 8418 	bgt.w	1a003466 <_vfprintf_r+0xc06>
1a002c36:	f10b 0b08 	add.w	fp, fp, #8
1a002c3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a002c3c:	b16b      	cbz	r3, 1a002c5a <_vfprintf_r+0x3fa>
1a002c3e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
1a002c40:	3301      	adds	r3, #1
1a002c42:	3402      	adds	r4, #2
1a002c44:	a923      	add	r1, sp, #140	; 0x8c
1a002c46:	2202      	movs	r2, #2
1a002c48:	2b07      	cmp	r3, #7
1a002c4a:	e9cd 342b 	strd	r3, r4, [sp, #172]	; 0xac
1a002c4e:	e9cb 1200 	strd	r1, r2, [fp]
1a002c52:	f300 8415 	bgt.w	1a003480 <_vfprintf_r+0xc20>
1a002c56:	f10b 0b08 	add.w	fp, fp, #8
1a002c5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a002c5c:	2b80      	cmp	r3, #128	; 0x80
1a002c5e:	f000 8331 	beq.w	1a0032c4 <_vfprintf_r+0xa64>
1a002c62:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a002c64:	eba9 0503 	sub.w	r5, r9, r3
1a002c68:	2d00      	cmp	r5, #0
1a002c6a:	dd37      	ble.n	1a002cdc <_vfprintf_r+0x47c>
1a002c6c:	2d10      	cmp	r5, #16
1a002c6e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
1a002c70:	4b90      	ldr	r3, [pc, #576]	; (1a002eb4 <_vfprintf_r+0x654>)
1a002c72:	dd28      	ble.n	1a002cc6 <_vfprintf_r+0x466>
1a002c74:	4659      	mov	r1, fp
1a002c76:	4620      	mov	r0, r4
1a002c78:	46bb      	mov	fp, r7
1a002c7a:	f04f 0910 	mov.w	r9, #16
1a002c7e:	4637      	mov	r7, r6
1a002c80:	461c      	mov	r4, r3
1a002c82:	9e07      	ldr	r6, [sp, #28]
1a002c84:	e004      	b.n	1a002c90 <_vfprintf_r+0x430>
1a002c86:	3d10      	subs	r5, #16
1a002c88:	2d10      	cmp	r5, #16
1a002c8a:	f101 0108 	add.w	r1, r1, #8
1a002c8e:	dd15      	ble.n	1a002cbc <_vfprintf_r+0x45c>
1a002c90:	3201      	adds	r2, #1
1a002c92:	3010      	adds	r0, #16
1a002c94:	2a07      	cmp	r2, #7
1a002c96:	e9cd 202b 	strd	r2, r0, [sp, #172]	; 0xac
1a002c9a:	e9c1 4900 	strd	r4, r9, [r1]
1a002c9e:	ddf2      	ble.n	1a002c86 <_vfprintf_r+0x426>
1a002ca0:	aa2a      	add	r2, sp, #168	; 0xa8
1a002ca2:	4631      	mov	r1, r6
1a002ca4:	9803      	ldr	r0, [sp, #12]
1a002ca6:	f004 f921 	bl	1a006eec <__sprint_r>
1a002caa:	2800      	cmp	r0, #0
1a002cac:	f040 83d9 	bne.w	1a003462 <_vfprintf_r+0xc02>
1a002cb0:	3d10      	subs	r5, #16
1a002cb2:	2d10      	cmp	r5, #16
1a002cb4:	e9dd 202b 	ldrd	r2, r0, [sp, #172]	; 0xac
1a002cb8:	a92d      	add	r1, sp, #180	; 0xb4
1a002cba:	dce9      	bgt.n	1a002c90 <_vfprintf_r+0x430>
1a002cbc:	463e      	mov	r6, r7
1a002cbe:	4623      	mov	r3, r4
1a002cc0:	465f      	mov	r7, fp
1a002cc2:	4604      	mov	r4, r0
1a002cc4:	468b      	mov	fp, r1
1a002cc6:	3201      	adds	r2, #1
1a002cc8:	442c      	add	r4, r5
1a002cca:	2a07      	cmp	r2, #7
1a002ccc:	e9cd 242b 	strd	r2, r4, [sp, #172]	; 0xac
1a002cd0:	e9cb 3500 	strd	r3, r5, [fp]
1a002cd4:	f300 83ef 	bgt.w	1a0034b6 <_vfprintf_r+0xc56>
1a002cd8:	f10b 0b08 	add.w	fp, fp, #8
1a002cdc:	f418 7f80 	tst.w	r8, #256	; 0x100
1a002ce0:	f040 8280 	bne.w	1a0031e4 <_vfprintf_r+0x984>
1a002ce4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
1a002ce6:	9a09      	ldr	r2, [sp, #36]	; 0x24
1a002ce8:	f8cb 7000 	str.w	r7, [fp]
1a002cec:	3301      	adds	r3, #1
1a002cee:	4414      	add	r4, r2
1a002cf0:	2b07      	cmp	r3, #7
1a002cf2:	942c      	str	r4, [sp, #176]	; 0xb0
1a002cf4:	f8cb 2004 	str.w	r2, [fp, #4]
1a002cf8:	932b      	str	r3, [sp, #172]	; 0xac
1a002cfa:	f300 8392 	bgt.w	1a003422 <_vfprintf_r+0xbc2>
1a002cfe:	f10b 0b08 	add.w	fp, fp, #8
1a002d02:	f018 0f04 	tst.w	r8, #4
1a002d06:	d03b      	beq.n	1a002d80 <_vfprintf_r+0x520>
1a002d08:	9b06      	ldr	r3, [sp, #24]
1a002d0a:	9a04      	ldr	r2, [sp, #16]
1a002d0c:	1a9d      	subs	r5, r3, r2
1a002d0e:	2d00      	cmp	r5, #0
1a002d10:	dd36      	ble.n	1a002d80 <_vfprintf_r+0x520>
1a002d12:	2d10      	cmp	r5, #16
1a002d14:	9b2b      	ldr	r3, [sp, #172]	; 0xac
1a002d16:	dd21      	ble.n	1a002d5c <_vfprintf_r+0x4fc>
1a002d18:	2610      	movs	r6, #16
1a002d1a:	9f03      	ldr	r7, [sp, #12]
1a002d1c:	f8dd 801c 	ldr.w	r8, [sp, #28]
1a002d20:	e004      	b.n	1a002d2c <_vfprintf_r+0x4cc>
1a002d22:	3d10      	subs	r5, #16
1a002d24:	2d10      	cmp	r5, #16
1a002d26:	f10b 0b08 	add.w	fp, fp, #8
1a002d2a:	dd17      	ble.n	1a002d5c <_vfprintf_r+0x4fc>
1a002d2c:	3301      	adds	r3, #1
1a002d2e:	4a60      	ldr	r2, [pc, #384]	; (1a002eb0 <_vfprintf_r+0x650>)
1a002d30:	3410      	adds	r4, #16
1a002d32:	2b07      	cmp	r3, #7
1a002d34:	e9cd 342b 	strd	r3, r4, [sp, #172]	; 0xac
1a002d38:	e9cb 2600 	strd	r2, r6, [fp]
1a002d3c:	ddf1      	ble.n	1a002d22 <_vfprintf_r+0x4c2>
1a002d3e:	aa2a      	add	r2, sp, #168	; 0xa8
1a002d40:	4641      	mov	r1, r8
1a002d42:	4638      	mov	r0, r7
1a002d44:	f004 f8d2 	bl	1a006eec <__sprint_r>
1a002d48:	2800      	cmp	r0, #0
1a002d4a:	f040 856c 	bne.w	1a003826 <_vfprintf_r+0xfc6>
1a002d4e:	3d10      	subs	r5, #16
1a002d50:	2d10      	cmp	r5, #16
1a002d52:	e9dd 342b 	ldrd	r3, r4, [sp, #172]	; 0xac
1a002d56:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a002d5a:	dce7      	bgt.n	1a002d2c <_vfprintf_r+0x4cc>
1a002d5c:	3301      	adds	r3, #1
1a002d5e:	4a54      	ldr	r2, [pc, #336]	; (1a002eb0 <_vfprintf_r+0x650>)
1a002d60:	442c      	add	r4, r5
1a002d62:	2b07      	cmp	r3, #7
1a002d64:	e9cd 342b 	strd	r3, r4, [sp, #172]	; 0xac
1a002d68:	e9cb 2500 	strd	r2, r5, [fp]
1a002d6c:	dd08      	ble.n	1a002d80 <_vfprintf_r+0x520>
1a002d6e:	aa2a      	add	r2, sp, #168	; 0xa8
1a002d70:	9907      	ldr	r1, [sp, #28]
1a002d72:	9803      	ldr	r0, [sp, #12]
1a002d74:	f004 f8ba 	bl	1a006eec <__sprint_r>
1a002d78:	2800      	cmp	r0, #0
1a002d7a:	f040 82e9 	bne.w	1a003350 <_vfprintf_r+0xaf0>
1a002d7e:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
1a002d80:	9904      	ldr	r1, [sp, #16]
1a002d82:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
1a002d86:	428a      	cmp	r2, r1
1a002d88:	bfac      	ite	ge
1a002d8a:	189b      	addge	r3, r3, r2
1a002d8c:	185b      	addlt	r3, r3, r1
1a002d8e:	9305      	str	r3, [sp, #20]
1a002d90:	2c00      	cmp	r4, #0
1a002d92:	f040 82d5 	bne.w	1a003340 <_vfprintf_r+0xae0>
1a002d96:	2300      	movs	r3, #0
1a002d98:	932b      	str	r3, [sp, #172]	; 0xac
1a002d9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a002d9c:	b11b      	cbz	r3, 1a002da6 <_vfprintf_r+0x546>
1a002d9e:	990a      	ldr	r1, [sp, #40]	; 0x28
1a002da0:	9803      	ldr	r0, [sp, #12]
1a002da2:	f002 fc73 	bl	1a00568c <_free_r>
1a002da6:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a002daa:	4657      	mov	r7, sl
1a002dac:	783b      	ldrb	r3, [r7, #0]
1a002dae:	2b00      	cmp	r3, #0
1a002db0:	f47f ada7 	bne.w	1a002902 <_vfprintf_r+0xa2>
1a002db4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
1a002db6:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a002dba:	2b00      	cmp	r3, #0
1a002dbc:	f041 80e7 	bne.w	1a003f8e <_vfprintf_r+0x172e>
1a002dc0:	2300      	movs	r3, #0
1a002dc2:	932b      	str	r3, [sp, #172]	; 0xac
1a002dc4:	e2cb      	b.n	1a00335e <_vfprintf_r+0xafe>
1a002dc6:	4643      	mov	r3, r8
1a002dc8:	069a      	lsls	r2, r3, #26
1a002dca:	f140 814e 	bpl.w	1a00306a <_vfprintf_r+0x80a>
1a002dce:	9c08      	ldr	r4, [sp, #32]
1a002dd0:	3407      	adds	r4, #7
1a002dd2:	f024 0207 	bic.w	r2, r4, #7
1a002dd6:	f102 0108 	add.w	r1, r2, #8
1a002dda:	e9d2 4500 	ldrd	r4, r5, [r2]
1a002dde:	9108      	str	r1, [sp, #32]
1a002de0:	2201      	movs	r2, #1
1a002de2:	2100      	movs	r1, #0
1a002de4:	f88d 108b 	strb.w	r1, [sp, #139]	; 0x8b
1a002de8:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
1a002dec:	a956      	add	r1, sp, #344	; 0x158
1a002dee:	9104      	str	r1, [sp, #16]
1a002df0:	f47f aea2 	bne.w	1a002b38 <_vfprintf_r+0x2d8>
1a002df4:	4698      	mov	r8, r3
1a002df6:	2a01      	cmp	r2, #1
1a002df8:	f000 8350 	beq.w	1a00349c <_vfprintf_r+0xc3c>
1a002dfc:	2a02      	cmp	r2, #2
1a002dfe:	f000 831b 	beq.w	1a003438 <_vfprintf_r+0xbd8>
1a002e02:	a956      	add	r1, sp, #344	; 0x158
1a002e04:	e000      	b.n	1a002e08 <_vfprintf_r+0x5a8>
1a002e06:	4639      	mov	r1, r7
1a002e08:	08e2      	lsrs	r2, r4, #3
1a002e0a:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
1a002e0e:	08e8      	lsrs	r0, r5, #3
1a002e10:	f004 0307 	and.w	r3, r4, #7
1a002e14:	4605      	mov	r5, r0
1a002e16:	4614      	mov	r4, r2
1a002e18:	3330      	adds	r3, #48	; 0x30
1a002e1a:	ea54 0205 	orrs.w	r2, r4, r5
1a002e1e:	f801 3c01 	strb.w	r3, [r1, #-1]
1a002e22:	f101 37ff 	add.w	r7, r1, #4294967295	; 0xffffffff
1a002e26:	d1ee      	bne.n	1a002e06 <_vfprintf_r+0x5a6>
1a002e28:	f018 0f01 	tst.w	r8, #1
1a002e2c:	f000 8314 	beq.w	1a003458 <_vfprintf_r+0xbf8>
1a002e30:	2b30      	cmp	r3, #48	; 0x30
1a002e32:	f000 8311 	beq.w	1a003458 <_vfprintf_r+0xbf8>
1a002e36:	9a04      	ldr	r2, [sp, #16]
1a002e38:	3902      	subs	r1, #2
1a002e3a:	2330      	movs	r3, #48	; 0x30
1a002e3c:	1a52      	subs	r2, r2, r1
1a002e3e:	f807 3c01 	strb.w	r3, [r7, #-1]
1a002e42:	9209      	str	r2, [sp, #36]	; 0x24
1a002e44:	460f      	mov	r7, r1
1a002e46:	e68c      	b.n	1a002b62 <_vfprintf_r+0x302>
1a002e48:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
1a002e4c:	2200      	movs	r2, #0
1a002e4e:	f81a 6b01 	ldrb.w	r6, [sl], #1
1a002e52:	eb02 0282 	add.w	r2, r2, r2, lsl #2
1a002e56:	eb03 0242 	add.w	r2, r3, r2, lsl #1
1a002e5a:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
1a002e5e:	2b09      	cmp	r3, #9
1a002e60:	d9f5      	bls.n	1a002e4e <_vfprintf_r+0x5ee>
1a002e62:	9206      	str	r2, [sp, #24]
1a002e64:	e57c      	b.n	1a002960 <_vfprintf_r+0x100>
1a002e66:	4b14      	ldr	r3, [pc, #80]	; (1a002eb8 <_vfprintf_r+0x658>)
1a002e68:	9317      	str	r3, [sp, #92]	; 0x5c
1a002e6a:	f018 0f20 	tst.w	r8, #32
1a002e6e:	f000 8114 	beq.w	1a00309a <_vfprintf_r+0x83a>
1a002e72:	9c08      	ldr	r4, [sp, #32]
1a002e74:	3407      	adds	r4, #7
1a002e76:	f024 0307 	bic.w	r3, r4, #7
1a002e7a:	e9d3 4500 	ldrd	r4, r5, [r3]
1a002e7e:	f103 0208 	add.w	r2, r3, #8
1a002e82:	9208      	str	r2, [sp, #32]
1a002e84:	f018 0f01 	tst.w	r8, #1
1a002e88:	d009      	beq.n	1a002e9e <_vfprintf_r+0x63e>
1a002e8a:	ea54 0305 	orrs.w	r3, r4, r5
1a002e8e:	d006      	beq.n	1a002e9e <_vfprintf_r+0x63e>
1a002e90:	2330      	movs	r3, #48	; 0x30
1a002e92:	f88d 608d 	strb.w	r6, [sp, #141]	; 0x8d
1a002e96:	f048 0802 	orr.w	r8, r8, #2
1a002e9a:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
1a002e9e:	f428 6380 	bic.w	r3, r8, #1024	; 0x400
1a002ea2:	2202      	movs	r2, #2
1a002ea4:	e79d      	b.n	1a002de2 <_vfprintf_r+0x582>
1a002ea6:	f048 0801 	orr.w	r8, r8, #1
1a002eaa:	f89a 6000 	ldrb.w	r6, [sl]
1a002eae:	e555      	b.n	1a00295c <_vfprintf_r+0xfc>
1a002eb0:	1a007888 	.word	0x1a007888
1a002eb4:	1a007898 	.word	0x1a007898
1a002eb8:	1a007854 	.word	0x1a007854
1a002ebc:	9e03      	ldr	r6, [sp, #12]
1a002ebe:	4630      	mov	r0, r6
1a002ec0:	f002 fe80 	bl	1a005bc4 <_localeconv_r>
1a002ec4:	6843      	ldr	r3, [r0, #4]
1a002ec6:	9318      	str	r3, [sp, #96]	; 0x60
1a002ec8:	4618      	mov	r0, r3
1a002eca:	f7ff fc59 	bl	1a002780 <strlen>
1a002ece:	901b      	str	r0, [sp, #108]	; 0x6c
1a002ed0:	4604      	mov	r4, r0
1a002ed2:	4630      	mov	r0, r6
1a002ed4:	f002 fe76 	bl	1a005bc4 <_localeconv_r>
1a002ed8:	6883      	ldr	r3, [r0, #8]
1a002eda:	931a      	str	r3, [sp, #104]	; 0x68
1a002edc:	2c00      	cmp	r4, #0
1a002ede:	f43f adb8 	beq.w	1a002a52 <_vfprintf_r+0x1f2>
1a002ee2:	f89a 6000 	ldrb.w	r6, [sl]
1a002ee6:	2b00      	cmp	r3, #0
1a002ee8:	f43f ad38 	beq.w	1a00295c <_vfprintf_r+0xfc>
1a002eec:	781b      	ldrb	r3, [r3, #0]
1a002eee:	2b00      	cmp	r3, #0
1a002ef0:	f43f ad34 	beq.w	1a00295c <_vfprintf_r+0xfc>
1a002ef4:	f448 6880 	orr.w	r8, r8, #1024	; 0x400
1a002ef8:	e530      	b.n	1a00295c <_vfprintf_r+0xfc>
1a002efa:	9b08      	ldr	r3, [sp, #32]
1a002efc:	f89a 6000 	ldrb.w	r6, [sl]
1a002f00:	681a      	ldr	r2, [r3, #0]
1a002f02:	9206      	str	r2, [sp, #24]
1a002f04:	2a00      	cmp	r2, #0
1a002f06:	f103 0304 	add.w	r3, r3, #4
1a002f0a:	f2c0 8697 	blt.w	1a003c3c <_vfprintf_r+0x13dc>
1a002f0e:	9308      	str	r3, [sp, #32]
1a002f10:	e524      	b.n	1a00295c <_vfprintf_r+0xfc>
1a002f12:	f88d 508b 	strb.w	r5, [sp, #139]	; 0x8b
1a002f16:	f89a 6000 	ldrb.w	r6, [sl]
1a002f1a:	e51f      	b.n	1a00295c <_vfprintf_r+0xfc>
1a002f1c:	f89a 6000 	ldrb.w	r6, [sl]
1a002f20:	f048 0804 	orr.w	r8, r8, #4
1a002f24:	e51a      	b.n	1a00295c <_vfprintf_r+0xfc>
1a002f26:	f89a 6000 	ldrb.w	r6, [sl]
1a002f2a:	2e2a      	cmp	r6, #42	; 0x2a
1a002f2c:	f10a 0201 	add.w	r2, sl, #1
1a002f30:	f001 81b0 	beq.w	1a004294 <_vfprintf_r+0x1a34>
1a002f34:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
1a002f38:	2b09      	cmp	r3, #9
1a002f3a:	4692      	mov	sl, r2
1a002f3c:	f04f 0900 	mov.w	r9, #0
1a002f40:	f63f ad0e 	bhi.w	1a002960 <_vfprintf_r+0x100>
1a002f44:	f81a 6b01 	ldrb.w	r6, [sl], #1
1a002f48:	eb09 0989 	add.w	r9, r9, r9, lsl #2
1a002f4c:	eb03 0949 	add.w	r9, r3, r9, lsl #1
1a002f50:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
1a002f54:	2b09      	cmp	r3, #9
1a002f56:	d9f5      	bls.n	1a002f44 <_vfprintf_r+0x6e4>
1a002f58:	e502      	b.n	1a002960 <_vfprintf_r+0x100>
1a002f5a:	f048 0880 	orr.w	r8, r8, #128	; 0x80
1a002f5e:	f89a 6000 	ldrb.w	r6, [sl]
1a002f62:	e4fb      	b.n	1a00295c <_vfprintf_r+0xfc>
1a002f64:	9c08      	ldr	r4, [sp, #32]
1a002f66:	3407      	adds	r4, #7
1a002f68:	f024 0407 	bic.w	r4, r4, #7
1a002f6c:	ed94 7b00 	vldr	d7, [r4]
1a002f70:	ec52 1b17 	vmov	r1, r2, d7
1a002f74:	f022 4300 	bic.w	r3, r2, #2147483648	; 0x80000000
1a002f78:	931d      	str	r3, [sp, #116]	; 0x74
1a002f7a:	ed8d 7a1c 	vstr	s14, [sp, #112]	; 0x70
1a002f7e:	3408      	adds	r4, #8
1a002f80:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
1a002f84:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
1a002f88:	4bba      	ldr	r3, [pc, #744]	; (1a003274 <_vfprintf_r+0xa14>)
1a002f8a:	9408      	str	r4, [sp, #32]
1a002f8c:	ed8d 7b12 	vstr	d7, [sp, #72]	; 0x48
1a002f90:	f004 fa0e 	bl	1a0073b0 <__aeabi_dcmpun>
1a002f94:	2800      	cmp	r0, #0
1a002f96:	f040 846f 	bne.w	1a003878 <_vfprintf_r+0x1018>
1a002f9a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
1a002f9e:	4bb5      	ldr	r3, [pc, #724]	; (1a003274 <_vfprintf_r+0xa14>)
1a002fa0:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
1a002fa4:	f004 f9e6 	bl	1a007374 <__aeabi_dcmple>
1a002fa8:	2800      	cmp	r0, #0
1a002faa:	f040 8465 	bne.w	1a003878 <_vfprintf_r+0x1018>
1a002fae:	2200      	movs	r2, #0
1a002fb0:	2300      	movs	r3, #0
1a002fb2:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
1a002fb6:	f004 f9d3 	bl	1a007360 <__aeabi_dcmplt>
1a002fba:	2800      	cmp	r0, #0
1a002fbc:	f040 855b 	bne.w	1a003a76 <_vfprintf_r+0x1216>
1a002fc0:	f89d 208b 	ldrb.w	r2, [sp, #139]	; 0x8b
1a002fc4:	4fac      	ldr	r7, [pc, #688]	; (1a003278 <_vfprintf_r+0xa18>)
1a002fc6:	4bad      	ldr	r3, [pc, #692]	; (1a00327c <_vfprintf_r+0xa1c>)
1a002fc8:	2000      	movs	r0, #0
1a002fca:	2103      	movs	r1, #3
1a002fcc:	9104      	str	r1, [sp, #16]
1a002fce:	900a      	str	r0, [sp, #40]	; 0x28
1a002fd0:	f028 0880 	bic.w	r8, r8, #128	; 0x80
1a002fd4:	2e47      	cmp	r6, #71	; 0x47
1a002fd6:	bfd8      	it	le
1a002fd8:	461f      	movle	r7, r3
1a002fda:	9109      	str	r1, [sp, #36]	; 0x24
1a002fdc:	4681      	mov	r9, r0
1a002fde:	900f      	str	r0, [sp, #60]	; 0x3c
1a002fe0:	9014      	str	r0, [sp, #80]	; 0x50
1a002fe2:	9011      	str	r0, [sp, #68]	; 0x44
1a002fe4:	e5c9      	b.n	1a002b7a <_vfprintf_r+0x31a>
1a002fe6:	9808      	ldr	r0, [sp, #32]
1a002fe8:	2300      	movs	r3, #0
1a002fea:	6801      	ldr	r1, [r0, #0]
1a002fec:	f88d 308b 	strb.w	r3, [sp, #139]	; 0x8b
1a002ff0:	461a      	mov	r2, r3
1a002ff2:	f88d 10f4 	strb.w	r1, [sp, #244]	; 0xf4
1a002ff6:	2301      	movs	r3, #1
1a002ff8:	1d01      	adds	r1, r0, #4
1a002ffa:	9304      	str	r3, [sp, #16]
1a002ffc:	920a      	str	r2, [sp, #40]	; 0x28
1a002ffe:	4691      	mov	r9, r2
1a003000:	920f      	str	r2, [sp, #60]	; 0x3c
1a003002:	9214      	str	r2, [sp, #80]	; 0x50
1a003004:	9211      	str	r2, [sp, #68]	; 0x44
1a003006:	e9cd 1308 	strd	r1, r3, [sp, #32]
1a00300a:	af3d      	add	r7, sp, #244	; 0xf4
1a00300c:	e5b9      	b.n	1a002b82 <_vfprintf_r+0x322>
1a00300e:	9b08      	ldr	r3, [sp, #32]
1a003010:	681f      	ldr	r7, [r3, #0]
1a003012:	2500      	movs	r5, #0
1a003014:	f88d 508b 	strb.w	r5, [sp, #139]	; 0x8b
1a003018:	1d1c      	adds	r4, r3, #4
1a00301a:	2f00      	cmp	r7, #0
1a00301c:	f000 8639 	beq.w	1a003c92 <_vfprintf_r+0x1432>
1a003020:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
1a003024:	f000 8711 	beq.w	1a003e4a <_vfprintf_r+0x15ea>
1a003028:	464a      	mov	r2, r9
1a00302a:	4629      	mov	r1, r5
1a00302c:	4638      	mov	r0, r7
1a00302e:	f003 f8ff 	bl	1a006230 <memchr>
1a003032:	900a      	str	r0, [sp, #40]	; 0x28
1a003034:	2800      	cmp	r0, #0
1a003036:	f000 85e7 	beq.w	1a003c08 <_vfprintf_r+0x13a8>
1a00303a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a00303c:	1bdb      	subs	r3, r3, r7
1a00303e:	9309      	str	r3, [sp, #36]	; 0x24
1a003040:	46a9      	mov	r9, r5
1a003042:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
1a003046:	9408      	str	r4, [sp, #32]
1a003048:	9304      	str	r3, [sp, #16]
1a00304a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
1a00304e:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
1a003052:	f8cd 9050 	str.w	r9, [sp, #80]	; 0x50
1a003056:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
1a00305a:	f89d 208b 	ldrb.w	r2, [sp, #139]	; 0x8b
1a00305e:	e58c      	b.n	1a002b7a <_vfprintf_r+0x31a>
1a003060:	f048 0310 	orr.w	r3, r8, #16
1a003064:	069a      	lsls	r2, r3, #26
1a003066:	f53f aeb2 	bmi.w	1a002dce <_vfprintf_r+0x56e>
1a00306a:	9a08      	ldr	r2, [sp, #32]
1a00306c:	06df      	lsls	r7, r3, #27
1a00306e:	f102 0104 	add.w	r1, r2, #4
1a003072:	f100 837e 	bmi.w	1a003772 <_vfprintf_r+0xf12>
1a003076:	065d      	lsls	r5, r3, #25
1a003078:	9a08      	ldr	r2, [sp, #32]
1a00307a:	f100 84e4 	bmi.w	1a003a46 <_vfprintf_r+0x11e6>
1a00307e:	059c      	lsls	r4, r3, #22
1a003080:	f140 8377 	bpl.w	1a003772 <_vfprintf_r+0xf12>
1a003084:	7814      	ldrb	r4, [r2, #0]
1a003086:	9108      	str	r1, [sp, #32]
1a003088:	2500      	movs	r5, #0
1a00308a:	2201      	movs	r2, #1
1a00308c:	e6a9      	b.n	1a002de2 <_vfprintf_r+0x582>
1a00308e:	4b7c      	ldr	r3, [pc, #496]	; (1a003280 <_vfprintf_r+0xa20>)
1a003090:	9317      	str	r3, [sp, #92]	; 0x5c
1a003092:	f018 0f20 	tst.w	r8, #32
1a003096:	f47f aeec 	bne.w	1a002e72 <_vfprintf_r+0x612>
1a00309a:	9a08      	ldr	r2, [sp, #32]
1a00309c:	f018 0f10 	tst.w	r8, #16
1a0030a0:	f102 0304 	add.w	r3, r2, #4
1a0030a4:	f040 8354 	bne.w	1a003750 <_vfprintf_r+0xef0>
1a0030a8:	f018 0f40 	tst.w	r8, #64	; 0x40
1a0030ac:	9a08      	ldr	r2, [sp, #32]
1a0030ae:	f040 84d0 	bne.w	1a003a52 <_vfprintf_r+0x11f2>
1a0030b2:	f418 7f00 	tst.w	r8, #512	; 0x200
1a0030b6:	f000 834b 	beq.w	1a003750 <_vfprintf_r+0xef0>
1a0030ba:	7814      	ldrb	r4, [r2, #0]
1a0030bc:	9308      	str	r3, [sp, #32]
1a0030be:	2500      	movs	r5, #0
1a0030c0:	e6e0      	b.n	1a002e84 <_vfprintf_r+0x624>
1a0030c2:	f89d 308b 	ldrb.w	r3, [sp, #139]	; 0x8b
1a0030c6:	f89a 6000 	ldrb.w	r6, [sl]
1a0030ca:	2b00      	cmp	r3, #0
1a0030cc:	f47f ac46 	bne.w	1a00295c <_vfprintf_r+0xfc>
1a0030d0:	2320      	movs	r3, #32
1a0030d2:	f88d 308b 	strb.w	r3, [sp, #139]	; 0x8b
1a0030d6:	e441      	b.n	1a00295c <_vfprintf_r+0xfc>
1a0030d8:	f89a 6000 	ldrb.w	r6, [sl]
1a0030dc:	2e6c      	cmp	r6, #108	; 0x6c
1a0030de:	bf03      	ittte	eq
1a0030e0:	f89a 6001 	ldrbeq.w	r6, [sl, #1]
1a0030e4:	f048 0820 	orreq.w	r8, r8, #32
1a0030e8:	f10a 0a01 	addeq.w	sl, sl, #1
1a0030ec:	f048 0810 	orrne.w	r8, r8, #16
1a0030f0:	e434      	b.n	1a00295c <_vfprintf_r+0xfc>
1a0030f2:	9a08      	ldr	r2, [sp, #32]
1a0030f4:	f018 0f20 	tst.w	r8, #32
1a0030f8:	f852 3b04 	ldr.w	r3, [r2], #4
1a0030fc:	9208      	str	r2, [sp, #32]
1a0030fe:	f000 83a1 	beq.w	1a003844 <_vfprintf_r+0xfe4>
1a003102:	9a05      	ldr	r2, [sp, #20]
1a003104:	4610      	mov	r0, r2
1a003106:	17d1      	asrs	r1, r2, #31
1a003108:	e9c3 0100 	strd	r0, r1, [r3]
1a00310c:	4657      	mov	r7, sl
1a00310e:	e64d      	b.n	1a002dac <_vfprintf_r+0x54c>
1a003110:	f89a 6000 	ldrb.w	r6, [sl]
1a003114:	2e68      	cmp	r6, #104	; 0x68
1a003116:	bf03      	ittte	eq
1a003118:	f89a 6001 	ldrbeq.w	r6, [sl, #1]
1a00311c:	f448 7800 	orreq.w	r8, r8, #512	; 0x200
1a003120:	f10a 0a01 	addeq.w	sl, sl, #1
1a003124:	f048 0840 	orrne.w	r8, r8, #64	; 0x40
1a003128:	e418      	b.n	1a00295c <_vfprintf_r+0xfc>
1a00312a:	9908      	ldr	r1, [sp, #32]
1a00312c:	4b55      	ldr	r3, [pc, #340]	; (1a003284 <_vfprintf_r+0xa24>)
1a00312e:	680c      	ldr	r4, [r1, #0]
1a003130:	9317      	str	r3, [sp, #92]	; 0x5c
1a003132:	f647 0230 	movw	r2, #30768	; 0x7830
1a003136:	3104      	adds	r1, #4
1a003138:	f8ad 208c 	strh.w	r2, [sp, #140]	; 0x8c
1a00313c:	f048 0302 	orr.w	r3, r8, #2
1a003140:	9108      	str	r1, [sp, #32]
1a003142:	2500      	movs	r5, #0
1a003144:	2202      	movs	r2, #2
1a003146:	2678      	movs	r6, #120	; 0x78
1a003148:	e64b      	b.n	1a002de2 <_vfprintf_r+0x582>
1a00314a:	f048 0808 	orr.w	r8, r8, #8
1a00314e:	f89a 6000 	ldrb.w	r6, [sl]
1a003152:	e403      	b.n	1a00295c <_vfprintf_r+0xfc>
1a003154:	f048 0310 	orr.w	r3, r8, #16
1a003158:	069f      	lsls	r7, r3, #26
1a00315a:	f53f acd1 	bmi.w	1a002b00 <_vfprintf_r+0x2a0>
1a00315e:	9908      	ldr	r1, [sp, #32]
1a003160:	06dd      	lsls	r5, r3, #27
1a003162:	f101 0204 	add.w	r2, r1, #4
1a003166:	f100 82fd 	bmi.w	1a003764 <_vfprintf_r+0xf04>
1a00316a:	065c      	lsls	r4, r3, #25
1a00316c:	9908      	ldr	r1, [sp, #32]
1a00316e:	f100 8475 	bmi.w	1a003a5c <_vfprintf_r+0x11fc>
1a003172:	0598      	lsls	r0, r3, #22
1a003174:	f140 82f6 	bpl.w	1a003764 <_vfprintf_r+0xf04>
1a003178:	f991 4000 	ldrsb.w	r4, [r1]
1a00317c:	9208      	str	r2, [sp, #32]
1a00317e:	17e5      	asrs	r5, r4, #31
1a003180:	4620      	mov	r0, r4
1a003182:	4629      	mov	r1, r5
1a003184:	e4c7      	b.n	1a002b16 <_vfprintf_r+0x2b6>
1a003186:	9a08      	ldr	r2, [sp, #32]
1a003188:	f018 0f10 	tst.w	r8, #16
1a00318c:	f102 0304 	add.w	r3, r2, #4
1a003190:	f040 82e3 	bne.w	1a00375a <_vfprintf_r+0xefa>
1a003194:	f018 0f40 	tst.w	r8, #64	; 0x40
1a003198:	9a08      	ldr	r2, [sp, #32]
1a00319a:	f040 8467 	bne.w	1a003a6c <_vfprintf_r+0x120c>
1a00319e:	f418 7f00 	tst.w	r8, #512	; 0x200
1a0031a2:	f000 82da 	beq.w	1a00375a <_vfprintf_r+0xefa>
1a0031a6:	7814      	ldrb	r4, [r2, #0]
1a0031a8:	9308      	str	r3, [sp, #32]
1a0031aa:	2500      	movs	r5, #0
1a0031ac:	e488      	b.n	1a002ac0 <_vfprintf_r+0x260>
1a0031ae:	f8d9 0058 	ldr.w	r0, [r9, #88]	; 0x58
1a0031b2:	f002 fd1b 	bl	1a005bec <__retarget_lock_release_recursive>
1a0031b6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
1a0031ba:	9305      	str	r3, [sp, #20]
1a0031bc:	e443      	b.n	1a002a46 <_vfprintf_r+0x1e6>
1a0031be:	2e00      	cmp	r6, #0
1a0031c0:	f43f adf8 	beq.w	1a002db4 <_vfprintf_r+0x554>
1a0031c4:	2300      	movs	r3, #0
1a0031c6:	2101      	movs	r1, #1
1a0031c8:	461a      	mov	r2, r3
1a0031ca:	9104      	str	r1, [sp, #16]
1a0031cc:	f88d 60f4 	strb.w	r6, [sp, #244]	; 0xf4
1a0031d0:	f88d 308b 	strb.w	r3, [sp, #139]	; 0x8b
1a0031d4:	930a      	str	r3, [sp, #40]	; 0x28
1a0031d6:	4699      	mov	r9, r3
1a0031d8:	930f      	str	r3, [sp, #60]	; 0x3c
1a0031da:	9314      	str	r3, [sp, #80]	; 0x50
1a0031dc:	9311      	str	r3, [sp, #68]	; 0x44
1a0031de:	9109      	str	r1, [sp, #36]	; 0x24
1a0031e0:	af3d      	add	r7, sp, #244	; 0xf4
1a0031e2:	e4ce      	b.n	1a002b82 <_vfprintf_r+0x322>
1a0031e4:	2e65      	cmp	r6, #101	; 0x65
1a0031e6:	f340 80ca 	ble.w	1a00337e <_vfprintf_r+0xb1e>
1a0031ea:	2200      	movs	r2, #0
1a0031ec:	2300      	movs	r3, #0
1a0031ee:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
1a0031f2:	f004 f8ab 	bl	1a00734c <__aeabi_dcmpeq>
1a0031f6:	2800      	cmp	r0, #0
1a0031f8:	f000 8169 	beq.w	1a0034ce <_vfprintf_r+0xc6e>
1a0031fc:	9b2b      	ldr	r3, [sp, #172]	; 0xac
1a0031fe:	4a22      	ldr	r2, [pc, #136]	; (1a003288 <_vfprintf_r+0xa28>)
1a003200:	f8cb 2000 	str.w	r2, [fp]
1a003204:	3301      	adds	r3, #1
1a003206:	3401      	adds	r4, #1
1a003208:	2201      	movs	r2, #1
1a00320a:	2b07      	cmp	r3, #7
1a00320c:	e9cd 342b 	strd	r3, r4, [sp, #172]	; 0xac
1a003210:	f8cb 2004 	str.w	r2, [fp, #4]
1a003214:	f300 8406 	bgt.w	1a003a24 <_vfprintf_r+0x11c4>
1a003218:	f10b 0b08 	add.w	fp, fp, #8
1a00321c:	9b24      	ldr	r3, [sp, #144]	; 0x90
1a00321e:	9a10      	ldr	r2, [sp, #64]	; 0x40
1a003220:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
1a003222:	4293      	cmp	r3, r2
1a003224:	db03      	blt.n	1a00322e <_vfprintf_r+0x9ce>
1a003226:	f018 0f01 	tst.w	r8, #1
1a00322a:	f43f ad6a 	beq.w	1a002d02 <_vfprintf_r+0x4a2>
1a00322e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
1a003230:	9a16      	ldr	r2, [sp, #88]	; 0x58
1a003232:	f8cb 2000 	str.w	r2, [fp]
1a003236:	9a15      	ldr	r2, [sp, #84]	; 0x54
1a003238:	f8cb 2004 	str.w	r2, [fp, #4]
1a00323c:	3301      	adds	r3, #1
1a00323e:	4414      	add	r4, r2
1a003240:	2b07      	cmp	r3, #7
1a003242:	e9cd 342b 	strd	r3, r4, [sp, #172]	; 0xac
1a003246:	f300 8517 	bgt.w	1a003c78 <_vfprintf_r+0x1418>
1a00324a:	f10b 0b08 	add.w	fp, fp, #8
1a00324e:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a003250:	1e5d      	subs	r5, r3, #1
1a003252:	2d00      	cmp	r5, #0
1a003254:	f77f ad55 	ble.w	1a002d02 <_vfprintf_r+0x4a2>
1a003258:	2d10      	cmp	r5, #16
1a00325a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
1a00325c:	4b0b      	ldr	r3, [pc, #44]	; (1a00328c <_vfprintf_r+0xa2c>)
1a00325e:	f340 82e7 	ble.w	1a003830 <_vfprintf_r+0xfd0>
1a003262:	4619      	mov	r1, r3
1a003264:	2610      	movs	r6, #16
1a003266:	4623      	mov	r3, r4
1a003268:	9f03      	ldr	r7, [sp, #12]
1a00326a:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a00326e:	460c      	mov	r4, r1
1a003270:	e014      	b.n	1a00329c <_vfprintf_r+0xa3c>
1a003272:	bf00      	nop
1a003274:	7fefffff 	.word	0x7fefffff
1a003278:	1a007848 	.word	0x1a007848
1a00327c:	1a007844 	.word	0x1a007844
1a003280:	1a007868 	.word	0x1a007868
1a003284:	1a007854 	.word	0x1a007854
1a003288:	1a007884 	.word	0x1a007884
1a00328c:	1a007898 	.word	0x1a007898
1a003290:	f10b 0b08 	add.w	fp, fp, #8
1a003294:	3d10      	subs	r5, #16
1a003296:	2d10      	cmp	r5, #16
1a003298:	f340 82c7 	ble.w	1a00382a <_vfprintf_r+0xfca>
1a00329c:	3201      	adds	r2, #1
1a00329e:	3310      	adds	r3, #16
1a0032a0:	2a07      	cmp	r2, #7
1a0032a2:	e9cd 232b 	strd	r2, r3, [sp, #172]	; 0xac
1a0032a6:	e9cb 4600 	strd	r4, r6, [fp]
1a0032aa:	ddf1      	ble.n	1a003290 <_vfprintf_r+0xa30>
1a0032ac:	aa2a      	add	r2, sp, #168	; 0xa8
1a0032ae:	4649      	mov	r1, r9
1a0032b0:	4638      	mov	r0, r7
1a0032b2:	f003 fe1b 	bl	1a006eec <__sprint_r>
1a0032b6:	2800      	cmp	r0, #0
1a0032b8:	d14c      	bne.n	1a003354 <_vfprintf_r+0xaf4>
1a0032ba:	e9dd 232b 	ldrd	r2, r3, [sp, #172]	; 0xac
1a0032be:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a0032c2:	e7e7      	b.n	1a003294 <_vfprintf_r+0xa34>
1a0032c4:	9b06      	ldr	r3, [sp, #24]
1a0032c6:	9a04      	ldr	r2, [sp, #16]
1a0032c8:	1a9d      	subs	r5, r3, r2
1a0032ca:	2d00      	cmp	r5, #0
1a0032cc:	f77f acc9 	ble.w	1a002c62 <_vfprintf_r+0x402>
1a0032d0:	2d10      	cmp	r5, #16
1a0032d2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
1a0032d4:	4bbc      	ldr	r3, [pc, #752]	; (1a0035c8 <_vfprintf_r+0xd68>)
1a0032d6:	dd27      	ble.n	1a003328 <_vfprintf_r+0xac8>
1a0032d8:	4659      	mov	r1, fp
1a0032da:	4620      	mov	r0, r4
1a0032dc:	46bb      	mov	fp, r7
1a0032de:	461c      	mov	r4, r3
1a0032e0:	4637      	mov	r7, r6
1a0032e2:	9e07      	ldr	r6, [sp, #28]
1a0032e4:	e004      	b.n	1a0032f0 <_vfprintf_r+0xa90>
1a0032e6:	3d10      	subs	r5, #16
1a0032e8:	2d10      	cmp	r5, #16
1a0032ea:	f101 0108 	add.w	r1, r1, #8
1a0032ee:	dd16      	ble.n	1a00331e <_vfprintf_r+0xabe>
1a0032f0:	3201      	adds	r2, #1
1a0032f2:	3010      	adds	r0, #16
1a0032f4:	2310      	movs	r3, #16
1a0032f6:	2a07      	cmp	r2, #7
1a0032f8:	e9cd 202b 	strd	r2, r0, [sp, #172]	; 0xac
1a0032fc:	600c      	str	r4, [r1, #0]
1a0032fe:	604b      	str	r3, [r1, #4]
1a003300:	ddf1      	ble.n	1a0032e6 <_vfprintf_r+0xa86>
1a003302:	aa2a      	add	r2, sp, #168	; 0xa8
1a003304:	4631      	mov	r1, r6
1a003306:	9803      	ldr	r0, [sp, #12]
1a003308:	f003 fdf0 	bl	1a006eec <__sprint_r>
1a00330c:	2800      	cmp	r0, #0
1a00330e:	f040 80a8 	bne.w	1a003462 <_vfprintf_r+0xc02>
1a003312:	3d10      	subs	r5, #16
1a003314:	2d10      	cmp	r5, #16
1a003316:	e9dd 202b 	ldrd	r2, r0, [sp, #172]	; 0xac
1a00331a:	a92d      	add	r1, sp, #180	; 0xb4
1a00331c:	dce8      	bgt.n	1a0032f0 <_vfprintf_r+0xa90>
1a00331e:	463e      	mov	r6, r7
1a003320:	4623      	mov	r3, r4
1a003322:	465f      	mov	r7, fp
1a003324:	4604      	mov	r4, r0
1a003326:	468b      	mov	fp, r1
1a003328:	3201      	adds	r2, #1
1a00332a:	442c      	add	r4, r5
1a00332c:	2a07      	cmp	r2, #7
1a00332e:	e9cd 242b 	strd	r2, r4, [sp, #172]	; 0xac
1a003332:	e9cb 3500 	strd	r3, r5, [fp]
1a003336:	f300 8292 	bgt.w	1a00385e <_vfprintf_r+0xffe>
1a00333a:	f10b 0b08 	add.w	fp, fp, #8
1a00333e:	e490      	b.n	1a002c62 <_vfprintf_r+0x402>
1a003340:	aa2a      	add	r2, sp, #168	; 0xa8
1a003342:	9907      	ldr	r1, [sp, #28]
1a003344:	9803      	ldr	r0, [sp, #12]
1a003346:	f003 fdd1 	bl	1a006eec <__sprint_r>
1a00334a:	2800      	cmp	r0, #0
1a00334c:	f43f ad23 	beq.w	1a002d96 <_vfprintf_r+0x536>
1a003350:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a003354:	990a      	ldr	r1, [sp, #40]	; 0x28
1a003356:	b111      	cbz	r1, 1a00335e <_vfprintf_r+0xafe>
1a003358:	9803      	ldr	r0, [sp, #12]
1a00335a:	f002 f997 	bl	1a00568c <_free_r>
1a00335e:	f8d9 2064 	ldr.w	r2, [r9, #100]	; 0x64
1a003362:	f8b9 300c 	ldrh.w	r3, [r9, #12]
1a003366:	07d0      	lsls	r0, r2, #31
1a003368:	d402      	bmi.n	1a003370 <_vfprintf_r+0xb10>
1a00336a:	0599      	lsls	r1, r3, #22
1a00336c:	f140 81d0 	bpl.w	1a003710 <_vfprintf_r+0xeb0>
1a003370:	065a      	lsls	r2, r3, #25
1a003372:	f53f ab65 	bmi.w	1a002a40 <_vfprintf_r+0x1e0>
1a003376:	9805      	ldr	r0, [sp, #20]
1a003378:	b057      	add	sp, #348	; 0x15c
1a00337a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a00337e:	9a10      	ldr	r2, [sp, #64]	; 0x40
1a003380:	9b2b      	ldr	r3, [sp, #172]	; 0xac
1a003382:	2a01      	cmp	r2, #1
1a003384:	f104 0401 	add.w	r4, r4, #1
1a003388:	f103 0501 	add.w	r5, r3, #1
1a00338c:	f10b 0608 	add.w	r6, fp, #8
1a003390:	f340 811c 	ble.w	1a0035cc <_vfprintf_r+0xd6c>
1a003394:	2301      	movs	r3, #1
1a003396:	2d07      	cmp	r5, #7
1a003398:	f8cb 7000 	str.w	r7, [fp]
1a00339c:	e9cd 542b 	strd	r5, r4, [sp, #172]	; 0xac
1a0033a0:	f8cb 3004 	str.w	r3, [fp, #4]
1a0033a4:	f300 81bb 	bgt.w	1a00371e <_vfprintf_r+0xebe>
1a0033a8:	9b15      	ldr	r3, [sp, #84]	; 0x54
1a0033aa:	9a16      	ldr	r2, [sp, #88]	; 0x58
1a0033ac:	1c69      	adds	r1, r5, #1
1a0033ae:	441c      	add	r4, r3
1a0033b0:	2907      	cmp	r1, #7
1a0033b2:	910b      	str	r1, [sp, #44]	; 0x2c
1a0033b4:	e9cd 142b 	strd	r1, r4, [sp, #172]	; 0xac
1a0033b8:	e9c6 2300 	strd	r2, r3, [r6]
1a0033bc:	f300 81bb 	bgt.w	1a003736 <_vfprintf_r+0xed6>
1a0033c0:	3608      	adds	r6, #8
1a0033c2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
1a0033c4:	1c53      	adds	r3, r2, #1
1a0033c6:	461d      	mov	r5, r3
1a0033c8:	9509      	str	r5, [sp, #36]	; 0x24
1a0033ca:	9d10      	ldr	r5, [sp, #64]	; 0x40
1a0033cc:	930e      	str	r3, [sp, #56]	; 0x38
1a0033ce:	2200      	movs	r2, #0
1a0033d0:	2300      	movs	r3, #0
1a0033d2:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
1a0033d6:	f105 39ff 	add.w	r9, r5, #4294967295	; 0xffffffff
1a0033da:	f106 0b08 	add.w	fp, r6, #8
1a0033de:	f003 ffb5 	bl	1a00734c <__aeabi_dcmpeq>
1a0033e2:	2800      	cmp	r0, #0
1a0033e4:	f040 80c2 	bne.w	1a00356c <_vfprintf_r+0xd0c>
1a0033e8:	9d09      	ldr	r5, [sp, #36]	; 0x24
1a0033ea:	f8c6 9004 	str.w	r9, [r6, #4]
1a0033ee:	3701      	adds	r7, #1
1a0033f0:	444c      	add	r4, r9
1a0033f2:	2d07      	cmp	r5, #7
1a0033f4:	6037      	str	r7, [r6, #0]
1a0033f6:	942c      	str	r4, [sp, #176]	; 0xb0
1a0033f8:	952b      	str	r5, [sp, #172]	; 0xac
1a0033fa:	f300 80f9 	bgt.w	1a0035f0 <_vfprintf_r+0xd90>
1a0033fe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
1a003400:	f106 0310 	add.w	r3, r6, #16
1a003404:	3202      	adds	r2, #2
1a003406:	465e      	mov	r6, fp
1a003408:	9209      	str	r2, [sp, #36]	; 0x24
1a00340a:	469b      	mov	fp, r3
1a00340c:	9a19      	ldr	r2, [sp, #100]	; 0x64
1a00340e:	6072      	str	r2, [r6, #4]
1a003410:	4414      	add	r4, r2
1a003412:	9a09      	ldr	r2, [sp, #36]	; 0x24
1a003414:	942c      	str	r4, [sp, #176]	; 0xb0
1a003416:	ab26      	add	r3, sp, #152	; 0x98
1a003418:	2a07      	cmp	r2, #7
1a00341a:	922b      	str	r2, [sp, #172]	; 0xac
1a00341c:	6033      	str	r3, [r6, #0]
1a00341e:	f77f ac70 	ble.w	1a002d02 <_vfprintf_r+0x4a2>
1a003422:	aa2a      	add	r2, sp, #168	; 0xa8
1a003424:	9907      	ldr	r1, [sp, #28]
1a003426:	9803      	ldr	r0, [sp, #12]
1a003428:	f003 fd60 	bl	1a006eec <__sprint_r>
1a00342c:	2800      	cmp	r0, #0
1a00342e:	d18f      	bne.n	1a003350 <_vfprintf_r+0xaf0>
1a003430:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
1a003432:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a003436:	e464      	b.n	1a002d02 <_vfprintf_r+0x4a2>
1a003438:	9817      	ldr	r0, [sp, #92]	; 0x5c
1a00343a:	af56      	add	r7, sp, #344	; 0x158
1a00343c:	0923      	lsrs	r3, r4, #4
1a00343e:	f004 010f 	and.w	r1, r4, #15
1a003442:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
1a003446:	092a      	lsrs	r2, r5, #4
1a003448:	461c      	mov	r4, r3
1a00344a:	4615      	mov	r5, r2
1a00344c:	5c43      	ldrb	r3, [r0, r1]
1a00344e:	f807 3d01 	strb.w	r3, [r7, #-1]!
1a003452:	ea54 0305 	orrs.w	r3, r4, r5
1a003456:	d1f1      	bne.n	1a00343c <_vfprintf_r+0xbdc>
1a003458:	9b04      	ldr	r3, [sp, #16]
1a00345a:	1bdb      	subs	r3, r3, r7
1a00345c:	9309      	str	r3, [sp, #36]	; 0x24
1a00345e:	f7ff bb80 	b.w	1a002b62 <_vfprintf_r+0x302>
1a003462:	46b1      	mov	r9, r6
1a003464:	e776      	b.n	1a003354 <_vfprintf_r+0xaf4>
1a003466:	aa2a      	add	r2, sp, #168	; 0xa8
1a003468:	9907      	ldr	r1, [sp, #28]
1a00346a:	9803      	ldr	r0, [sp, #12]
1a00346c:	f003 fd3e 	bl	1a006eec <__sprint_r>
1a003470:	2800      	cmp	r0, #0
1a003472:	f47f af6d 	bne.w	1a003350 <_vfprintf_r+0xaf0>
1a003476:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
1a003478:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a00347c:	f7ff bbdd 	b.w	1a002c3a <_vfprintf_r+0x3da>
1a003480:	aa2a      	add	r2, sp, #168	; 0xa8
1a003482:	9907      	ldr	r1, [sp, #28]
1a003484:	9803      	ldr	r0, [sp, #12]
1a003486:	f003 fd31 	bl	1a006eec <__sprint_r>
1a00348a:	2800      	cmp	r0, #0
1a00348c:	f47f af60 	bne.w	1a003350 <_vfprintf_r+0xaf0>
1a003490:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
1a003492:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a003496:	f7ff bbe0 	b.w	1a002c5a <_vfprintf_r+0x3fa>
1a00349a:	4698      	mov	r8, r3
1a00349c:	2d00      	cmp	r5, #0
1a00349e:	bf08      	it	eq
1a0034a0:	2c0a      	cmpeq	r4, #10
1a0034a2:	f080 8170 	bcs.w	1a003786 <_vfprintf_r+0xf26>
1a0034a6:	af56      	add	r7, sp, #344	; 0x158
1a0034a8:	3430      	adds	r4, #48	; 0x30
1a0034aa:	2301      	movs	r3, #1
1a0034ac:	f807 4d01 	strb.w	r4, [r7, #-1]!
1a0034b0:	9309      	str	r3, [sp, #36]	; 0x24
1a0034b2:	f7ff bb56 	b.w	1a002b62 <_vfprintf_r+0x302>
1a0034b6:	aa2a      	add	r2, sp, #168	; 0xa8
1a0034b8:	9907      	ldr	r1, [sp, #28]
1a0034ba:	9803      	ldr	r0, [sp, #12]
1a0034bc:	f003 fd16 	bl	1a006eec <__sprint_r>
1a0034c0:	2800      	cmp	r0, #0
1a0034c2:	f47f af45 	bne.w	1a003350 <_vfprintf_r+0xaf0>
1a0034c6:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
1a0034c8:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a0034cc:	e406      	b.n	1a002cdc <_vfprintf_r+0x47c>
1a0034ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
1a0034d0:	2b00      	cmp	r3, #0
1a0034d2:	f340 8273 	ble.w	1a0039bc <_vfprintf_r+0x115c>
1a0034d6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
1a0034da:	4293      	cmp	r3, r2
1a0034dc:	bfa8      	it	ge
1a0034de:	4613      	movge	r3, r2
1a0034e0:	2b00      	cmp	r3, #0
1a0034e2:	461d      	mov	r5, r3
1a0034e4:	dd0d      	ble.n	1a003502 <_vfprintf_r+0xca2>
1a0034e6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
1a0034e8:	f8cb 7000 	str.w	r7, [fp]
1a0034ec:	3301      	adds	r3, #1
1a0034ee:	442c      	add	r4, r5
1a0034f0:	2b07      	cmp	r3, #7
1a0034f2:	942c      	str	r4, [sp, #176]	; 0xb0
1a0034f4:	f8cb 5004 	str.w	r5, [fp, #4]
1a0034f8:	932b      	str	r3, [sp, #172]	; 0xac
1a0034fa:	f300 82c1 	bgt.w	1a003a80 <_vfprintf_r+0x1220>
1a0034fe:	f10b 0b08 	add.w	fp, fp, #8
1a003502:	9b11      	ldr	r3, [sp, #68]	; 0x44
1a003504:	2d00      	cmp	r5, #0
1a003506:	bfa8      	it	ge
1a003508:	1b5b      	subge	r3, r3, r5
1a00350a:	2b00      	cmp	r3, #0
1a00350c:	461d      	mov	r5, r3
1a00350e:	f340 8099 	ble.w	1a003644 <_vfprintf_r+0xde4>
1a003512:	2d10      	cmp	r5, #16
1a003514:	9a2b      	ldr	r2, [sp, #172]	; 0xac
1a003516:	4b2c      	ldr	r3, [pc, #176]	; (1a0035c8 <_vfprintf_r+0xd68>)
1a003518:	f340 83db 	ble.w	1a003cd2 <_vfprintf_r+0x1472>
1a00351c:	4618      	mov	r0, r3
1a00351e:	4621      	mov	r1, r4
1a003520:	465b      	mov	r3, fp
1a003522:	2610      	movs	r6, #16
1a003524:	46bb      	mov	fp, r7
1a003526:	f8dd 900c 	ldr.w	r9, [sp, #12]
1a00352a:	9c07      	ldr	r4, [sp, #28]
1a00352c:	4607      	mov	r7, r0
1a00352e:	e004      	b.n	1a00353a <_vfprintf_r+0xcda>
1a003530:	3308      	adds	r3, #8
1a003532:	3d10      	subs	r5, #16
1a003534:	2d10      	cmp	r5, #16
1a003536:	f340 83c7 	ble.w	1a003cc8 <_vfprintf_r+0x1468>
1a00353a:	3201      	adds	r2, #1
1a00353c:	3110      	adds	r1, #16
1a00353e:	2a07      	cmp	r2, #7
1a003540:	e9cd 212b 	strd	r2, r1, [sp, #172]	; 0xac
1a003544:	e9c3 7600 	strd	r7, r6, [r3]
1a003548:	ddf2      	ble.n	1a003530 <_vfprintf_r+0xcd0>
1a00354a:	aa2a      	add	r2, sp, #168	; 0xa8
1a00354c:	4621      	mov	r1, r4
1a00354e:	4648      	mov	r0, r9
1a003550:	f003 fccc 	bl	1a006eec <__sprint_r>
1a003554:	2800      	cmp	r0, #0
1a003556:	f040 84a5 	bne.w	1a003ea4 <_vfprintf_r+0x1644>
1a00355a:	e9dd 212b 	ldrd	r2, r1, [sp, #172]	; 0xac
1a00355e:	ab2d      	add	r3, sp, #180	; 0xb4
1a003560:	e7e7      	b.n	1a003532 <_vfprintf_r+0xcd2>
1a003562:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
1a003566:	af56      	add	r7, sp, #344	; 0x158
1a003568:	f7ff bafb 	b.w	1a002b62 <_vfprintf_r+0x302>
1a00356c:	f1b9 0f00 	cmp.w	r9, #0
1a003570:	f77f af4c 	ble.w	1a00340c <_vfprintf_r+0xbac>
1a003574:	f1b9 0f10 	cmp.w	r9, #16
1a003578:	4b13      	ldr	r3, [pc, #76]	; (1a0035c8 <_vfprintf_r+0xd68>)
1a00357a:	f340 8659 	ble.w	1a004230 <_vfprintf_r+0x19d0>
1a00357e:	4619      	mov	r1, r3
1a003580:	4622      	mov	r2, r4
1a003582:	4633      	mov	r3, r6
1a003584:	2710      	movs	r7, #16
1a003586:	f8dd b00c 	ldr.w	fp, [sp, #12]
1a00358a:	9c07      	ldr	r4, [sp, #28]
1a00358c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
1a00358e:	460e      	mov	r6, r1
1a003590:	e007      	b.n	1a0035a2 <_vfprintf_r+0xd42>
1a003592:	3308      	adds	r3, #8
1a003594:	f1a9 0910 	sub.w	r9, r9, #16
1a003598:	f1b9 0f10 	cmp.w	r9, #16
1a00359c:	f340 8353 	ble.w	1a003c46 <_vfprintf_r+0x13e6>
1a0035a0:	3501      	adds	r5, #1
1a0035a2:	3210      	adds	r2, #16
1a0035a4:	2d07      	cmp	r5, #7
1a0035a6:	e9cd 522b 	strd	r5, r2, [sp, #172]	; 0xac
1a0035aa:	e9c3 6700 	strd	r6, r7, [r3]
1a0035ae:	ddf0      	ble.n	1a003592 <_vfprintf_r+0xd32>
1a0035b0:	aa2a      	add	r2, sp, #168	; 0xa8
1a0035b2:	4621      	mov	r1, r4
1a0035b4:	4658      	mov	r0, fp
1a0035b6:	f003 fc99 	bl	1a006eec <__sprint_r>
1a0035ba:	2800      	cmp	r0, #0
1a0035bc:	f040 8472 	bne.w	1a003ea4 <_vfprintf_r+0x1644>
1a0035c0:	e9dd 522b 	ldrd	r5, r2, [sp, #172]	; 0xac
1a0035c4:	ab2d      	add	r3, sp, #180	; 0xb4
1a0035c6:	e7e5      	b.n	1a003594 <_vfprintf_r+0xd34>
1a0035c8:	1a007898 	.word	0x1a007898
1a0035cc:	f018 0f01 	tst.w	r8, #1
1a0035d0:	f47f aee0 	bne.w	1a003394 <_vfprintf_r+0xb34>
1a0035d4:	2201      	movs	r2, #1
1a0035d6:	2d07      	cmp	r5, #7
1a0035d8:	f8cb 7000 	str.w	r7, [fp]
1a0035dc:	e9cd 542b 	strd	r5, r4, [sp, #172]	; 0xac
1a0035e0:	f8cb 2004 	str.w	r2, [fp, #4]
1a0035e4:	dc04      	bgt.n	1a0035f0 <_vfprintf_r+0xd90>
1a0035e6:	3302      	adds	r3, #2
1a0035e8:	9309      	str	r3, [sp, #36]	; 0x24
1a0035ea:	f10b 0b10 	add.w	fp, fp, #16
1a0035ee:	e70d      	b.n	1a00340c <_vfprintf_r+0xbac>
1a0035f0:	aa2a      	add	r2, sp, #168	; 0xa8
1a0035f2:	9907      	ldr	r1, [sp, #28]
1a0035f4:	9803      	ldr	r0, [sp, #12]
1a0035f6:	f003 fc79 	bl	1a006eec <__sprint_r>
1a0035fa:	2800      	cmp	r0, #0
1a0035fc:	f47f aea8 	bne.w	1a003350 <_vfprintf_r+0xaf0>
1a003600:	e9dd 342b 	ldrd	r3, r4, [sp, #172]	; 0xac
1a003604:	3301      	adds	r3, #1
1a003606:	9309      	str	r3, [sp, #36]	; 0x24
1a003608:	f10d 0bbc 	add.w	fp, sp, #188	; 0xbc
1a00360c:	ae2d      	add	r6, sp, #180	; 0xb4
1a00360e:	e6fd      	b.n	1a00340c <_vfprintf_r+0xbac>
1a003610:	aa2a      	add	r2, sp, #168	; 0xa8
1a003612:	9907      	ldr	r1, [sp, #28]
1a003614:	9803      	ldr	r0, [sp, #12]
1a003616:	f003 fc69 	bl	1a006eec <__sprint_r>
1a00361a:	2800      	cmp	r0, #0
1a00361c:	f47f ae98 	bne.w	1a003350 <_vfprintf_r+0xaf0>
1a003620:	f89d 208b 	ldrb.w	r2, [sp, #139]	; 0x8b
1a003624:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
1a003626:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a00362a:	f7ff baf6 	b.w	1a002c1a <_vfprintf_r+0x3ba>
1a00362e:	aa2a      	add	r2, sp, #168	; 0xa8
1a003630:	9907      	ldr	r1, [sp, #28]
1a003632:	9803      	ldr	r0, [sp, #12]
1a003634:	f003 fc5a 	bl	1a006eec <__sprint_r>
1a003638:	2800      	cmp	r0, #0
1a00363a:	f47f ae89 	bne.w	1a003350 <_vfprintf_r+0xaf0>
1a00363e:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
1a003640:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a003644:	9b11      	ldr	r3, [sp, #68]	; 0x44
1a003646:	f418 6f80 	tst.w	r8, #1024	; 0x400
1a00364a:	443b      	add	r3, r7
1a00364c:	4699      	mov	r9, r3
1a00364e:	f040 8357 	bne.w	1a003d00 <_vfprintf_r+0x14a0>
1a003652:	9b24      	ldr	r3, [sp, #144]	; 0x90
1a003654:	9a10      	ldr	r2, [sp, #64]	; 0x40
1a003656:	4293      	cmp	r3, r2
1a003658:	db49      	blt.n	1a0036ee <_vfprintf_r+0xe8e>
1a00365a:	f018 0f01 	tst.w	r8, #1
1a00365e:	d146      	bne.n	1a0036ee <_vfprintf_r+0xe8e>
1a003660:	9a10      	ldr	r2, [sp, #64]	; 0x40
1a003662:	18bd      	adds	r5, r7, r2
1a003664:	eba5 0509 	sub.w	r5, r5, r9
1a003668:	1ad3      	subs	r3, r2, r3
1a00366a:	429d      	cmp	r5, r3
1a00366c:	bfa8      	it	ge
1a00366e:	461d      	movge	r5, r3
1a003670:	2d00      	cmp	r5, #0
1a003672:	dd0d      	ble.n	1a003690 <_vfprintf_r+0xe30>
1a003674:	9a2b      	ldr	r2, [sp, #172]	; 0xac
1a003676:	f8cb 9000 	str.w	r9, [fp]
1a00367a:	3201      	adds	r2, #1
1a00367c:	442c      	add	r4, r5
1a00367e:	2a07      	cmp	r2, #7
1a003680:	942c      	str	r4, [sp, #176]	; 0xb0
1a003682:	f8cb 5004 	str.w	r5, [fp, #4]
1a003686:	922b      	str	r2, [sp, #172]	; 0xac
1a003688:	f300 8462 	bgt.w	1a003f50 <_vfprintf_r+0x16f0>
1a00368c:	f10b 0b08 	add.w	fp, fp, #8
1a003690:	2d00      	cmp	r5, #0
1a003692:	bfac      	ite	ge
1a003694:	1b5d      	subge	r5, r3, r5
1a003696:	461d      	movlt	r5, r3
1a003698:	2d00      	cmp	r5, #0
1a00369a:	f77f ab32 	ble.w	1a002d02 <_vfprintf_r+0x4a2>
1a00369e:	2d10      	cmp	r5, #16
1a0036a0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
1a0036a2:	4bc5      	ldr	r3, [pc, #788]	; (1a0039b8 <_vfprintf_r+0x1158>)
1a0036a4:	f340 80c4 	ble.w	1a003830 <_vfprintf_r+0xfd0>
1a0036a8:	4619      	mov	r1, r3
1a0036aa:	2610      	movs	r6, #16
1a0036ac:	4623      	mov	r3, r4
1a0036ae:	9f03      	ldr	r7, [sp, #12]
1a0036b0:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a0036b4:	460c      	mov	r4, r1
1a0036b6:	e005      	b.n	1a0036c4 <_vfprintf_r+0xe64>
1a0036b8:	f10b 0b08 	add.w	fp, fp, #8
1a0036bc:	3d10      	subs	r5, #16
1a0036be:	2d10      	cmp	r5, #16
1a0036c0:	f340 80b3 	ble.w	1a00382a <_vfprintf_r+0xfca>
1a0036c4:	3201      	adds	r2, #1
1a0036c6:	3310      	adds	r3, #16
1a0036c8:	2a07      	cmp	r2, #7
1a0036ca:	e9cd 232b 	strd	r2, r3, [sp, #172]	; 0xac
1a0036ce:	e9cb 4600 	strd	r4, r6, [fp]
1a0036d2:	ddf1      	ble.n	1a0036b8 <_vfprintf_r+0xe58>
1a0036d4:	aa2a      	add	r2, sp, #168	; 0xa8
1a0036d6:	4649      	mov	r1, r9
1a0036d8:	4638      	mov	r0, r7
1a0036da:	f003 fc07 	bl	1a006eec <__sprint_r>
1a0036de:	2800      	cmp	r0, #0
1a0036e0:	f47f ae38 	bne.w	1a003354 <_vfprintf_r+0xaf4>
1a0036e4:	e9dd 232b 	ldrd	r2, r3, [sp, #172]	; 0xac
1a0036e8:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a0036ec:	e7e6      	b.n	1a0036bc <_vfprintf_r+0xe5c>
1a0036ee:	9a2b      	ldr	r2, [sp, #172]	; 0xac
1a0036f0:	9916      	ldr	r1, [sp, #88]	; 0x58
1a0036f2:	f8cb 1000 	str.w	r1, [fp]
1a0036f6:	9915      	ldr	r1, [sp, #84]	; 0x54
1a0036f8:	f8cb 1004 	str.w	r1, [fp, #4]
1a0036fc:	3201      	adds	r2, #1
1a0036fe:	440c      	add	r4, r1
1a003700:	2a07      	cmp	r2, #7
1a003702:	942c      	str	r4, [sp, #176]	; 0xb0
1a003704:	922b      	str	r2, [sp, #172]	; 0xac
1a003706:	f300 828c 	bgt.w	1a003c22 <_vfprintf_r+0x13c2>
1a00370a:	f10b 0b08 	add.w	fp, fp, #8
1a00370e:	e7a7      	b.n	1a003660 <_vfprintf_r+0xe00>
1a003710:	f8d9 0058 	ldr.w	r0, [r9, #88]	; 0x58
1a003714:	f002 fa6a 	bl	1a005bec <__retarget_lock_release_recursive>
1a003718:	f8b9 300c 	ldrh.w	r3, [r9, #12]
1a00371c:	e628      	b.n	1a003370 <_vfprintf_r+0xb10>
1a00371e:	aa2a      	add	r2, sp, #168	; 0xa8
1a003720:	9907      	ldr	r1, [sp, #28]
1a003722:	9803      	ldr	r0, [sp, #12]
1a003724:	f003 fbe2 	bl	1a006eec <__sprint_r>
1a003728:	2800      	cmp	r0, #0
1a00372a:	f47f ae11 	bne.w	1a003350 <_vfprintf_r+0xaf0>
1a00372e:	e9dd 542b 	ldrd	r5, r4, [sp, #172]	; 0xac
1a003732:	ae2d      	add	r6, sp, #180	; 0xb4
1a003734:	e638      	b.n	1a0033a8 <_vfprintf_r+0xb48>
1a003736:	aa2a      	add	r2, sp, #168	; 0xa8
1a003738:	9907      	ldr	r1, [sp, #28]
1a00373a:	9803      	ldr	r0, [sp, #12]
1a00373c:	f003 fbd6 	bl	1a006eec <__sprint_r>
1a003740:	2800      	cmp	r0, #0
1a003742:	f47f ae05 	bne.w	1a003350 <_vfprintf_r+0xaf0>
1a003746:	e9dd 342b 	ldrd	r3, r4, [sp, #172]	; 0xac
1a00374a:	ae2d      	add	r6, sp, #180	; 0xb4
1a00374c:	930b      	str	r3, [sp, #44]	; 0x2c
1a00374e:	e638      	b.n	1a0033c2 <_vfprintf_r+0xb62>
1a003750:	6814      	ldr	r4, [r2, #0]
1a003752:	9308      	str	r3, [sp, #32]
1a003754:	2500      	movs	r5, #0
1a003756:	f7ff bb95 	b.w	1a002e84 <_vfprintf_r+0x624>
1a00375a:	6814      	ldr	r4, [r2, #0]
1a00375c:	9308      	str	r3, [sp, #32]
1a00375e:	2500      	movs	r5, #0
1a003760:	f7ff b9ae 	b.w	1a002ac0 <_vfprintf_r+0x260>
1a003764:	680c      	ldr	r4, [r1, #0]
1a003766:	9208      	str	r2, [sp, #32]
1a003768:	17e5      	asrs	r5, r4, #31
1a00376a:	4620      	mov	r0, r4
1a00376c:	4629      	mov	r1, r5
1a00376e:	f7ff b9d2 	b.w	1a002b16 <_vfprintf_r+0x2b6>
1a003772:	6814      	ldr	r4, [r2, #0]
1a003774:	9108      	str	r1, [sp, #32]
1a003776:	2201      	movs	r2, #1
1a003778:	2500      	movs	r5, #0
1a00377a:	f7ff bb32 	b.w	1a002de2 <_vfprintf_r+0x582>
1a00377e:	2a01      	cmp	r2, #1
1a003780:	f47f ab3c 	bne.w	1a002dfc <_vfprintf_r+0x59c>
1a003784:	e68f      	b.n	1a0034a6 <_vfprintf_r+0xc46>
1a003786:	f408 6380 	and.w	r3, r8, #1024	; 0x400
1a00378a:	2200      	movs	r2, #0
1a00378c:	e9cd a609 	strd	sl, r6, [sp, #36]	; 0x24
1a003790:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
1a003794:	af56      	add	r7, sp, #344	; 0x158
1a003796:	4692      	mov	sl, r2
1a003798:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
1a00379c:	461e      	mov	r6, r3
1a00379e:	e00a      	b.n	1a0037b6 <_vfprintf_r+0xf56>
1a0037a0:	2300      	movs	r3, #0
1a0037a2:	4620      	mov	r0, r4
1a0037a4:	4629      	mov	r1, r5
1a0037a6:	220a      	movs	r2, #10
1a0037a8:	f7fe fcf6 	bl	1a002198 <__aeabi_uldivmod>
1a0037ac:	4604      	mov	r4, r0
1a0037ae:	460d      	mov	r5, r1
1a0037b0:	ea54 0305 	orrs.w	r3, r4, r5
1a0037b4:	d029      	beq.n	1a00380a <_vfprintf_r+0xfaa>
1a0037b6:	220a      	movs	r2, #10
1a0037b8:	2300      	movs	r3, #0
1a0037ba:	4620      	mov	r0, r4
1a0037bc:	4629      	mov	r1, r5
1a0037be:	f7fe fceb 	bl	1a002198 <__aeabi_uldivmod>
1a0037c2:	3230      	adds	r2, #48	; 0x30
1a0037c4:	f807 2c01 	strb.w	r2, [r7, #-1]
1a0037c8:	f10a 0a01 	add.w	sl, sl, #1
1a0037cc:	3f01      	subs	r7, #1
1a0037ce:	2e00      	cmp	r6, #0
1a0037d0:	d0e6      	beq.n	1a0037a0 <_vfprintf_r+0xf40>
1a0037d2:	f898 3000 	ldrb.w	r3, [r8]
1a0037d6:	459a      	cmp	sl, r3
1a0037d8:	d1e2      	bne.n	1a0037a0 <_vfprintf_r+0xf40>
1a0037da:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
1a0037de:	d0df      	beq.n	1a0037a0 <_vfprintf_r+0xf40>
1a0037e0:	2d00      	cmp	r5, #0
1a0037e2:	bf08      	it	eq
1a0037e4:	2c0a      	cmpeq	r4, #10
1a0037e6:	d3db      	bcc.n	1a0037a0 <_vfprintf_r+0xf40>
1a0037e8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
1a0037ea:	9918      	ldr	r1, [sp, #96]	; 0x60
1a0037ec:	1aff      	subs	r7, r7, r3
1a0037ee:	461a      	mov	r2, r3
1a0037f0:	4638      	mov	r0, r7
1a0037f2:	f003 fb0d 	bl	1a006e10 <strncpy>
1a0037f6:	f898 3001 	ldrb.w	r3, [r8, #1]
1a0037fa:	2b00      	cmp	r3, #0
1a0037fc:	f000 8496 	beq.w	1a00412c <_vfprintf_r+0x18cc>
1a003800:	f108 0801 	add.w	r8, r8, #1
1a003804:	f04f 0a00 	mov.w	sl, #0
1a003808:	e7ca      	b.n	1a0037a0 <_vfprintf_r+0xf40>
1a00380a:	9b04      	ldr	r3, [sp, #16]
1a00380c:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
1a003810:	1bdb      	subs	r3, r3, r7
1a003812:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
1a003816:	9e0a      	ldr	r6, [sp, #40]	; 0x28
1a003818:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
1a00381c:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
1a003820:	9309      	str	r3, [sp, #36]	; 0x24
1a003822:	f7ff b99e 	b.w	1a002b62 <_vfprintf_r+0x302>
1a003826:	46c1      	mov	r9, r8
1a003828:	e594      	b.n	1a003354 <_vfprintf_r+0xaf4>
1a00382a:	4621      	mov	r1, r4
1a00382c:	461c      	mov	r4, r3
1a00382e:	460b      	mov	r3, r1
1a003830:	3201      	adds	r2, #1
1a003832:	442c      	add	r4, r5
1a003834:	2a07      	cmp	r2, #7
1a003836:	e9cd 242b 	strd	r2, r4, [sp, #172]	; 0xac
1a00383a:	e9cb 3500 	strd	r3, r5, [fp]
1a00383e:	f77f aa5e 	ble.w	1a002cfe <_vfprintf_r+0x49e>
1a003842:	e5ee      	b.n	1a003422 <_vfprintf_r+0xbc2>
1a003844:	f018 0f10 	tst.w	r8, #16
1a003848:	f040 80f8 	bne.w	1a003a3c <_vfprintf_r+0x11dc>
1a00384c:	f018 0f40 	tst.w	r8, #64	; 0x40
1a003850:	f000 8351 	beq.w	1a003ef6 <_vfprintf_r+0x1696>
1a003854:	9a05      	ldr	r2, [sp, #20]
1a003856:	801a      	strh	r2, [r3, #0]
1a003858:	4657      	mov	r7, sl
1a00385a:	f7ff baa7 	b.w	1a002dac <_vfprintf_r+0x54c>
1a00385e:	aa2a      	add	r2, sp, #168	; 0xa8
1a003860:	9907      	ldr	r1, [sp, #28]
1a003862:	9803      	ldr	r0, [sp, #12]
1a003864:	f003 fb42 	bl	1a006eec <__sprint_r>
1a003868:	2800      	cmp	r0, #0
1a00386a:	f47f ad71 	bne.w	1a003350 <_vfprintf_r+0xaf0>
1a00386e:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
1a003870:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a003874:	f7ff b9f5 	b.w	1a002c62 <_vfprintf_r+0x402>
1a003878:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
1a00387c:	4602      	mov	r2, r0
1a00387e:	460b      	mov	r3, r1
1a003880:	f003 fd96 	bl	1a0073b0 <__aeabi_dcmpun>
1a003884:	2800      	cmp	r0, #0
1a003886:	f040 8491 	bne.w	1a0041ac <_vfprintf_r+0x194c>
1a00388a:	2e61      	cmp	r6, #97	; 0x61
1a00388c:	f000 8111 	beq.w	1a003ab2 <_vfprintf_r+0x1252>
1a003890:	2e41      	cmp	r6, #65	; 0x41
1a003892:	f000 8377 	beq.w	1a003f84 <_vfprintf_r+0x1724>
1a003896:	f448 7380 	orr.w	r3, r8, #256	; 0x100
1a00389a:	f026 0220 	bic.w	r2, r6, #32
1a00389e:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
1a0038a2:	930e      	str	r3, [sp, #56]	; 0x38
1a0038a4:	9204      	str	r2, [sp, #16]
1a0038a6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1a0038a8:	f000 842d 	beq.w	1a004106 <_vfprintf_r+0x18a6>
1a0038ac:	2a47      	cmp	r2, #71	; 0x47
1a0038ae:	f000 8424 	beq.w	1a0040fa <_vfprintf_r+0x189a>
1a0038b2:	2b00      	cmp	r3, #0
1a0038b4:	f2c0 82f9 	blt.w	1a003eaa <_vfprintf_r+0x164a>
1a0038b8:	ed9d 7b12 	vldr	d7, [sp, #72]	; 0x48
1a0038bc:	e9cd 000a 	strd	r0, r0, [sp, #40]	; 0x28
1a0038c0:	ed8d 7b1e 	vstr	d7, [sp, #120]	; 0x78
1a0038c4:	2e66      	cmp	r6, #102	; 0x66
1a0038c6:	f000 83eb 	beq.w	1a0040a0 <_vfprintf_r+0x1840>
1a0038ca:	2e46      	cmp	r6, #70	; 0x46
1a0038cc:	f000 847e 	beq.w	1a0041cc <_vfprintf_r+0x196c>
1a0038d0:	9b04      	ldr	r3, [sp, #16]
1a0038d2:	9803      	ldr	r0, [sp, #12]
1a0038d4:	2b45      	cmp	r3, #69	; 0x45
1a0038d6:	bf0c      	ite	eq
1a0038d8:	f109 0501 	addeq.w	r5, r9, #1
1a0038dc:	464d      	movne	r5, r9
1a0038de:	aa28      	add	r2, sp, #160	; 0xa0
1a0038e0:	ab25      	add	r3, sp, #148	; 0x94
1a0038e2:	e9cd 3200 	strd	r3, r2, [sp]
1a0038e6:	2102      	movs	r1, #2
1a0038e8:	ab24      	add	r3, sp, #144	; 0x90
1a0038ea:	462a      	mov	r2, r5
1a0038ec:	ed9d 0b1e 	vldr	d0, [sp, #120]	; 0x78
1a0038f0:	f000 fe2e 	bl	1a004550 <_dtoa_r>
1a0038f4:	2e67      	cmp	r6, #103	; 0x67
1a0038f6:	4607      	mov	r7, r0
1a0038f8:	f040 849c 	bne.w	1a004234 <_vfprintf_r+0x19d4>
1a0038fc:	f018 0f01 	tst.w	r8, #1
1a003900:	f040 83f9 	bne.w	1a0040f6 <_vfprintf_r+0x1896>
1a003904:	9b28      	ldr	r3, [sp, #160]	; 0xa0
1a003906:	4640      	mov	r0, r8
1a003908:	1bdb      	subs	r3, r3, r7
1a00390a:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
1a00390e:	9310      	str	r3, [sp, #64]	; 0x40
1a003910:	9b24      	ldr	r3, [sp, #144]	; 0x90
1a003912:	9311      	str	r3, [sp, #68]	; 0x44
1a003914:	9b04      	ldr	r3, [sp, #16]
1a003916:	2b47      	cmp	r3, #71	; 0x47
1a003918:	f000 81e7 	beq.w	1a003cea <_vfprintf_r+0x148a>
1a00391c:	9b04      	ldr	r3, [sp, #16]
1a00391e:	2b46      	cmp	r3, #70	; 0x46
1a003920:	f000 8300 	beq.w	1a003f24 <_vfprintf_r+0x16c4>
1a003924:	9904      	ldr	r1, [sp, #16]
1a003926:	9b11      	ldr	r3, [sp, #68]	; 0x44
1a003928:	b2f2      	uxtb	r2, r6
1a00392a:	2941      	cmp	r1, #65	; 0x41
1a00392c:	bf08      	it	eq
1a00392e:	320f      	addeq	r2, #15
1a003930:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
1a003934:	bf06      	itte	eq
1a003936:	b2d2      	uxtbeq	r2, r2
1a003938:	2101      	moveq	r1, #1
1a00393a:	2100      	movne	r1, #0
1a00393c:	2b00      	cmp	r3, #0
1a00393e:	9324      	str	r3, [sp, #144]	; 0x90
1a003940:	bfb8      	it	lt
1a003942:	9b11      	ldrlt	r3, [sp, #68]	; 0x44
1a003944:	f88d 2098 	strb.w	r2, [sp, #152]	; 0x98
1a003948:	bfba      	itte	lt
1a00394a:	f1c3 0301 	rsblt	r3, r3, #1
1a00394e:	222d      	movlt	r2, #45	; 0x2d
1a003950:	222b      	movge	r2, #43	; 0x2b
1a003952:	2b09      	cmp	r3, #9
1a003954:	f88d 2099 	strb.w	r2, [sp, #153]	; 0x99
1a003958:	f300 83f9 	bgt.w	1a00414e <_vfprintf_r+0x18ee>
1a00395c:	2900      	cmp	r1, #0
1a00395e:	f040 8487 	bne.w	1a004270 <_vfprintf_r+0x1a10>
1a003962:	2230      	movs	r2, #48	; 0x30
1a003964:	f88d 209a 	strb.w	r2, [sp, #154]	; 0x9a
1a003968:	f10d 029b 	add.w	r2, sp, #155	; 0x9b
1a00396c:	3330      	adds	r3, #48	; 0x30
1a00396e:	7013      	strb	r3, [r2, #0]
1a003970:	1c53      	adds	r3, r2, #1
1a003972:	aa26      	add	r2, sp, #152	; 0x98
1a003974:	1a9b      	subs	r3, r3, r2
1a003976:	9a10      	ldr	r2, [sp, #64]	; 0x40
1a003978:	9319      	str	r3, [sp, #100]	; 0x64
1a00397a:	2a01      	cmp	r2, #1
1a00397c:	4413      	add	r3, r2
1a00397e:	9309      	str	r3, [sp, #36]	; 0x24
1a003980:	f340 8442 	ble.w	1a004208 <_vfprintf_r+0x19a8>
1a003984:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a003986:	9a15      	ldr	r2, [sp, #84]	; 0x54
1a003988:	4413      	add	r3, r2
1a00398a:	9309      	str	r3, [sp, #36]	; 0x24
1a00398c:	2300      	movs	r3, #0
1a00398e:	930f      	str	r3, [sp, #60]	; 0x3c
1a003990:	9314      	str	r3, [sp, #80]	; 0x50
1a003992:	9311      	str	r3, [sp, #68]	; 0x44
1a003994:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a003996:	f420 6080 	bic.w	r0, r0, #1024	; 0x400
1a00399a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
1a00399e:	f440 7880 	orr.w	r8, r0, #256	; 0x100
1a0039a2:	9304      	str	r3, [sp, #16]
1a0039a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a0039a6:	2b00      	cmp	r3, #0
1a0039a8:	f040 8275 	bne.w	1a003e96 <_vfprintf_r+0x1636>
1a0039ac:	4699      	mov	r9, r3
1a0039ae:	f89d 208b 	ldrb.w	r2, [sp, #139]	; 0x8b
1a0039b2:	f7ff b8e2 	b.w	1a002b7a <_vfprintf_r+0x31a>
1a0039b6:	bf00      	nop
1a0039b8:	1a007898 	.word	0x1a007898
1a0039bc:	9a2b      	ldr	r2, [sp, #172]	; 0xac
1a0039be:	49bd      	ldr	r1, [pc, #756]	; (1a003cb4 <_vfprintf_r+0x1454>)
1a0039c0:	f8cb 1000 	str.w	r1, [fp]
1a0039c4:	3201      	adds	r2, #1
1a0039c6:	3401      	adds	r4, #1
1a0039c8:	2101      	movs	r1, #1
1a0039ca:	2a07      	cmp	r2, #7
1a0039cc:	e9cd 242b 	strd	r2, r4, [sp, #172]	; 0xac
1a0039d0:	f8cb 1004 	str.w	r1, [fp, #4]
1a0039d4:	dc60      	bgt.n	1a003a98 <_vfprintf_r+0x1238>
1a0039d6:	f10b 0b08 	add.w	fp, fp, #8
1a0039da:	b92b      	cbnz	r3, 1a0039e8 <_vfprintf_r+0x1188>
1a0039dc:	9a10      	ldr	r2, [sp, #64]	; 0x40
1a0039de:	b91a      	cbnz	r2, 1a0039e8 <_vfprintf_r+0x1188>
1a0039e0:	f018 0f01 	tst.w	r8, #1
1a0039e4:	f43f a98d 	beq.w	1a002d02 <_vfprintf_r+0x4a2>
1a0039e8:	9a2b      	ldr	r2, [sp, #172]	; 0xac
1a0039ea:	9916      	ldr	r1, [sp, #88]	; 0x58
1a0039ec:	f8cb 1000 	str.w	r1, [fp]
1a0039f0:	9915      	ldr	r1, [sp, #84]	; 0x54
1a0039f2:	f8cb 1004 	str.w	r1, [fp, #4]
1a0039f6:	3201      	adds	r2, #1
1a0039f8:	440c      	add	r4, r1
1a0039fa:	2a07      	cmp	r2, #7
1a0039fc:	942c      	str	r4, [sp, #176]	; 0xb0
1a0039fe:	922b      	str	r2, [sp, #172]	; 0xac
1a003a00:	f300 8282 	bgt.w	1a003f08 <_vfprintf_r+0x16a8>
1a003a04:	f10b 0b08 	add.w	fp, fp, #8
1a003a08:	2b00      	cmp	r3, #0
1a003a0a:	f2c0 82e7 	blt.w	1a003fdc <_vfprintf_r+0x177c>
1a003a0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a003a10:	3201      	adds	r2, #1
1a003a12:	441c      	add	r4, r3
1a003a14:	2a07      	cmp	r2, #7
1a003a16:	e9cd 242b 	strd	r2, r4, [sp, #172]	; 0xac
1a003a1a:	e9cb 7300 	strd	r7, r3, [fp]
1a003a1e:	f77f a96e 	ble.w	1a002cfe <_vfprintf_r+0x49e>
1a003a22:	e4fe      	b.n	1a003422 <_vfprintf_r+0xbc2>
1a003a24:	aa2a      	add	r2, sp, #168	; 0xa8
1a003a26:	9907      	ldr	r1, [sp, #28]
1a003a28:	9803      	ldr	r0, [sp, #12]
1a003a2a:	f003 fa5f 	bl	1a006eec <__sprint_r>
1a003a2e:	2800      	cmp	r0, #0
1a003a30:	f47f ac8e 	bne.w	1a003350 <_vfprintf_r+0xaf0>
1a003a34:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a003a38:	f7ff bbf0 	b.w	1a00321c <_vfprintf_r+0x9bc>
1a003a3c:	9a05      	ldr	r2, [sp, #20]
1a003a3e:	601a      	str	r2, [r3, #0]
1a003a40:	4657      	mov	r7, sl
1a003a42:	f7ff b9b3 	b.w	1a002dac <_vfprintf_r+0x54c>
1a003a46:	8814      	ldrh	r4, [r2, #0]
1a003a48:	9108      	str	r1, [sp, #32]
1a003a4a:	2500      	movs	r5, #0
1a003a4c:	2201      	movs	r2, #1
1a003a4e:	f7ff b9c8 	b.w	1a002de2 <_vfprintf_r+0x582>
1a003a52:	8814      	ldrh	r4, [r2, #0]
1a003a54:	9308      	str	r3, [sp, #32]
1a003a56:	2500      	movs	r5, #0
1a003a58:	f7ff ba14 	b.w	1a002e84 <_vfprintf_r+0x624>
1a003a5c:	f9b1 4000 	ldrsh.w	r4, [r1]
1a003a60:	9208      	str	r2, [sp, #32]
1a003a62:	17e5      	asrs	r5, r4, #31
1a003a64:	4620      	mov	r0, r4
1a003a66:	4629      	mov	r1, r5
1a003a68:	f7ff b855 	b.w	1a002b16 <_vfprintf_r+0x2b6>
1a003a6c:	8814      	ldrh	r4, [r2, #0]
1a003a6e:	9308      	str	r3, [sp, #32]
1a003a70:	2500      	movs	r5, #0
1a003a72:	f7ff b825 	b.w	1a002ac0 <_vfprintf_r+0x260>
1a003a76:	222d      	movs	r2, #45	; 0x2d
1a003a78:	f88d 208b 	strb.w	r2, [sp, #139]	; 0x8b
1a003a7c:	f7ff baa2 	b.w	1a002fc4 <_vfprintf_r+0x764>
1a003a80:	aa2a      	add	r2, sp, #168	; 0xa8
1a003a82:	9907      	ldr	r1, [sp, #28]
1a003a84:	9803      	ldr	r0, [sp, #12]
1a003a86:	f003 fa31 	bl	1a006eec <__sprint_r>
1a003a8a:	2800      	cmp	r0, #0
1a003a8c:	f47f ac60 	bne.w	1a003350 <_vfprintf_r+0xaf0>
1a003a90:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
1a003a92:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a003a96:	e534      	b.n	1a003502 <_vfprintf_r+0xca2>
1a003a98:	aa2a      	add	r2, sp, #168	; 0xa8
1a003a9a:	9907      	ldr	r1, [sp, #28]
1a003a9c:	9803      	ldr	r0, [sp, #12]
1a003a9e:	f003 fa25 	bl	1a006eec <__sprint_r>
1a003aa2:	2800      	cmp	r0, #0
1a003aa4:	f47f ac54 	bne.w	1a003350 <_vfprintf_r+0xaf0>
1a003aa8:	9b24      	ldr	r3, [sp, #144]	; 0x90
1a003aaa:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
1a003aac:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a003ab0:	e793      	b.n	1a0039da <_vfprintf_r+0x117a>
1a003ab2:	2330      	movs	r3, #48	; 0x30
1a003ab4:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
1a003ab8:	2378      	movs	r3, #120	; 0x78
1a003aba:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
1a003abe:	f88d 308d 	strb.w	r3, [sp, #141]	; 0x8d
1a003ac2:	f048 0402 	orr.w	r4, r8, #2
1a003ac6:	f300 82b0 	bgt.w	1a00402a <_vfprintf_r+0x17ca>
1a003aca:	f448 7381 	orr.w	r3, r8, #258	; 0x102
1a003ace:	930e      	str	r3, [sp, #56]	; 0x38
1a003ad0:	f026 0320 	bic.w	r3, r6, #32
1a003ad4:	9304      	str	r3, [sp, #16]
1a003ad6:	2200      	movs	r2, #0
1a003ad8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1a003ada:	920a      	str	r2, [sp, #40]	; 0x28
1a003adc:	46a0      	mov	r8, r4
1a003ade:	af3d      	add	r7, sp, #244	; 0xf4
1a003ae0:	2b00      	cmp	r3, #0
1a003ae2:	f2c0 81e3 	blt.w	1a003eac <_vfprintf_r+0x164c>
1a003ae6:	ed9d 7b12 	vldr	d7, [sp, #72]	; 0x48
1a003aea:	ed8d 7b1e 	vstr	d7, [sp, #120]	; 0x78
1a003aee:	2300      	movs	r3, #0
1a003af0:	930b      	str	r3, [sp, #44]	; 0x2c
1a003af2:	2e61      	cmp	r6, #97	; 0x61
1a003af4:	f000 8255 	beq.w	1a003fa2 <_vfprintf_r+0x1742>
1a003af8:	2e41      	cmp	r6, #65	; 0x41
1a003afa:	f47f aee3 	bne.w	1a0038c4 <_vfprintf_r+0x1064>
1a003afe:	a824      	add	r0, sp, #144	; 0x90
1a003b00:	ed9d 0b1e 	vldr	d0, [sp, #120]	; 0x78
1a003b04:	f003 f90c 	bl	1a006d20 <frexp>
1a003b08:	2200      	movs	r2, #0
1a003b0a:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
1a003b0e:	ec51 0b10 	vmov	r0, r1, d0
1a003b12:	f7fe f92f 	bl	1a001d74 <__aeabi_dmul>
1a003b16:	2200      	movs	r2, #0
1a003b18:	2300      	movs	r3, #0
1a003b1a:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
1a003b1e:	f003 fc15 	bl	1a00734c <__aeabi_dcmpeq>
1a003b22:	2800      	cmp	r0, #0
1a003b24:	f040 8305 	bne.w	1a004132 <_vfprintf_r+0x18d2>
1a003b28:	4b63      	ldr	r3, [pc, #396]	; (1a003cb8 <_vfprintf_r+0x1458>)
1a003b2a:	9309      	str	r3, [sp, #36]	; 0x24
1a003b2c:	e9cd a60f 	strd	sl, r6, [sp, #60]	; 0x3c
1a003b30:	f109 34ff 	add.w	r4, r9, #4294967295	; 0xffffffff
1a003b34:	f8cd 9050 	str.w	r9, [sp, #80]	; 0x50
1a003b38:	9721      	str	r7, [sp, #132]	; 0x84
1a003b3a:	46b9      	mov	r9, r7
1a003b3c:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
1a003b40:	f8cd 8080 	str.w	r8, [sp, #128]	; 0x80
1a003b44:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
1a003b48:	e9dd 670c 	ldrd	r6, r7, [sp, #48]	; 0x30
1a003b4c:	e003      	b.n	1a003b56 <_vfprintf_r+0x12f6>
1a003b4e:	f003 fbfd 	bl	1a00734c <__aeabi_dcmpeq>
1a003b52:	bb20      	cbnz	r0, 1a003b9e <_vfprintf_r+0x133e>
1a003b54:	46a9      	mov	r9, r5
1a003b56:	2200      	movs	r2, #0
1a003b58:	4b58      	ldr	r3, [pc, #352]	; (1a003cbc <_vfprintf_r+0x145c>)
1a003b5a:	4630      	mov	r0, r6
1a003b5c:	4639      	mov	r1, r7
1a003b5e:	f7fe f909 	bl	1a001d74 <__aeabi_dmul>
1a003b62:	460f      	mov	r7, r1
1a003b64:	4606      	mov	r6, r0
1a003b66:	f003 fc39 	bl	1a0073dc <__aeabi_d2iz>
1a003b6a:	4680      	mov	r8, r0
1a003b6c:	f7fe f898 	bl	1a001ca0 <__aeabi_i2d>
1a003b70:	4602      	mov	r2, r0
1a003b72:	460b      	mov	r3, r1
1a003b74:	4630      	mov	r0, r6
1a003b76:	4639      	mov	r1, r7
1a003b78:	f7fd ff44 	bl	1a001a04 <__aeabi_dsub>
1a003b7c:	464d      	mov	r5, r9
1a003b7e:	f81a c008 	ldrb.w	ip, [sl, r8]
1a003b82:	f805 cb01 	strb.w	ip, [r5], #1
1a003b86:	f1b4 3fff 	cmp.w	r4, #4294967295	; 0xffffffff
1a003b8a:	46a3      	mov	fp, r4
1a003b8c:	4606      	mov	r6, r0
1a003b8e:	460f      	mov	r7, r1
1a003b90:	f04f 0200 	mov.w	r2, #0
1a003b94:	f04f 0300 	mov.w	r3, #0
1a003b98:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
1a003b9c:	d1d7      	bne.n	1a003b4e <_vfprintf_r+0x12ee>
1a003b9e:	4630      	mov	r0, r6
1a003ba0:	4639      	mov	r1, r7
1a003ba2:	2200      	movs	r2, #0
1a003ba4:	4b46      	ldr	r3, [pc, #280]	; (1a003cc0 <_vfprintf_r+0x1460>)
1a003ba6:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
1a003baa:	9e10      	ldr	r6, [sp, #64]	; 0x40
1a003bac:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
1a003bb0:	4644      	mov	r4, r8
1a003bb2:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
1a003bb6:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
1a003bba:	f8dd 9050 	ldr.w	r9, [sp, #80]	; 0x50
1a003bbe:	f8dd b044 	ldr.w	fp, [sp, #68]	; 0x44
1a003bc2:	9f21      	ldr	r7, [sp, #132]	; 0x84
1a003bc4:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
1a003bc8:	f003 fbe8 	bl	1a00739c <__aeabi_dcmpgt>
1a003bcc:	2800      	cmp	r0, #0
1a003bce:	f040 8176 	bne.w	1a003ebe <_vfprintf_r+0x165e>
1a003bd2:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
1a003bd6:	2200      	movs	r2, #0
1a003bd8:	4b39      	ldr	r3, [pc, #228]	; (1a003cc0 <_vfprintf_r+0x1460>)
1a003bda:	f003 fbb7 	bl	1a00734c <__aeabi_dcmpeq>
1a003bde:	b110      	cbz	r0, 1a003be6 <_vfprintf_r+0x1386>
1a003be0:	07e2      	lsls	r2, r4, #31
1a003be2:	f100 816c 	bmi.w	1a003ebe <_vfprintf_r+0x165e>
1a003be6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a003be8:	2b00      	cmp	r3, #0
1a003bea:	db07      	blt.n	1a003bfc <_vfprintf_r+0x139c>
1a003bec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a003bee:	3301      	adds	r3, #1
1a003bf0:	442b      	add	r3, r5
1a003bf2:	2230      	movs	r2, #48	; 0x30
1a003bf4:	f805 2b01 	strb.w	r2, [r5], #1
1a003bf8:	42ab      	cmp	r3, r5
1a003bfa:	d1fb      	bne.n	1a003bf4 <_vfprintf_r+0x1394>
1a003bfc:	1beb      	subs	r3, r5, r7
1a003bfe:	4640      	mov	r0, r8
1a003c00:	9310      	str	r3, [sp, #64]	; 0x40
1a003c02:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
1a003c06:	e683      	b.n	1a003910 <_vfprintf_r+0x10b0>
1a003c08:	f8cd 9010 	str.w	r9, [sp, #16]
1a003c0c:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
1a003c10:	9408      	str	r4, [sp, #32]
1a003c12:	4681      	mov	r9, r0
1a003c14:	900f      	str	r0, [sp, #60]	; 0x3c
1a003c16:	9014      	str	r0, [sp, #80]	; 0x50
1a003c18:	9011      	str	r0, [sp, #68]	; 0x44
1a003c1a:	f89d 208b 	ldrb.w	r2, [sp, #139]	; 0x8b
1a003c1e:	f7fe bfac 	b.w	1a002b7a <_vfprintf_r+0x31a>
1a003c22:	aa2a      	add	r2, sp, #168	; 0xa8
1a003c24:	9907      	ldr	r1, [sp, #28]
1a003c26:	9803      	ldr	r0, [sp, #12]
1a003c28:	f003 f960 	bl	1a006eec <__sprint_r>
1a003c2c:	2800      	cmp	r0, #0
1a003c2e:	f47f ab8f 	bne.w	1a003350 <_vfprintf_r+0xaf0>
1a003c32:	9b24      	ldr	r3, [sp, #144]	; 0x90
1a003c34:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
1a003c36:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a003c3a:	e511      	b.n	1a003660 <_vfprintf_r+0xe00>
1a003c3c:	4252      	negs	r2, r2
1a003c3e:	9206      	str	r2, [sp, #24]
1a003c40:	9308      	str	r3, [sp, #32]
1a003c42:	f7ff b96d 	b.w	1a002f20 <_vfprintf_r+0x6c0>
1a003c46:	4614      	mov	r4, r2
1a003c48:	4632      	mov	r2, r6
1a003c4a:	461e      	mov	r6, r3
1a003c4c:	4613      	mov	r3, r2
1a003c4e:	462a      	mov	r2, r5
1a003c50:	3201      	adds	r2, #1
1a003c52:	9209      	str	r2, [sp, #36]	; 0x24
1a003c54:	f106 0208 	add.w	r2, r6, #8
1a003c58:	e9c6 3900 	strd	r3, r9, [r6]
1a003c5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a003c5e:	932b      	str	r3, [sp, #172]	; 0xac
1a003c60:	444c      	add	r4, r9
1a003c62:	2b07      	cmp	r3, #7
1a003c64:	942c      	str	r4, [sp, #176]	; 0xb0
1a003c66:	f73f acc3 	bgt.w	1a0035f0 <_vfprintf_r+0xd90>
1a003c6a:	3301      	adds	r3, #1
1a003c6c:	9309      	str	r3, [sp, #36]	; 0x24
1a003c6e:	f102 0b08 	add.w	fp, r2, #8
1a003c72:	4616      	mov	r6, r2
1a003c74:	f7ff bbca 	b.w	1a00340c <_vfprintf_r+0xbac>
1a003c78:	aa2a      	add	r2, sp, #168	; 0xa8
1a003c7a:	9907      	ldr	r1, [sp, #28]
1a003c7c:	9803      	ldr	r0, [sp, #12]
1a003c7e:	f003 f935 	bl	1a006eec <__sprint_r>
1a003c82:	2800      	cmp	r0, #0
1a003c84:	f47f ab64 	bne.w	1a003350 <_vfprintf_r+0xaf0>
1a003c88:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
1a003c8a:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a003c8e:	f7ff bade 	b.w	1a00324e <_vfprintf_r+0x9ee>
1a003c92:	464b      	mov	r3, r9
1a003c94:	2b06      	cmp	r3, #6
1a003c96:	bf28      	it	cs
1a003c98:	2306      	movcs	r3, #6
1a003c9a:	46b9      	mov	r9, r7
1a003c9c:	970f      	str	r7, [sp, #60]	; 0x3c
1a003c9e:	9714      	str	r7, [sp, #80]	; 0x50
1a003ca0:	9711      	str	r7, [sp, #68]	; 0x44
1a003ca2:	970a      	str	r7, [sp, #40]	; 0x28
1a003ca4:	463a      	mov	r2, r7
1a003ca6:	9304      	str	r3, [sp, #16]
1a003ca8:	e9cd 4308 	strd	r4, r3, [sp, #32]
1a003cac:	4f05      	ldr	r7, [pc, #20]	; (1a003cc4 <_vfprintf_r+0x1464>)
1a003cae:	f7fe bf64 	b.w	1a002b7a <_vfprintf_r+0x31a>
1a003cb2:	bf00      	nop
1a003cb4:	1a007884 	.word	0x1a007884
1a003cb8:	1a007868 	.word	0x1a007868
1a003cbc:	40300000 	.word	0x40300000
1a003cc0:	3fe00000 	.word	0x3fe00000
1a003cc4:	1a00787c 	.word	0x1a00787c
1a003cc8:	460c      	mov	r4, r1
1a003cca:	4639      	mov	r1, r7
1a003ccc:	465f      	mov	r7, fp
1a003cce:	469b      	mov	fp, r3
1a003cd0:	460b      	mov	r3, r1
1a003cd2:	3201      	adds	r2, #1
1a003cd4:	442c      	add	r4, r5
1a003cd6:	2a07      	cmp	r2, #7
1a003cd8:	e9cd 242b 	strd	r2, r4, [sp, #172]	; 0xac
1a003cdc:	e9cb 3500 	strd	r3, r5, [fp]
1a003ce0:	f73f aca5 	bgt.w	1a00362e <_vfprintf_r+0xdce>
1a003ce4:	f10b 0b08 	add.w	fp, fp, #8
1a003ce8:	e4ac      	b.n	1a003644 <_vfprintf_r+0xde4>
1a003cea:	9b11      	ldr	r3, [sp, #68]	; 0x44
1a003cec:	1cda      	adds	r2, r3, #3
1a003cee:	db02      	blt.n	1a003cf6 <_vfprintf_r+0x1496>
1a003cf0:	4599      	cmp	r9, r3
1a003cf2:	f280 80b5 	bge.w	1a003e60 <_vfprintf_r+0x1600>
1a003cf6:	3e02      	subs	r6, #2
1a003cf8:	f026 0320 	bic.w	r3, r6, #32
1a003cfc:	9304      	str	r3, [sp, #16]
1a003cfe:	e611      	b.n	1a003924 <_vfprintf_r+0x10c4>
1a003d00:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a003d02:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
1a003d06:	465a      	mov	r2, fp
1a003d08:	e9dd 8b1a 	ldrd	r8, fp, [sp, #104]	; 0x68
1a003d0c:	18fb      	adds	r3, r7, r3
1a003d0e:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
1a003d12:	970c      	str	r7, [sp, #48]	; 0x30
1a003d14:	4eaf      	ldr	r6, [pc, #700]	; (1a003fd4 <_vfprintf_r+0x1774>)
1a003d16:	f8dd a01c 	ldr.w	sl, [sp, #28]
1a003d1a:	9309      	str	r3, [sp, #36]	; 0x24
1a003d1c:	464f      	mov	r7, r9
1a003d1e:	f8dd 900c 	ldr.w	r9, [sp, #12]
1a003d22:	4621      	mov	r1, r4
1a003d24:	9b14      	ldr	r3, [sp, #80]	; 0x50
1a003d26:	2b00      	cmp	r3, #0
1a003d28:	d05b      	beq.n	1a003de2 <_vfprintf_r+0x1582>
1a003d2a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a003d2c:	2b00      	cmp	r3, #0
1a003d2e:	d154      	bne.n	1a003dda <_vfprintf_r+0x157a>
1a003d30:	9b14      	ldr	r3, [sp, #80]	; 0x50
1a003d32:	3b01      	subs	r3, #1
1a003d34:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
1a003d38:	9314      	str	r3, [sp, #80]	; 0x50
1a003d3a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
1a003d3c:	9818      	ldr	r0, [sp, #96]	; 0x60
1a003d3e:	6010      	str	r0, [r2, #0]
1a003d40:	3301      	adds	r3, #1
1a003d42:	4459      	add	r1, fp
1a003d44:	2b07      	cmp	r3, #7
1a003d46:	912c      	str	r1, [sp, #176]	; 0xb0
1a003d48:	f8c2 b004 	str.w	fp, [r2, #4]
1a003d4c:	932b      	str	r3, [sp, #172]	; 0xac
1a003d4e:	dc68      	bgt.n	1a003e22 <_vfprintf_r+0x15c2>
1a003d50:	3208      	adds	r2, #8
1a003d52:	9809      	ldr	r0, [sp, #36]	; 0x24
1a003d54:	f898 3000 	ldrb.w	r3, [r8]
1a003d58:	1bc5      	subs	r5, r0, r7
1a003d5a:	429d      	cmp	r5, r3
1a003d5c:	bfa8      	it	ge
1a003d5e:	461d      	movge	r5, r3
1a003d60:	2d00      	cmp	r5, #0
1a003d62:	dd0b      	ble.n	1a003d7c <_vfprintf_r+0x151c>
1a003d64:	9b2b      	ldr	r3, [sp, #172]	; 0xac
1a003d66:	6017      	str	r7, [r2, #0]
1a003d68:	3301      	adds	r3, #1
1a003d6a:	4429      	add	r1, r5
1a003d6c:	2b07      	cmp	r3, #7
1a003d6e:	912c      	str	r1, [sp, #176]	; 0xb0
1a003d70:	6055      	str	r5, [r2, #4]
1a003d72:	932b      	str	r3, [sp, #172]	; 0xac
1a003d74:	dc5e      	bgt.n	1a003e34 <_vfprintf_r+0x15d4>
1a003d76:	f898 3000 	ldrb.w	r3, [r8]
1a003d7a:	3208      	adds	r2, #8
1a003d7c:	2d00      	cmp	r5, #0
1a003d7e:	bfac      	ite	ge
1a003d80:	1b5d      	subge	r5, r3, r5
1a003d82:	461d      	movlt	r5, r3
1a003d84:	2d00      	cmp	r5, #0
1a003d86:	dd26      	ble.n	1a003dd6 <_vfprintf_r+0x1576>
1a003d88:	2d10      	cmp	r5, #16
1a003d8a:	982b      	ldr	r0, [sp, #172]	; 0xac
1a003d8c:	dd3c      	ble.n	1a003e08 <_vfprintf_r+0x15a8>
1a003d8e:	2410      	movs	r4, #16
1a003d90:	e003      	b.n	1a003d9a <_vfprintf_r+0x153a>
1a003d92:	3208      	adds	r2, #8
1a003d94:	3d10      	subs	r5, #16
1a003d96:	2d10      	cmp	r5, #16
1a003d98:	dd36      	ble.n	1a003e08 <_vfprintf_r+0x15a8>
1a003d9a:	3001      	adds	r0, #1
1a003d9c:	3110      	adds	r1, #16
1a003d9e:	2807      	cmp	r0, #7
1a003da0:	e9cd 012b 	strd	r0, r1, [sp, #172]	; 0xac
1a003da4:	e9c2 6400 	strd	r6, r4, [r2]
1a003da8:	ddf3      	ble.n	1a003d92 <_vfprintf_r+0x1532>
1a003daa:	aa2a      	add	r2, sp, #168	; 0xa8
1a003dac:	4651      	mov	r1, sl
1a003dae:	4648      	mov	r0, r9
1a003db0:	f003 f89c 	bl	1a006eec <__sprint_r>
1a003db4:	2800      	cmp	r0, #0
1a003db6:	d150      	bne.n	1a003e5a <_vfprintf_r+0x15fa>
1a003db8:	e9dd 012b 	ldrd	r0, r1, [sp, #172]	; 0xac
1a003dbc:	aa2d      	add	r2, sp, #180	; 0xb4
1a003dbe:	e7e9      	b.n	1a003d94 <_vfprintf_r+0x1534>
1a003dc0:	aa2a      	add	r2, sp, #168	; 0xa8
1a003dc2:	4651      	mov	r1, sl
1a003dc4:	4648      	mov	r0, r9
1a003dc6:	f003 f891 	bl	1a006eec <__sprint_r>
1a003dca:	2800      	cmp	r0, #0
1a003dcc:	d145      	bne.n	1a003e5a <_vfprintf_r+0x15fa>
1a003dce:	f898 3000 	ldrb.w	r3, [r8]
1a003dd2:	992c      	ldr	r1, [sp, #176]	; 0xb0
1a003dd4:	aa2d      	add	r2, sp, #180	; 0xb4
1a003dd6:	441f      	add	r7, r3
1a003dd8:	e7a4      	b.n	1a003d24 <_vfprintf_r+0x14c4>
1a003dda:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a003ddc:	3b01      	subs	r3, #1
1a003dde:	930f      	str	r3, [sp, #60]	; 0x3c
1a003de0:	e7ab      	b.n	1a003d3a <_vfprintf_r+0x14da>
1a003de2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a003de4:	2b00      	cmp	r3, #0
1a003de6:	d1f8      	bne.n	1a003dda <_vfprintf_r+0x157a>
1a003de8:	46b9      	mov	r9, r7
1a003dea:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a003dec:	9f0c      	ldr	r7, [sp, #48]	; 0x30
1a003dee:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
1a003df2:	18fb      	adds	r3, r7, r3
1a003df4:	4599      	cmp	r9, r3
1a003df6:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
1a003dfa:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
1a003dfe:	4693      	mov	fp, r2
1a003e00:	460c      	mov	r4, r1
1a003e02:	bf28      	it	cs
1a003e04:	4699      	movcs	r9, r3
1a003e06:	e424      	b.n	1a003652 <_vfprintf_r+0xdf2>
1a003e08:	3001      	adds	r0, #1
1a003e0a:	4429      	add	r1, r5
1a003e0c:	2807      	cmp	r0, #7
1a003e0e:	e9cd 012b 	strd	r0, r1, [sp, #172]	; 0xac
1a003e12:	e9c2 6500 	strd	r6, r5, [r2]
1a003e16:	dcd3      	bgt.n	1a003dc0 <_vfprintf_r+0x1560>
1a003e18:	f898 3000 	ldrb.w	r3, [r8]
1a003e1c:	3208      	adds	r2, #8
1a003e1e:	441f      	add	r7, r3
1a003e20:	e780      	b.n	1a003d24 <_vfprintf_r+0x14c4>
1a003e22:	aa2a      	add	r2, sp, #168	; 0xa8
1a003e24:	4651      	mov	r1, sl
1a003e26:	4648      	mov	r0, r9
1a003e28:	f003 f860 	bl	1a006eec <__sprint_r>
1a003e2c:	b9a8      	cbnz	r0, 1a003e5a <_vfprintf_r+0x15fa>
1a003e2e:	992c      	ldr	r1, [sp, #176]	; 0xb0
1a003e30:	aa2d      	add	r2, sp, #180	; 0xb4
1a003e32:	e78e      	b.n	1a003d52 <_vfprintf_r+0x14f2>
1a003e34:	aa2a      	add	r2, sp, #168	; 0xa8
1a003e36:	4651      	mov	r1, sl
1a003e38:	4648      	mov	r0, r9
1a003e3a:	f003 f857 	bl	1a006eec <__sprint_r>
1a003e3e:	b960      	cbnz	r0, 1a003e5a <_vfprintf_r+0x15fa>
1a003e40:	f898 3000 	ldrb.w	r3, [r8]
1a003e44:	992c      	ldr	r1, [sp, #176]	; 0xb0
1a003e46:	aa2d      	add	r2, sp, #180	; 0xb4
1a003e48:	e798      	b.n	1a003d7c <_vfprintf_r+0x151c>
1a003e4a:	4638      	mov	r0, r7
1a003e4c:	f7fe fc98 	bl	1a002780 <strlen>
1a003e50:	46a9      	mov	r9, r5
1a003e52:	4603      	mov	r3, r0
1a003e54:	9009      	str	r0, [sp, #36]	; 0x24
1a003e56:	f7ff b8f4 	b.w	1a003042 <_vfprintf_r+0x7e2>
1a003e5a:	46d1      	mov	r9, sl
1a003e5c:	f7ff ba7a 	b.w	1a003354 <_vfprintf_r+0xaf4>
1a003e60:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a003e62:	4619      	mov	r1, r3
1a003e64:	9b11      	ldr	r3, [sp, #68]	; 0x44
1a003e66:	4299      	cmp	r1, r3
1a003e68:	f300 8082 	bgt.w	1a003f70 <_vfprintf_r+0x1710>
1a003e6c:	07c4      	lsls	r4, r0, #31
1a003e6e:	f140 816b 	bpl.w	1a004148 <_vfprintf_r+0x18e8>
1a003e72:	9a15      	ldr	r2, [sp, #84]	; 0x54
1a003e74:	4413      	add	r3, r2
1a003e76:	9309      	str	r3, [sp, #36]	; 0x24
1a003e78:	0541      	lsls	r1, r0, #21
1a003e7a:	d503      	bpl.n	1a003e84 <_vfprintf_r+0x1624>
1a003e7c:	9b11      	ldr	r3, [sp, #68]	; 0x44
1a003e7e:	2b00      	cmp	r3, #0
1a003e80:	f300 80e6 	bgt.w	1a004050 <_vfprintf_r+0x17f0>
1a003e84:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a003e86:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
1a003e8a:	9304      	str	r3, [sp, #16]
1a003e8c:	2667      	movs	r6, #103	; 0x67
1a003e8e:	2300      	movs	r3, #0
1a003e90:	930f      	str	r3, [sp, #60]	; 0x3c
1a003e92:	9314      	str	r3, [sp, #80]	; 0x50
1a003e94:	e586      	b.n	1a0039a4 <_vfprintf_r+0x1144>
1a003e96:	222d      	movs	r2, #45	; 0x2d
1a003e98:	f88d 208b 	strb.w	r2, [sp, #139]	; 0x8b
1a003e9c:	f04f 0900 	mov.w	r9, #0
1a003ea0:	f7fe be6c 	b.w	1a002b7c <_vfprintf_r+0x31c>
1a003ea4:	46a1      	mov	r9, r4
1a003ea6:	f7ff ba55 	b.w	1a003354 <_vfprintf_r+0xaf4>
1a003eaa:	900a      	str	r0, [sp, #40]	; 0x28
1a003eac:	e9dd 1212 	ldrd	r1, r2, [sp, #72]	; 0x48
1a003eb0:	f102 4300 	add.w	r3, r2, #2147483648	; 0x80000000
1a003eb4:	931f      	str	r3, [sp, #124]	; 0x7c
1a003eb6:	232d      	movs	r3, #45	; 0x2d
1a003eb8:	911e      	str	r1, [sp, #120]	; 0x78
1a003eba:	930b      	str	r3, [sp, #44]	; 0x2c
1a003ebc:	e619      	b.n	1a003af2 <_vfprintf_r+0x1292>
1a003ebe:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a003ec0:	9328      	str	r3, [sp, #160]	; 0xa0
1a003ec2:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a003ec4:	f815 2c01 	ldrb.w	r2, [r5, #-1]
1a003ec8:	7bd9      	ldrb	r1, [r3, #15]
1a003eca:	4291      	cmp	r1, r2
1a003ecc:	462b      	mov	r3, r5
1a003ece:	d109      	bne.n	1a003ee4 <_vfprintf_r+0x1684>
1a003ed0:	2030      	movs	r0, #48	; 0x30
1a003ed2:	f803 0c01 	strb.w	r0, [r3, #-1]
1a003ed6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
1a003ed8:	1e5a      	subs	r2, r3, #1
1a003eda:	9228      	str	r2, [sp, #160]	; 0xa0
1a003edc:	f813 2c01 	ldrb.w	r2, [r3, #-1]
1a003ee0:	4291      	cmp	r1, r2
1a003ee2:	d0f6      	beq.n	1a003ed2 <_vfprintf_r+0x1672>
1a003ee4:	2a39      	cmp	r2, #57	; 0x39
1a003ee6:	bf0b      	itete	eq
1a003ee8:	9a09      	ldreq	r2, [sp, #36]	; 0x24
1a003eea:	3201      	addne	r2, #1
1a003eec:	7a92      	ldrbeq	r2, [r2, #10]
1a003eee:	b2d2      	uxtbne	r2, r2
1a003ef0:	f803 2c01 	strb.w	r2, [r3, #-1]
1a003ef4:	e682      	b.n	1a003bfc <_vfprintf_r+0x139c>
1a003ef6:	f418 7f00 	tst.w	r8, #512	; 0x200
1a003efa:	f43f ad9f 	beq.w	1a003a3c <_vfprintf_r+0x11dc>
1a003efe:	9a05      	ldr	r2, [sp, #20]
1a003f00:	701a      	strb	r2, [r3, #0]
1a003f02:	4657      	mov	r7, sl
1a003f04:	f7fe bf52 	b.w	1a002dac <_vfprintf_r+0x54c>
1a003f08:	aa2a      	add	r2, sp, #168	; 0xa8
1a003f0a:	9907      	ldr	r1, [sp, #28]
1a003f0c:	9803      	ldr	r0, [sp, #12]
1a003f0e:	f002 ffed 	bl	1a006eec <__sprint_r>
1a003f12:	2800      	cmp	r0, #0
1a003f14:	f47f aa1c 	bne.w	1a003350 <_vfprintf_r+0xaf0>
1a003f18:	9b24      	ldr	r3, [sp, #144]	; 0x90
1a003f1a:	e9dd 242b 	ldrd	r2, r4, [sp, #172]	; 0xac
1a003f1e:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a003f22:	e571      	b.n	1a003a08 <_vfprintf_r+0x11a8>
1a003f24:	9b11      	ldr	r3, [sp, #68]	; 0x44
1a003f26:	2b00      	cmp	r3, #0
1a003f28:	f340 8164 	ble.w	1a0041f4 <_vfprintf_r+0x1994>
1a003f2c:	9b11      	ldr	r3, [sp, #68]	; 0x44
1a003f2e:	f1b9 0f00 	cmp.w	r9, #0
1a003f32:	f040 8103 	bne.w	1a00413c <_vfprintf_r+0x18dc>
1a003f36:	07c6      	lsls	r6, r0, #31
1a003f38:	f100 8100 	bmi.w	1a00413c <_vfprintf_r+0x18dc>
1a003f3c:	9309      	str	r3, [sp, #36]	; 0x24
1a003f3e:	2666      	movs	r6, #102	; 0x66
1a003f40:	0543      	lsls	r3, r0, #21
1a003f42:	f100 8086 	bmi.w	1a004052 <_vfprintf_r+0x17f2>
1a003f46:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a003f48:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
1a003f4c:	9304      	str	r3, [sp, #16]
1a003f4e:	e79e      	b.n	1a003e8e <_vfprintf_r+0x162e>
1a003f50:	aa2a      	add	r2, sp, #168	; 0xa8
1a003f52:	9907      	ldr	r1, [sp, #28]
1a003f54:	9803      	ldr	r0, [sp, #12]
1a003f56:	f002 ffc9 	bl	1a006eec <__sprint_r>
1a003f5a:	2800      	cmp	r0, #0
1a003f5c:	f47f a9f8 	bne.w	1a003350 <_vfprintf_r+0xaf0>
1a003f60:	9b24      	ldr	r3, [sp, #144]	; 0x90
1a003f62:	9a10      	ldr	r2, [sp, #64]	; 0x40
1a003f64:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
1a003f66:	1ad3      	subs	r3, r2, r3
1a003f68:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a003f6c:	f7ff bb90 	b.w	1a003690 <_vfprintf_r+0xe30>
1a003f70:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a003f72:	9a15      	ldr	r2, [sp, #84]	; 0x54
1a003f74:	4413      	add	r3, r2
1a003f76:	9309      	str	r3, [sp, #36]	; 0x24
1a003f78:	9b11      	ldr	r3, [sp, #68]	; 0x44
1a003f7a:	2b00      	cmp	r3, #0
1a003f7c:	f340 8149 	ble.w	1a004212 <_vfprintf_r+0x19b2>
1a003f80:	2667      	movs	r6, #103	; 0x67
1a003f82:	e7dd      	b.n	1a003f40 <_vfprintf_r+0x16e0>
1a003f84:	2330      	movs	r3, #48	; 0x30
1a003f86:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
1a003f8a:	2358      	movs	r3, #88	; 0x58
1a003f8c:	e595      	b.n	1a003aba <_vfprintf_r+0x125a>
1a003f8e:	9803      	ldr	r0, [sp, #12]
1a003f90:	aa2a      	add	r2, sp, #168	; 0xa8
1a003f92:	4649      	mov	r1, r9
1a003f94:	f002 ffaa 	bl	1a006eec <__sprint_r>
1a003f98:	2800      	cmp	r0, #0
1a003f9a:	f47f a9e0 	bne.w	1a00335e <_vfprintf_r+0xafe>
1a003f9e:	f7fe bf0f 	b.w	1a002dc0 <_vfprintf_r+0x560>
1a003fa2:	a824      	add	r0, sp, #144	; 0x90
1a003fa4:	ed9d 0b1e 	vldr	d0, [sp, #120]	; 0x78
1a003fa8:	f002 feba 	bl	1a006d20 <frexp>
1a003fac:	2200      	movs	r2, #0
1a003fae:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
1a003fb2:	ec51 0b10 	vmov	r0, r1, d0
1a003fb6:	f7fd fedd 	bl	1a001d74 <__aeabi_dmul>
1a003fba:	2200      	movs	r2, #0
1a003fbc:	2300      	movs	r3, #0
1a003fbe:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
1a003fc2:	f003 f9c3 	bl	1a00734c <__aeabi_dcmpeq>
1a003fc6:	b108      	cbz	r0, 1a003fcc <_vfprintf_r+0x176c>
1a003fc8:	2301      	movs	r3, #1
1a003fca:	9324      	str	r3, [sp, #144]	; 0x90
1a003fcc:	4b02      	ldr	r3, [pc, #8]	; (1a003fd8 <_vfprintf_r+0x1778>)
1a003fce:	9309      	str	r3, [sp, #36]	; 0x24
1a003fd0:	e5ac      	b.n	1a003b2c <_vfprintf_r+0x12cc>
1a003fd2:	bf00      	nop
1a003fd4:	1a007898 	.word	0x1a007898
1a003fd8:	1a007854 	.word	0x1a007854
1a003fdc:	425d      	negs	r5, r3
1a003fde:	3310      	adds	r3, #16
1a003fe0:	4bb9      	ldr	r3, [pc, #740]	; (1a0042c8 <_vfprintf_r+0x1a68>)
1a003fe2:	f280 8097 	bge.w	1a004114 <_vfprintf_r+0x18b4>
1a003fe6:	4619      	mov	r1, r3
1a003fe8:	2610      	movs	r6, #16
1a003fea:	4623      	mov	r3, r4
1a003fec:	f8dd 900c 	ldr.w	r9, [sp, #12]
1a003ff0:	460c      	mov	r4, r1
1a003ff2:	e005      	b.n	1a004000 <_vfprintf_r+0x17a0>
1a003ff4:	f10b 0b08 	add.w	fp, fp, #8
1a003ff8:	3d10      	subs	r5, #16
1a003ffa:	2d10      	cmp	r5, #16
1a003ffc:	f340 8087 	ble.w	1a00410e <_vfprintf_r+0x18ae>
1a004000:	3201      	adds	r2, #1
1a004002:	3310      	adds	r3, #16
1a004004:	2a07      	cmp	r2, #7
1a004006:	e9cd 232b 	strd	r2, r3, [sp, #172]	; 0xac
1a00400a:	e9cb 4600 	strd	r4, r6, [fp]
1a00400e:	ddf1      	ble.n	1a003ff4 <_vfprintf_r+0x1794>
1a004010:	aa2a      	add	r2, sp, #168	; 0xa8
1a004012:	9907      	ldr	r1, [sp, #28]
1a004014:	4648      	mov	r0, r9
1a004016:	f002 ff69 	bl	1a006eec <__sprint_r>
1a00401a:	2800      	cmp	r0, #0
1a00401c:	f47f a998 	bne.w	1a003350 <_vfprintf_r+0xaf0>
1a004020:	e9dd 232b 	ldrd	r2, r3, [sp, #172]	; 0xac
1a004024:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a004028:	e7e6      	b.n	1a003ff8 <_vfprintf_r+0x1798>
1a00402a:	f109 0101 	add.w	r1, r9, #1
1a00402e:	9803      	ldr	r0, [sp, #12]
1a004030:	f001 fe56 	bl	1a005ce0 <_malloc_r>
1a004034:	4607      	mov	r7, r0
1a004036:	2800      	cmp	r0, #0
1a004038:	f000 813b 	beq.w	1a0042b2 <_vfprintf_r+0x1a52>
1a00403c:	f448 7381 	orr.w	r3, r8, #258	; 0x102
1a004040:	930e      	str	r3, [sp, #56]	; 0x38
1a004042:	f026 0320 	bic.w	r3, r6, #32
1a004046:	9304      	str	r3, [sp, #16]
1a004048:	46a0      	mov	r8, r4
1a00404a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1a00404c:	900a      	str	r0, [sp, #40]	; 0x28
1a00404e:	e547      	b.n	1a003ae0 <_vfprintf_r+0x1280>
1a004050:	2667      	movs	r6, #103	; 0x67
1a004052:	981a      	ldr	r0, [sp, #104]	; 0x68
1a004054:	2200      	movs	r2, #0
1a004056:	920f      	str	r2, [sp, #60]	; 0x3c
1a004058:	9214      	str	r2, [sp, #80]	; 0x50
1a00405a:	7803      	ldrb	r3, [r0, #0]
1a00405c:	9a11      	ldr	r2, [sp, #68]	; 0x44
1a00405e:	2bff      	cmp	r3, #255	; 0xff
1a004060:	d00c      	beq.n	1a00407c <_vfprintf_r+0x181c>
1a004062:	4293      	cmp	r3, r2
1a004064:	da0a      	bge.n	1a00407c <_vfprintf_r+0x181c>
1a004066:	7841      	ldrb	r1, [r0, #1]
1a004068:	1ad2      	subs	r2, r2, r3
1a00406a:	b1a9      	cbz	r1, 1a004098 <_vfprintf_r+0x1838>
1a00406c:	9b14      	ldr	r3, [sp, #80]	; 0x50
1a00406e:	3301      	adds	r3, #1
1a004070:	9314      	str	r3, [sp, #80]	; 0x50
1a004072:	460b      	mov	r3, r1
1a004074:	2bff      	cmp	r3, #255	; 0xff
1a004076:	f100 0001 	add.w	r0, r0, #1
1a00407a:	d1f2      	bne.n	1a004062 <_vfprintf_r+0x1802>
1a00407c:	9211      	str	r2, [sp, #68]	; 0x44
1a00407e:	9b14      	ldr	r3, [sp, #80]	; 0x50
1a004080:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
1a004082:	9909      	ldr	r1, [sp, #36]	; 0x24
1a004084:	901a      	str	r0, [sp, #104]	; 0x68
1a004086:	4413      	add	r3, r2
1a004088:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
1a00408a:	fb02 1303 	mla	r3, r2, r3, r1
1a00408e:	9309      	str	r3, [sp, #36]	; 0x24
1a004090:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
1a004094:	9304      	str	r3, [sp, #16]
1a004096:	e485      	b.n	1a0039a4 <_vfprintf_r+0x1144>
1a004098:	990f      	ldr	r1, [sp, #60]	; 0x3c
1a00409a:	3101      	adds	r1, #1
1a00409c:	910f      	str	r1, [sp, #60]	; 0x3c
1a00409e:	e7de      	b.n	1a00405e <_vfprintf_r+0x17fe>
1a0040a0:	aa28      	add	r2, sp, #160	; 0xa0
1a0040a2:	ab25      	add	r3, sp, #148	; 0x94
1a0040a4:	e9cd 3200 	strd	r3, r2, [sp]
1a0040a8:	2103      	movs	r1, #3
1a0040aa:	ab24      	add	r3, sp, #144	; 0x90
1a0040ac:	464a      	mov	r2, r9
1a0040ae:	ed9d 0b1e 	vldr	d0, [sp, #120]	; 0x78
1a0040b2:	9803      	ldr	r0, [sp, #12]
1a0040b4:	f000 fa4c 	bl	1a004550 <_dtoa_r>
1a0040b8:	464d      	mov	r5, r9
1a0040ba:	4607      	mov	r7, r0
1a0040bc:	eb00 0409 	add.w	r4, r0, r9
1a0040c0:	783b      	ldrb	r3, [r7, #0]
1a0040c2:	2b30      	cmp	r3, #48	; 0x30
1a0040c4:	f000 80be 	beq.w	1a004244 <_vfprintf_r+0x19e4>
1a0040c8:	9d24      	ldr	r5, [sp, #144]	; 0x90
1a0040ca:	442c      	add	r4, r5
1a0040cc:	2200      	movs	r2, #0
1a0040ce:	2300      	movs	r3, #0
1a0040d0:	e9dd 011e 	ldrd	r0, r1, [sp, #120]	; 0x78
1a0040d4:	f003 f93a 	bl	1a00734c <__aeabi_dcmpeq>
1a0040d8:	b108      	cbz	r0, 1a0040de <_vfprintf_r+0x187e>
1a0040da:	4623      	mov	r3, r4
1a0040dc:	e413      	b.n	1a003906 <_vfprintf_r+0x10a6>
1a0040de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
1a0040e0:	42a3      	cmp	r3, r4
1a0040e2:	f4bf ac10 	bcs.w	1a003906 <_vfprintf_r+0x10a6>
1a0040e6:	2130      	movs	r1, #48	; 0x30
1a0040e8:	1c5a      	adds	r2, r3, #1
1a0040ea:	9228      	str	r2, [sp, #160]	; 0xa0
1a0040ec:	7019      	strb	r1, [r3, #0]
1a0040ee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
1a0040f0:	429c      	cmp	r4, r3
1a0040f2:	d8f9      	bhi.n	1a0040e8 <_vfprintf_r+0x1888>
1a0040f4:	e407      	b.n	1a003906 <_vfprintf_r+0x10a6>
1a0040f6:	197c      	adds	r4, r7, r5
1a0040f8:	e7e8      	b.n	1a0040cc <_vfprintf_r+0x186c>
1a0040fa:	f1b9 0f00 	cmp.w	r9, #0
1a0040fe:	f000 8092 	beq.w	1a004226 <_vfprintf_r+0x19c6>
1a004102:	900a      	str	r0, [sp, #40]	; 0x28
1a004104:	e4ec      	b.n	1a003ae0 <_vfprintf_r+0x1280>
1a004106:	900a      	str	r0, [sp, #40]	; 0x28
1a004108:	f04f 0906 	mov.w	r9, #6
1a00410c:	e4e8      	b.n	1a003ae0 <_vfprintf_r+0x1280>
1a00410e:	4621      	mov	r1, r4
1a004110:	461c      	mov	r4, r3
1a004112:	460b      	mov	r3, r1
1a004114:	3201      	adds	r2, #1
1a004116:	442c      	add	r4, r5
1a004118:	2a07      	cmp	r2, #7
1a00411a:	e9cd 242b 	strd	r2, r4, [sp, #172]	; 0xac
1a00411e:	e9cb 3500 	strd	r3, r5, [fp]
1a004122:	f300 80a9 	bgt.w	1a004278 <_vfprintf_r+0x1a18>
1a004126:	f10b 0b08 	add.w	fp, fp, #8
1a00412a:	e470      	b.n	1a003a0e <_vfprintf_r+0x11ae>
1a00412c:	469a      	mov	sl, r3
1a00412e:	f7ff bb37 	b.w	1a0037a0 <_vfprintf_r+0xf40>
1a004132:	2301      	movs	r3, #1
1a004134:	9324      	str	r3, [sp, #144]	; 0x90
1a004136:	4b65      	ldr	r3, [pc, #404]	; (1a0042cc <_vfprintf_r+0x1a6c>)
1a004138:	9309      	str	r3, [sp, #36]	; 0x24
1a00413a:	e4f7      	b.n	1a003b2c <_vfprintf_r+0x12cc>
1a00413c:	9a15      	ldr	r2, [sp, #84]	; 0x54
1a00413e:	4413      	add	r3, r2
1a004140:	444b      	add	r3, r9
1a004142:	9309      	str	r3, [sp, #36]	; 0x24
1a004144:	2666      	movs	r6, #102	; 0x66
1a004146:	e6fb      	b.n	1a003f40 <_vfprintf_r+0x16e0>
1a004148:	9b11      	ldr	r3, [sp, #68]	; 0x44
1a00414a:	9309      	str	r3, [sp, #36]	; 0x24
1a00414c:	e694      	b.n	1a003e78 <_vfprintf_r+0x1618>
1a00414e:	f10d 0ca7 	add.w	ip, sp, #167	; 0xa7
1a004152:	4664      	mov	r4, ip
1a004154:	4d5e      	ldr	r5, [pc, #376]	; (1a0042d0 <_vfprintf_r+0x1a70>)
1a004156:	e000      	b.n	1a00415a <_vfprintf_r+0x18fa>
1a004158:	4614      	mov	r4, r2
1a00415a:	fba5 1203 	umull	r1, r2, r5, r3
1a00415e:	08d2      	lsrs	r2, r2, #3
1a004160:	eb02 0182 	add.w	r1, r2, r2, lsl #2
1a004164:	eba3 0341 	sub.w	r3, r3, r1, lsl #1
1a004168:	f103 0130 	add.w	r1, r3, #48	; 0x30
1a00416c:	4613      	mov	r3, r2
1a00416e:	2b09      	cmp	r3, #9
1a004170:	f804 1c01 	strb.w	r1, [r4, #-1]
1a004174:	f104 32ff 	add.w	r2, r4, #4294967295	; 0xffffffff
1a004178:	dcee      	bgt.n	1a004158 <_vfprintf_r+0x18f8>
1a00417a:	3330      	adds	r3, #48	; 0x30
1a00417c:	3c02      	subs	r4, #2
1a00417e:	b2db      	uxtb	r3, r3
1a004180:	45a4      	cmp	ip, r4
1a004182:	f802 3c01 	strb.w	r3, [r2, #-1]
1a004186:	f240 8090 	bls.w	1a0042aa <_vfprintf_r+0x1a4a>
1a00418a:	f10d 049a 	add.w	r4, sp, #154	; 0x9a
1a00418e:	4611      	mov	r1, r2
1a004190:	e001      	b.n	1a004196 <_vfprintf_r+0x1936>
1a004192:	f811 3b01 	ldrb.w	r3, [r1], #1
1a004196:	f804 3b01 	strb.w	r3, [r4], #1
1a00419a:	458c      	cmp	ip, r1
1a00419c:	d1f9      	bne.n	1a004192 <_vfprintf_r+0x1932>
1a00419e:	ab2a      	add	r3, sp, #168	; 0xa8
1a0041a0:	1a9b      	subs	r3, r3, r2
1a0041a2:	f10d 029a 	add.w	r2, sp, #154	; 0x9a
1a0041a6:	4413      	add	r3, r2
1a0041a8:	f7ff bbe3 	b.w	1a003972 <_vfprintf_r+0x1112>
1a0041ac:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1a0041ae:	4f49      	ldr	r7, [pc, #292]	; (1a0042d4 <_vfprintf_r+0x1a74>)
1a0041b0:	2b00      	cmp	r3, #0
1a0041b2:	bfb6      	itet	lt
1a0041b4:	222d      	movlt	r2, #45	; 0x2d
1a0041b6:	f89d 208b 	ldrbge.w	r2, [sp, #139]	; 0x8b
1a0041ba:	f88d 208b 	strblt.w	r2, [sp, #139]	; 0x8b
1a0041be:	4b46      	ldr	r3, [pc, #280]	; (1a0042d8 <_vfprintf_r+0x1a78>)
1a0041c0:	f7fe bf02 	b.w	1a002fc8 <_vfprintf_r+0x768>
1a0041c4:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a0041c8:	f7ff b8c9 	b.w	1a00335e <_vfprintf_r+0xafe>
1a0041cc:	aa28      	add	r2, sp, #160	; 0xa0
1a0041ce:	ab25      	add	r3, sp, #148	; 0x94
1a0041d0:	e9cd 3200 	strd	r3, r2, [sp]
1a0041d4:	2103      	movs	r1, #3
1a0041d6:	ab24      	add	r3, sp, #144	; 0x90
1a0041d8:	464a      	mov	r2, r9
1a0041da:	ed9d 0b1e 	vldr	d0, [sp, #120]	; 0x78
1a0041de:	9803      	ldr	r0, [sp, #12]
1a0041e0:	f000 f9b6 	bl	1a004550 <_dtoa_r>
1a0041e4:	464d      	mov	r5, r9
1a0041e6:	4607      	mov	r7, r0
1a0041e8:	2e46      	cmp	r6, #70	; 0x46
1a0041ea:	eb07 0405 	add.w	r4, r7, r5
1a0041ee:	f43f af67 	beq.w	1a0040c0 <_vfprintf_r+0x1860>
1a0041f2:	e76b      	b.n	1a0040cc <_vfprintf_r+0x186c>
1a0041f4:	f1b9 0f00 	cmp.w	r9, #0
1a0041f8:	d131      	bne.n	1a00425e <_vfprintf_r+0x19fe>
1a0041fa:	07c5      	lsls	r5, r0, #31
1a0041fc:	d42f      	bmi.n	1a00425e <_vfprintf_r+0x19fe>
1a0041fe:	2301      	movs	r3, #1
1a004200:	9304      	str	r3, [sp, #16]
1a004202:	9309      	str	r3, [sp, #36]	; 0x24
1a004204:	2666      	movs	r6, #102	; 0x66
1a004206:	e642      	b.n	1a003e8e <_vfprintf_r+0x162e>
1a004208:	07c3      	lsls	r3, r0, #31
1a00420a:	f57f abbf 	bpl.w	1a00398c <_vfprintf_r+0x112c>
1a00420e:	f7ff bbb9 	b.w	1a003984 <_vfprintf_r+0x1124>
1a004212:	9a09      	ldr	r2, [sp, #36]	; 0x24
1a004214:	f1c3 0301 	rsb	r3, r3, #1
1a004218:	441a      	add	r2, r3
1a00421a:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
1a00421e:	9209      	str	r2, [sp, #36]	; 0x24
1a004220:	9304      	str	r3, [sp, #16]
1a004222:	2667      	movs	r6, #103	; 0x67
1a004224:	e633      	b.n	1a003e8e <_vfprintf_r+0x162e>
1a004226:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
1a00422a:	f04f 0901 	mov.w	r9, #1
1a00422e:	e457      	b.n	1a003ae0 <_vfprintf_r+0x1280>
1a004230:	465a      	mov	r2, fp
1a004232:	e511      	b.n	1a003c58 <_vfprintf_r+0x13f8>
1a004234:	2e47      	cmp	r6, #71	; 0x47
1a004236:	f47f af5e 	bne.w	1a0040f6 <_vfprintf_r+0x1896>
1a00423a:	f018 0f01 	tst.w	r8, #1
1a00423e:	f43f ab61 	beq.w	1a003904 <_vfprintf_r+0x10a4>
1a004242:	e7d1      	b.n	1a0041e8 <_vfprintf_r+0x1988>
1a004244:	2200      	movs	r2, #0
1a004246:	2300      	movs	r3, #0
1a004248:	e9dd 011e 	ldrd	r0, r1, [sp, #120]	; 0x78
1a00424c:	f003 f87e 	bl	1a00734c <__aeabi_dcmpeq>
1a004250:	2800      	cmp	r0, #0
1a004252:	f47f af39 	bne.w	1a0040c8 <_vfprintf_r+0x1868>
1a004256:	f1c5 0501 	rsb	r5, r5, #1
1a00425a:	9524      	str	r5, [sp, #144]	; 0x90
1a00425c:	e735      	b.n	1a0040ca <_vfprintf_r+0x186a>
1a00425e:	9b15      	ldr	r3, [sp, #84]	; 0x54
1a004260:	3301      	adds	r3, #1
1a004262:	444b      	add	r3, r9
1a004264:	9309      	str	r3, [sp, #36]	; 0x24
1a004266:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
1a00426a:	9304      	str	r3, [sp, #16]
1a00426c:	2666      	movs	r6, #102	; 0x66
1a00426e:	e60e      	b.n	1a003e8e <_vfprintf_r+0x162e>
1a004270:	f10d 029a 	add.w	r2, sp, #154	; 0x9a
1a004274:	f7ff bb7a 	b.w	1a00396c <_vfprintf_r+0x110c>
1a004278:	aa2a      	add	r2, sp, #168	; 0xa8
1a00427a:	9907      	ldr	r1, [sp, #28]
1a00427c:	9803      	ldr	r0, [sp, #12]
1a00427e:	f002 fe35 	bl	1a006eec <__sprint_r>
1a004282:	2800      	cmp	r0, #0
1a004284:	f47f a864 	bne.w	1a003350 <_vfprintf_r+0xaf0>
1a004288:	e9dd 242b 	ldrd	r2, r4, [sp, #172]	; 0xac
1a00428c:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a004290:	f7ff bbbd 	b.w	1a003a0e <_vfprintf_r+0x11ae>
1a004294:	9908      	ldr	r1, [sp, #32]
1a004296:	f89a 6001 	ldrb.w	r6, [sl, #1]
1a00429a:	680b      	ldr	r3, [r1, #0]
1a00429c:	ea43 79e3 	orr.w	r9, r3, r3, asr #31
1a0042a0:	1d0b      	adds	r3, r1, #4
1a0042a2:	4692      	mov	sl, r2
1a0042a4:	9308      	str	r3, [sp, #32]
1a0042a6:	f7fe bb59 	b.w	1a00295c <_vfprintf_r+0xfc>
1a0042aa:	f10d 039a 	add.w	r3, sp, #154	; 0x9a
1a0042ae:	f7ff bb60 	b.w	1a003972 <_vfprintf_r+0x1112>
1a0042b2:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a0042b6:	f8b9 300c 	ldrh.w	r3, [r9, #12]
1a0042ba:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a0042be:	f8a9 300c 	strh.w	r3, [r9, #12]
1a0042c2:	f7ff b84c 	b.w	1a00335e <_vfprintf_r+0xafe>
1a0042c6:	bf00      	nop
1a0042c8:	1a007898 	.word	0x1a007898
1a0042cc:	1a007868 	.word	0x1a007868
1a0042d0:	cccccccd 	.word	0xcccccccd
1a0042d4:	1a007850 	.word	0x1a007850
1a0042d8:	1a00784c 	.word	0x1a00784c

1a0042dc <__sbprintf>:
1a0042dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a0042e0:	460c      	mov	r4, r1
1a0042e2:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
1a0042e6:	8989      	ldrh	r1, [r1, #12]
1a0042e8:	6e66      	ldr	r6, [r4, #100]	; 0x64
1a0042ea:	89e5      	ldrh	r5, [r4, #14]
1a0042ec:	9619      	str	r6, [sp, #100]	; 0x64
1a0042ee:	f021 0102 	bic.w	r1, r1, #2
1a0042f2:	4606      	mov	r6, r0
1a0042f4:	69e0      	ldr	r0, [r4, #28]
1a0042f6:	f8ad 100c 	strh.w	r1, [sp, #12]
1a0042fa:	4617      	mov	r7, r2
1a0042fc:	f44f 6180 	mov.w	r1, #1024	; 0x400
1a004300:	6a62      	ldr	r2, [r4, #36]	; 0x24
1a004302:	f8ad 500e 	strh.w	r5, [sp, #14]
1a004306:	4698      	mov	r8, r3
1a004308:	ad1a      	add	r5, sp, #104	; 0x68
1a00430a:	2300      	movs	r3, #0
1a00430c:	9007      	str	r0, [sp, #28]
1a00430e:	a816      	add	r0, sp, #88	; 0x58
1a004310:	9209      	str	r2, [sp, #36]	; 0x24
1a004312:	9306      	str	r3, [sp, #24]
1a004314:	9500      	str	r5, [sp, #0]
1a004316:	9504      	str	r5, [sp, #16]
1a004318:	9102      	str	r1, [sp, #8]
1a00431a:	9105      	str	r1, [sp, #20]
1a00431c:	f001 fc60 	bl	1a005be0 <__retarget_lock_init_recursive>
1a004320:	4643      	mov	r3, r8
1a004322:	463a      	mov	r2, r7
1a004324:	4669      	mov	r1, sp
1a004326:	4630      	mov	r0, r6
1a004328:	f7fe fa9a 	bl	1a002860 <_vfprintf_r>
1a00432c:	1e05      	subs	r5, r0, #0
1a00432e:	db07      	blt.n	1a004340 <__sbprintf+0x64>
1a004330:	4630      	mov	r0, r6
1a004332:	4669      	mov	r1, sp
1a004334:	f001 f8c6 	bl	1a0054c4 <_fflush_r>
1a004338:	2800      	cmp	r0, #0
1a00433a:	bf18      	it	ne
1a00433c:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
1a004340:	f8bd 300c 	ldrh.w	r3, [sp, #12]
1a004344:	065b      	lsls	r3, r3, #25
1a004346:	d503      	bpl.n	1a004350 <__sbprintf+0x74>
1a004348:	89a3      	ldrh	r3, [r4, #12]
1a00434a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a00434e:	81a3      	strh	r3, [r4, #12]
1a004350:	9816      	ldr	r0, [sp, #88]	; 0x58
1a004352:	f001 fc47 	bl	1a005be4 <__retarget_lock_close_recursive>
1a004356:	4628      	mov	r0, r5
1a004358:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
1a00435c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

1a004360 <__swsetup_r>:
1a004360:	b538      	push	{r3, r4, r5, lr}
1a004362:	4b31      	ldr	r3, [pc, #196]	; (1a004428 <__swsetup_r+0xc8>)
1a004364:	681b      	ldr	r3, [r3, #0]
1a004366:	4605      	mov	r5, r0
1a004368:	460c      	mov	r4, r1
1a00436a:	b113      	cbz	r3, 1a004372 <__swsetup_r+0x12>
1a00436c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
1a00436e:	2a00      	cmp	r2, #0
1a004370:	d03a      	beq.n	1a0043e8 <__swsetup_r+0x88>
1a004372:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a004376:	b293      	uxth	r3, r2
1a004378:	0718      	lsls	r0, r3, #28
1a00437a:	d50c      	bpl.n	1a004396 <__swsetup_r+0x36>
1a00437c:	6920      	ldr	r0, [r4, #16]
1a00437e:	b1a8      	cbz	r0, 1a0043ac <__swsetup_r+0x4c>
1a004380:	f013 0201 	ands.w	r2, r3, #1
1a004384:	d020      	beq.n	1a0043c8 <__swsetup_r+0x68>
1a004386:	6963      	ldr	r3, [r4, #20]
1a004388:	2200      	movs	r2, #0
1a00438a:	425b      	negs	r3, r3
1a00438c:	61a3      	str	r3, [r4, #24]
1a00438e:	60a2      	str	r2, [r4, #8]
1a004390:	b300      	cbz	r0, 1a0043d4 <__swsetup_r+0x74>
1a004392:	2000      	movs	r0, #0
1a004394:	bd38      	pop	{r3, r4, r5, pc}
1a004396:	06d9      	lsls	r1, r3, #27
1a004398:	d53e      	bpl.n	1a004418 <__swsetup_r+0xb8>
1a00439a:	0758      	lsls	r0, r3, #29
1a00439c:	d428      	bmi.n	1a0043f0 <__swsetup_r+0x90>
1a00439e:	6920      	ldr	r0, [r4, #16]
1a0043a0:	f042 0308 	orr.w	r3, r2, #8
1a0043a4:	81a3      	strh	r3, [r4, #12]
1a0043a6:	b29b      	uxth	r3, r3
1a0043a8:	2800      	cmp	r0, #0
1a0043aa:	d1e9      	bne.n	1a004380 <__swsetup_r+0x20>
1a0043ac:	f403 7220 	and.w	r2, r3, #640	; 0x280
1a0043b0:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
1a0043b4:	d0e4      	beq.n	1a004380 <__swsetup_r+0x20>
1a0043b6:	4628      	mov	r0, r5
1a0043b8:	4621      	mov	r1, r4
1a0043ba:	f001 fc47 	bl	1a005c4c <__smakebuf_r>
1a0043be:	89a3      	ldrh	r3, [r4, #12]
1a0043c0:	6920      	ldr	r0, [r4, #16]
1a0043c2:	f013 0201 	ands.w	r2, r3, #1
1a0043c6:	d1de      	bne.n	1a004386 <__swsetup_r+0x26>
1a0043c8:	0799      	lsls	r1, r3, #30
1a0043ca:	bf58      	it	pl
1a0043cc:	6962      	ldrpl	r2, [r4, #20]
1a0043ce:	60a2      	str	r2, [r4, #8]
1a0043d0:	2800      	cmp	r0, #0
1a0043d2:	d1de      	bne.n	1a004392 <__swsetup_r+0x32>
1a0043d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a0043d8:	061a      	lsls	r2, r3, #24
1a0043da:	d5db      	bpl.n	1a004394 <__swsetup_r+0x34>
1a0043dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a0043e0:	81a3      	strh	r3, [r4, #12]
1a0043e2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a0043e6:	bd38      	pop	{r3, r4, r5, pc}
1a0043e8:	4618      	mov	r0, r3
1a0043ea:	f001 f8c7 	bl	1a00557c <__sinit>
1a0043ee:	e7c0      	b.n	1a004372 <__swsetup_r+0x12>
1a0043f0:	6b21      	ldr	r1, [r4, #48]	; 0x30
1a0043f2:	b151      	cbz	r1, 1a00440a <__swsetup_r+0xaa>
1a0043f4:	f104 0340 	add.w	r3, r4, #64	; 0x40
1a0043f8:	4299      	cmp	r1, r3
1a0043fa:	d004      	beq.n	1a004406 <__swsetup_r+0xa6>
1a0043fc:	4628      	mov	r0, r5
1a0043fe:	f001 f945 	bl	1a00568c <_free_r>
1a004402:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a004406:	2300      	movs	r3, #0
1a004408:	6323      	str	r3, [r4, #48]	; 0x30
1a00440a:	2300      	movs	r3, #0
1a00440c:	6920      	ldr	r0, [r4, #16]
1a00440e:	6063      	str	r3, [r4, #4]
1a004410:	f022 0224 	bic.w	r2, r2, #36	; 0x24
1a004414:	6020      	str	r0, [r4, #0]
1a004416:	e7c3      	b.n	1a0043a0 <__swsetup_r+0x40>
1a004418:	f042 0240 	orr.w	r2, r2, #64	; 0x40
1a00441c:	2309      	movs	r3, #9
1a00441e:	602b      	str	r3, [r5, #0]
1a004420:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a004424:	81a2      	strh	r2, [r4, #12]
1a004426:	bd38      	pop	{r3, r4, r5, pc}
1a004428:	10000088 	.word	0x10000088

1a00442c <quorem>:
1a00442c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a004430:	6903      	ldr	r3, [r0, #16]
1a004432:	690f      	ldr	r7, [r1, #16]
1a004434:	42bb      	cmp	r3, r7
1a004436:	b083      	sub	sp, #12
1a004438:	f2c0 8086 	blt.w	1a004548 <quorem+0x11c>
1a00443c:	3f01      	subs	r7, #1
1a00443e:	f101 0914 	add.w	r9, r1, #20
1a004442:	f100 0a14 	add.w	sl, r0, #20
1a004446:	f859 2027 	ldr.w	r2, [r9, r7, lsl #2]
1a00444a:	f85a 3027 	ldr.w	r3, [sl, r7, lsl #2]
1a00444e:	00bc      	lsls	r4, r7, #2
1a004450:	3201      	adds	r2, #1
1a004452:	fbb3 f8f2 	udiv	r8, r3, r2
1a004456:	eb0a 0304 	add.w	r3, sl, r4
1a00445a:	9400      	str	r4, [sp, #0]
1a00445c:	eb09 0b04 	add.w	fp, r9, r4
1a004460:	9301      	str	r3, [sp, #4]
1a004462:	f1b8 0f00 	cmp.w	r8, #0
1a004466:	d038      	beq.n	1a0044da <quorem+0xae>
1a004468:	2500      	movs	r5, #0
1a00446a:	462e      	mov	r6, r5
1a00446c:	46ce      	mov	lr, r9
1a00446e:	46d4      	mov	ip, sl
1a004470:	f85e 4b04 	ldr.w	r4, [lr], #4
1a004474:	f8dc 3000 	ldr.w	r3, [ip]
1a004478:	b2a2      	uxth	r2, r4
1a00447a:	fb08 5502 	mla	r5, r8, r2, r5
1a00447e:	0c22      	lsrs	r2, r4, #16
1a004480:	0c2c      	lsrs	r4, r5, #16
1a004482:	fb08 4202 	mla	r2, r8, r2, r4
1a004486:	b2ad      	uxth	r5, r5
1a004488:	1b75      	subs	r5, r6, r5
1a00448a:	b296      	uxth	r6, r2
1a00448c:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
1a004490:	fa15 f383 	uxtah	r3, r5, r3
1a004494:	eb06 4623 	add.w	r6, r6, r3, asr #16
1a004498:	b29b      	uxth	r3, r3
1a00449a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
1a00449e:	45f3      	cmp	fp, lr
1a0044a0:	ea4f 4512 	mov.w	r5, r2, lsr #16
1a0044a4:	f84c 3b04 	str.w	r3, [ip], #4
1a0044a8:	ea4f 4626 	mov.w	r6, r6, asr #16
1a0044ac:	d2e0      	bcs.n	1a004470 <quorem+0x44>
1a0044ae:	9b00      	ldr	r3, [sp, #0]
1a0044b0:	f85a 3003 	ldr.w	r3, [sl, r3]
1a0044b4:	b98b      	cbnz	r3, 1a0044da <quorem+0xae>
1a0044b6:	9a01      	ldr	r2, [sp, #4]
1a0044b8:	1f13      	subs	r3, r2, #4
1a0044ba:	459a      	cmp	sl, r3
1a0044bc:	d20c      	bcs.n	1a0044d8 <quorem+0xac>
1a0044be:	f852 3c04 	ldr.w	r3, [r2, #-4]
1a0044c2:	b94b      	cbnz	r3, 1a0044d8 <quorem+0xac>
1a0044c4:	f1a2 0308 	sub.w	r3, r2, #8
1a0044c8:	e002      	b.n	1a0044d0 <quorem+0xa4>
1a0044ca:	681a      	ldr	r2, [r3, #0]
1a0044cc:	3b04      	subs	r3, #4
1a0044ce:	b91a      	cbnz	r2, 1a0044d8 <quorem+0xac>
1a0044d0:	459a      	cmp	sl, r3
1a0044d2:	f107 37ff 	add.w	r7, r7, #4294967295	; 0xffffffff
1a0044d6:	d3f8      	bcc.n	1a0044ca <quorem+0x9e>
1a0044d8:	6107      	str	r7, [r0, #16]
1a0044da:	4604      	mov	r4, r0
1a0044dc:	f002 f97e 	bl	1a0067dc <__mcmp>
1a0044e0:	2800      	cmp	r0, #0
1a0044e2:	db2d      	blt.n	1a004540 <quorem+0x114>
1a0044e4:	f108 0801 	add.w	r8, r8, #1
1a0044e8:	4655      	mov	r5, sl
1a0044ea:	2300      	movs	r3, #0
1a0044ec:	f859 1b04 	ldr.w	r1, [r9], #4
1a0044f0:	6828      	ldr	r0, [r5, #0]
1a0044f2:	b28a      	uxth	r2, r1
1a0044f4:	1a9a      	subs	r2, r3, r2
1a0044f6:	0c0b      	lsrs	r3, r1, #16
1a0044f8:	fa12 f280 	uxtah	r2, r2, r0
1a0044fc:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
1a004500:	eb03 4322 	add.w	r3, r3, r2, asr #16
1a004504:	b292      	uxth	r2, r2
1a004506:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
1a00450a:	45cb      	cmp	fp, r9
1a00450c:	f845 2b04 	str.w	r2, [r5], #4
1a004510:	ea4f 4323 	mov.w	r3, r3, asr #16
1a004514:	d2ea      	bcs.n	1a0044ec <quorem+0xc0>
1a004516:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
1a00451a:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
1a00451e:	b97a      	cbnz	r2, 1a004540 <quorem+0x114>
1a004520:	1f1a      	subs	r2, r3, #4
1a004522:	4592      	cmp	sl, r2
1a004524:	d20b      	bcs.n	1a00453e <quorem+0x112>
1a004526:	f853 2c04 	ldr.w	r2, [r3, #-4]
1a00452a:	b942      	cbnz	r2, 1a00453e <quorem+0x112>
1a00452c:	3b08      	subs	r3, #8
1a00452e:	e002      	b.n	1a004536 <quorem+0x10a>
1a004530:	681a      	ldr	r2, [r3, #0]
1a004532:	3b04      	subs	r3, #4
1a004534:	b91a      	cbnz	r2, 1a00453e <quorem+0x112>
1a004536:	459a      	cmp	sl, r3
1a004538:	f107 37ff 	add.w	r7, r7, #4294967295	; 0xffffffff
1a00453c:	d3f8      	bcc.n	1a004530 <quorem+0x104>
1a00453e:	6127      	str	r7, [r4, #16]
1a004540:	4640      	mov	r0, r8
1a004542:	b003      	add	sp, #12
1a004544:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a004548:	2000      	movs	r0, #0
1a00454a:	b003      	add	sp, #12
1a00454c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

1a004550 <_dtoa_r>:
1a004550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a004554:	ec55 4b10 	vmov	r4, r5, d0
1a004558:	b09b      	sub	sp, #108	; 0x6c
1a00455a:	6c06      	ldr	r6, [r0, #64]	; 0x40
1a00455c:	9102      	str	r1, [sp, #8]
1a00455e:	4681      	mov	r9, r0
1a004560:	9207      	str	r2, [sp, #28]
1a004562:	9305      	str	r3, [sp, #20]
1a004564:	e9cd 4500 	strd	r4, r5, [sp]
1a004568:	b156      	cbz	r6, 1a004580 <_dtoa_r+0x30>
1a00456a:	6c42      	ldr	r2, [r0, #68]	; 0x44
1a00456c:	6072      	str	r2, [r6, #4]
1a00456e:	2301      	movs	r3, #1
1a004570:	4093      	lsls	r3, r2
1a004572:	60b3      	str	r3, [r6, #8]
1a004574:	4631      	mov	r1, r6
1a004576:	f001 ff41 	bl	1a0063fc <_Bfree>
1a00457a:	2300      	movs	r3, #0
1a00457c:	f8c9 3040 	str.w	r3, [r9, #64]	; 0x40
1a004580:	f1b5 0800 	subs.w	r8, r5, #0
1a004584:	9a24      	ldr	r2, [sp, #144]	; 0x90
1a004586:	bfb4      	ite	lt
1a004588:	2301      	movlt	r3, #1
1a00458a:	2300      	movge	r3, #0
1a00458c:	6013      	str	r3, [r2, #0]
1a00458e:	4b76      	ldr	r3, [pc, #472]	; (1a004768 <_dtoa_r+0x218>)
1a004590:	bfbc      	itt	lt
1a004592:	f028 4800 	biclt.w	r8, r8, #2147483648	; 0x80000000
1a004596:	f8cd 8004 	strlt.w	r8, [sp, #4]
1a00459a:	ea33 0308 	bics.w	r3, r3, r8
1a00459e:	f000 80a6 	beq.w	1a0046ee <_dtoa_r+0x19e>
1a0045a2:	e9dd 6700 	ldrd	r6, r7, [sp]
1a0045a6:	2200      	movs	r2, #0
1a0045a8:	2300      	movs	r3, #0
1a0045aa:	4630      	mov	r0, r6
1a0045ac:	4639      	mov	r1, r7
1a0045ae:	f002 fecd 	bl	1a00734c <__aeabi_dcmpeq>
1a0045b2:	4605      	mov	r5, r0
1a0045b4:	b178      	cbz	r0, 1a0045d6 <_dtoa_r+0x86>
1a0045b6:	9a05      	ldr	r2, [sp, #20]
1a0045b8:	2301      	movs	r3, #1
1a0045ba:	6013      	str	r3, [r2, #0]
1a0045bc:	9b25      	ldr	r3, [sp, #148]	; 0x94
1a0045be:	2b00      	cmp	r3, #0
1a0045c0:	f000 80c0 	beq.w	1a004744 <_dtoa_r+0x1f4>
1a0045c4:	4b69      	ldr	r3, [pc, #420]	; (1a00476c <_dtoa_r+0x21c>)
1a0045c6:	9a25      	ldr	r2, [sp, #148]	; 0x94
1a0045c8:	f103 3bff 	add.w	fp, r3, #4294967295	; 0xffffffff
1a0045cc:	6013      	str	r3, [r2, #0]
1a0045ce:	4658      	mov	r0, fp
1a0045d0:	b01b      	add	sp, #108	; 0x6c
1a0045d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a0045d6:	aa18      	add	r2, sp, #96	; 0x60
1a0045d8:	a919      	add	r1, sp, #100	; 0x64
1a0045da:	ec47 6b10 	vmov	d0, r6, r7
1a0045de:	4648      	mov	r0, r9
1a0045e0:	f002 f98e 	bl	1a006900 <__d2b>
1a0045e4:	ea5f 5418 	movs.w	r4, r8, lsr #20
1a0045e8:	4682      	mov	sl, r0
1a0045ea:	f040 80a0 	bne.w	1a00472e <_dtoa_r+0x1de>
1a0045ee:	e9dd 5418 	ldrd	r5, r4, [sp, #96]	; 0x60
1a0045f2:	442c      	add	r4, r5
1a0045f4:	f204 4332 	addw	r3, r4, #1074	; 0x432
1a0045f8:	2b20      	cmp	r3, #32
1a0045fa:	f340 842c 	ble.w	1a004e56 <_dtoa_r+0x906>
1a0045fe:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
1a004602:	fa08 f803 	lsl.w	r8, r8, r3
1a004606:	9b00      	ldr	r3, [sp, #0]
1a004608:	f204 4012 	addw	r0, r4, #1042	; 0x412
1a00460c:	fa23 f000 	lsr.w	r0, r3, r0
1a004610:	ea48 0000 	orr.w	r0, r8, r0
1a004614:	f7fd fb34 	bl	1a001c80 <__aeabi_ui2d>
1a004618:	2301      	movs	r3, #1
1a00461a:	4606      	mov	r6, r0
1a00461c:	3c01      	subs	r4, #1
1a00461e:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
1a004622:	930f      	str	r3, [sp, #60]	; 0x3c
1a004624:	4630      	mov	r0, r6
1a004626:	4639      	mov	r1, r7
1a004628:	2200      	movs	r2, #0
1a00462a:	4b51      	ldr	r3, [pc, #324]	; (1a004770 <_dtoa_r+0x220>)
1a00462c:	f7fd f9ea 	bl	1a001a04 <__aeabi_dsub>
1a004630:	a347      	add	r3, pc, #284	; (adr r3, 1a004750 <_dtoa_r+0x200>)
1a004632:	e9d3 2300 	ldrd	r2, r3, [r3]
1a004636:	f7fd fb9d 	bl	1a001d74 <__aeabi_dmul>
1a00463a:	a347      	add	r3, pc, #284	; (adr r3, 1a004758 <_dtoa_r+0x208>)
1a00463c:	e9d3 2300 	ldrd	r2, r3, [r3]
1a004640:	f7fd f9e2 	bl	1a001a08 <__adddf3>
1a004644:	4606      	mov	r6, r0
1a004646:	4620      	mov	r0, r4
1a004648:	460f      	mov	r7, r1
1a00464a:	f7fd fb29 	bl	1a001ca0 <__aeabi_i2d>
1a00464e:	a344      	add	r3, pc, #272	; (adr r3, 1a004760 <_dtoa_r+0x210>)
1a004650:	e9d3 2300 	ldrd	r2, r3, [r3]
1a004654:	f7fd fb8e 	bl	1a001d74 <__aeabi_dmul>
1a004658:	4602      	mov	r2, r0
1a00465a:	460b      	mov	r3, r1
1a00465c:	4630      	mov	r0, r6
1a00465e:	4639      	mov	r1, r7
1a004660:	f7fd f9d2 	bl	1a001a08 <__adddf3>
1a004664:	4606      	mov	r6, r0
1a004666:	460f      	mov	r7, r1
1a004668:	f002 feb8 	bl	1a0073dc <__aeabi_d2iz>
1a00466c:	2200      	movs	r2, #0
1a00466e:	9006      	str	r0, [sp, #24]
1a004670:	2300      	movs	r3, #0
1a004672:	4630      	mov	r0, r6
1a004674:	4639      	mov	r1, r7
1a004676:	f002 fe73 	bl	1a007360 <__aeabi_dcmplt>
1a00467a:	2800      	cmp	r0, #0
1a00467c:	f040 8273 	bne.w	1a004b66 <_dtoa_r+0x616>
1a004680:	9e06      	ldr	r6, [sp, #24]
1a004682:	2e16      	cmp	r6, #22
1a004684:	f200 825d 	bhi.w	1a004b42 <_dtoa_r+0x5f2>
1a004688:	4b3a      	ldr	r3, [pc, #232]	; (1a004774 <_dtoa_r+0x224>)
1a00468a:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
1a00468e:	e9d3 0100 	ldrd	r0, r1, [r3]
1a004692:	e9dd 2300 	ldrd	r2, r3, [sp]
1a004696:	f002 fe81 	bl	1a00739c <__aeabi_dcmpgt>
1a00469a:	2800      	cmp	r0, #0
1a00469c:	f000 83d7 	beq.w	1a004e4e <_dtoa_r+0x8fe>
1a0046a0:	1e73      	subs	r3, r6, #1
1a0046a2:	9306      	str	r3, [sp, #24]
1a0046a4:	2300      	movs	r3, #0
1a0046a6:	930d      	str	r3, [sp, #52]	; 0x34
1a0046a8:	1b2c      	subs	r4, r5, r4
1a0046aa:	f1b4 0801 	subs.w	r8, r4, #1
1a0046ae:	f100 8254 	bmi.w	1a004b5a <_dtoa_r+0x60a>
1a0046b2:	2300      	movs	r3, #0
1a0046b4:	9308      	str	r3, [sp, #32]
1a0046b6:	9b06      	ldr	r3, [sp, #24]
1a0046b8:	2b00      	cmp	r3, #0
1a0046ba:	f2c0 8245 	blt.w	1a004b48 <_dtoa_r+0x5f8>
1a0046be:	4498      	add	r8, r3
1a0046c0:	930c      	str	r3, [sp, #48]	; 0x30
1a0046c2:	2300      	movs	r3, #0
1a0046c4:	930b      	str	r3, [sp, #44]	; 0x2c
1a0046c6:	9b02      	ldr	r3, [sp, #8]
1a0046c8:	2b09      	cmp	r3, #9
1a0046ca:	d85b      	bhi.n	1a004784 <_dtoa_r+0x234>
1a0046cc:	2b05      	cmp	r3, #5
1a0046ce:	f340 83c0 	ble.w	1a004e52 <_dtoa_r+0x902>
1a0046d2:	3b04      	subs	r3, #4
1a0046d4:	9302      	str	r3, [sp, #8]
1a0046d6:	2500      	movs	r5, #0
1a0046d8:	9b02      	ldr	r3, [sp, #8]
1a0046da:	3b02      	subs	r3, #2
1a0046dc:	2b03      	cmp	r3, #3
1a0046de:	f200 8498 	bhi.w	1a005012 <_dtoa_r+0xac2>
1a0046e2:	e8df f013 	tbh	[pc, r3, lsl #1]
1a0046e6:	03df      	.short	0x03df
1a0046e8:	03e803bf 	.word	0x03e803bf
1a0046ec:	04f5      	.short	0x04f5
1a0046ee:	9a05      	ldr	r2, [sp, #20]
1a0046f0:	f242 730f 	movw	r3, #9999	; 0x270f
1a0046f4:	6013      	str	r3, [r2, #0]
1a0046f6:	9b00      	ldr	r3, [sp, #0]
1a0046f8:	b983      	cbnz	r3, 1a00471c <_dtoa_r+0x1cc>
1a0046fa:	f3c8 0313 	ubfx	r3, r8, #0, #20
1a0046fe:	b96b      	cbnz	r3, 1a00471c <_dtoa_r+0x1cc>
1a004700:	9b25      	ldr	r3, [sp, #148]	; 0x94
1a004702:	f8df b074 	ldr.w	fp, [pc, #116]	; 1a004778 <_dtoa_r+0x228>
1a004706:	2b00      	cmp	r3, #0
1a004708:	f43f af61 	beq.w	1a0045ce <_dtoa_r+0x7e>
1a00470c:	f10b 0308 	add.w	r3, fp, #8
1a004710:	9a25      	ldr	r2, [sp, #148]	; 0x94
1a004712:	4658      	mov	r0, fp
1a004714:	6013      	str	r3, [r2, #0]
1a004716:	b01b      	add	sp, #108	; 0x6c
1a004718:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a00471c:	9b25      	ldr	r3, [sp, #148]	; 0x94
1a00471e:	f8df b05c 	ldr.w	fp, [pc, #92]	; 1a00477c <_dtoa_r+0x22c>
1a004722:	2b00      	cmp	r3, #0
1a004724:	f43f af53 	beq.w	1a0045ce <_dtoa_r+0x7e>
1a004728:	f10b 0303 	add.w	r3, fp, #3
1a00472c:	e7f0      	b.n	1a004710 <_dtoa_r+0x1c0>
1a00472e:	f3c7 0313 	ubfx	r3, r7, #0, #20
1a004732:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
1a004736:	950f      	str	r5, [sp, #60]	; 0x3c
1a004738:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
1a00473c:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
1a004740:	9d18      	ldr	r5, [sp, #96]	; 0x60
1a004742:	e76f      	b.n	1a004624 <_dtoa_r+0xd4>
1a004744:	f8df b038 	ldr.w	fp, [pc, #56]	; 1a004780 <_dtoa_r+0x230>
1a004748:	4658      	mov	r0, fp
1a00474a:	b01b      	add	sp, #108	; 0x6c
1a00474c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a004750:	636f4361 	.word	0x636f4361
1a004754:	3fd287a7 	.word	0x3fd287a7
1a004758:	8b60c8b3 	.word	0x8b60c8b3
1a00475c:	3fc68a28 	.word	0x3fc68a28
1a004760:	509f79fb 	.word	0x509f79fb
1a004764:	3fd34413 	.word	0x3fd34413
1a004768:	7ff00000 	.word	0x7ff00000
1a00476c:	1a007885 	.word	0x1a007885
1a004770:	3ff80000 	.word	0x3ff80000
1a004774:	1a0078e0 	.word	0x1a0078e0
1a004778:	1a0078a8 	.word	0x1a0078a8
1a00477c:	1a0078b4 	.word	0x1a0078b4
1a004780:	1a007884 	.word	0x1a007884
1a004784:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
1a004788:	2501      	movs	r5, #1
1a00478a:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
1a00478e:	2300      	movs	r3, #0
1a004790:	9302      	str	r3, [sp, #8]
1a004792:	9307      	str	r3, [sp, #28]
1a004794:	2100      	movs	r1, #0
1a004796:	f8c9 1044 	str.w	r1, [r9, #68]	; 0x44
1a00479a:	940e      	str	r4, [sp, #56]	; 0x38
1a00479c:	4648      	mov	r0, r9
1a00479e:	f001 fe07 	bl	1a0063b0 <_Balloc>
1a0047a2:	2c0e      	cmp	r4, #14
1a0047a4:	4683      	mov	fp, r0
1a0047a6:	f8c9 0040 	str.w	r0, [r9, #64]	; 0x40
1a0047aa:	f200 80fb 	bhi.w	1a0049a4 <_dtoa_r+0x454>
1a0047ae:	2d00      	cmp	r5, #0
1a0047b0:	f000 80f8 	beq.w	1a0049a4 <_dtoa_r+0x454>
1a0047b4:	ed9d 7b00 	vldr	d7, [sp]
1a0047b8:	9906      	ldr	r1, [sp, #24]
1a0047ba:	2900      	cmp	r1, #0
1a0047bc:	ed8d 7b10 	vstr	d7, [sp, #64]	; 0x40
1a0047c0:	f340 83e5 	ble.w	1a004f8e <_dtoa_r+0xa3e>
1a0047c4:	4b9d      	ldr	r3, [pc, #628]	; (1a004a3c <_dtoa_r+0x4ec>)
1a0047c6:	f001 020f 	and.w	r2, r1, #15
1a0047ca:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
1a0047ce:	ed93 7b00 	vldr	d7, [r3]
1a0047d2:	110c      	asrs	r4, r1, #4
1a0047d4:	06e2      	lsls	r2, r4, #27
1a0047d6:	ed8d 7b00 	vstr	d7, [sp]
1a0047da:	f140 849e 	bpl.w	1a00511a <_dtoa_r+0xbca>
1a0047de:	4b98      	ldr	r3, [pc, #608]	; (1a004a40 <_dtoa_r+0x4f0>)
1a0047e0:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
1a0047e4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
1a0047e8:	f7fd fbee 	bl	1a001fc8 <__aeabi_ddiv>
1a0047ec:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
1a0047f0:	f004 040f 	and.w	r4, r4, #15
1a0047f4:	2603      	movs	r6, #3
1a0047f6:	b17c      	cbz	r4, 1a004818 <_dtoa_r+0x2c8>
1a0047f8:	e9dd 0100 	ldrd	r0, r1, [sp]
1a0047fc:	4d90      	ldr	r5, [pc, #576]	; (1a004a40 <_dtoa_r+0x4f0>)
1a0047fe:	07e3      	lsls	r3, r4, #31
1a004800:	d504      	bpl.n	1a00480c <_dtoa_r+0x2bc>
1a004802:	e9d5 2300 	ldrd	r2, r3, [r5]
1a004806:	f7fd fab5 	bl	1a001d74 <__aeabi_dmul>
1a00480a:	3601      	adds	r6, #1
1a00480c:	1064      	asrs	r4, r4, #1
1a00480e:	f105 0508 	add.w	r5, r5, #8
1a004812:	d1f4      	bne.n	1a0047fe <_dtoa_r+0x2ae>
1a004814:	e9cd 0100 	strd	r0, r1, [sp]
1a004818:	e9dd 2300 	ldrd	r2, r3, [sp]
1a00481c:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
1a004820:	f7fd fbd2 	bl	1a001fc8 <__aeabi_ddiv>
1a004824:	e9cd 0100 	strd	r0, r1, [sp]
1a004828:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1a00482a:	b143      	cbz	r3, 1a00483e <_dtoa_r+0x2ee>
1a00482c:	2200      	movs	r2, #0
1a00482e:	4b85      	ldr	r3, [pc, #532]	; (1a004a44 <_dtoa_r+0x4f4>)
1a004830:	e9dd 0100 	ldrd	r0, r1, [sp]
1a004834:	f002 fd94 	bl	1a007360 <__aeabi_dcmplt>
1a004838:	2800      	cmp	r0, #0
1a00483a:	f040 84ff 	bne.w	1a00523c <_dtoa_r+0xcec>
1a00483e:	4630      	mov	r0, r6
1a004840:	f7fd fa2e 	bl	1a001ca0 <__aeabi_i2d>
1a004844:	e9dd 2300 	ldrd	r2, r3, [sp]
1a004848:	f7fd fa94 	bl	1a001d74 <__aeabi_dmul>
1a00484c:	4b7e      	ldr	r3, [pc, #504]	; (1a004a48 <_dtoa_r+0x4f8>)
1a00484e:	2200      	movs	r2, #0
1a004850:	f7fd f8da 	bl	1a001a08 <__adddf3>
1a004854:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a004856:	4606      	mov	r6, r0
1a004858:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
1a00485c:	2b00      	cmp	r3, #0
1a00485e:	f000 841c 	beq.w	1a00509a <_dtoa_r+0xb4a>
1a004862:	9b06      	ldr	r3, [sp, #24]
1a004864:	9316      	str	r3, [sp, #88]	; 0x58
1a004866:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a004868:	9312      	str	r3, [sp, #72]	; 0x48
1a00486a:	e9dd 0100 	ldrd	r0, r1, [sp]
1a00486e:	f002 fdb5 	bl	1a0073dc <__aeabi_d2iz>
1a004872:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a004874:	4b71      	ldr	r3, [pc, #452]	; (1a004a3c <_dtoa_r+0x4ec>)
1a004876:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
1a00487a:	ed13 7b02 	vldr	d7, [r3, #-8]
1a00487e:	f100 0530 	add.w	r5, r0, #48	; 0x30
1a004882:	ed8d 7b14 	vstr	d7, [sp, #80]	; 0x50
1a004886:	f7fd fa0b 	bl	1a001ca0 <__aeabi_i2d>
1a00488a:	460b      	mov	r3, r1
1a00488c:	4602      	mov	r2, r0
1a00488e:	e9dd 0100 	ldrd	r0, r1, [sp]
1a004892:	e9cd 6700 	strd	r6, r7, [sp]
1a004896:	f7fd f8b5 	bl	1a001a04 <__aeabi_dsub>
1a00489a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a00489c:	b2ed      	uxtb	r5, r5
1a00489e:	4606      	mov	r6, r0
1a0048a0:	460f      	mov	r7, r1
1a0048a2:	f10b 0401 	add.w	r4, fp, #1
1a0048a6:	2b00      	cmp	r3, #0
1a0048a8:	f000 8458 	beq.w	1a00515c <_dtoa_r+0xc0c>
1a0048ac:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
1a0048b0:	2000      	movs	r0, #0
1a0048b2:	4966      	ldr	r1, [pc, #408]	; (1a004a4c <_dtoa_r+0x4fc>)
1a0048b4:	f7fd fb88 	bl	1a001fc8 <__aeabi_ddiv>
1a0048b8:	e9dd 2300 	ldrd	r2, r3, [sp]
1a0048bc:	f7fd f8a2 	bl	1a001a04 <__aeabi_dsub>
1a0048c0:	f88b 5000 	strb.w	r5, [fp]
1a0048c4:	4632      	mov	r2, r6
1a0048c6:	463b      	mov	r3, r7
1a0048c8:	e9cd 0100 	strd	r0, r1, [sp]
1a0048cc:	f002 fd66 	bl	1a00739c <__aeabi_dcmpgt>
1a0048d0:	2800      	cmp	r0, #0
1a0048d2:	f040 8502 	bne.w	1a0052da <_dtoa_r+0xd8a>
1a0048d6:	4632      	mov	r2, r6
1a0048d8:	463b      	mov	r3, r7
1a0048da:	2000      	movs	r0, #0
1a0048dc:	4959      	ldr	r1, [pc, #356]	; (1a004a44 <_dtoa_r+0x4f4>)
1a0048de:	f7fd f891 	bl	1a001a04 <__aeabi_dsub>
1a0048e2:	4602      	mov	r2, r0
1a0048e4:	460b      	mov	r3, r1
1a0048e6:	e9dd 0100 	ldrd	r0, r1, [sp]
1a0048ea:	f002 fd57 	bl	1a00739c <__aeabi_dcmpgt>
1a0048ee:	2800      	cmp	r0, #0
1a0048f0:	f040 84fb 	bne.w	1a0052ea <_dtoa_r+0xd9a>
1a0048f4:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a0048f6:	2a01      	cmp	r2, #1
1a0048f8:	d050      	beq.n	1a00499c <_dtoa_r+0x44c>
1a0048fa:	445a      	add	r2, fp
1a0048fc:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
1a004900:	f8cd a048 	str.w	sl, [sp, #72]	; 0x48
1a004904:	f8cd b050 	str.w	fp, [sp, #80]	; 0x50
1a004908:	4692      	mov	sl, r2
1a00490a:	46cb      	mov	fp, r9
1a00490c:	e9dd 8900 	ldrd	r8, r9, [sp]
1a004910:	e00c      	b.n	1a00492c <_dtoa_r+0x3dc>
1a004912:	2000      	movs	r0, #0
1a004914:	494b      	ldr	r1, [pc, #300]	; (1a004a44 <_dtoa_r+0x4f4>)
1a004916:	f7fd f875 	bl	1a001a04 <__aeabi_dsub>
1a00491a:	4642      	mov	r2, r8
1a00491c:	464b      	mov	r3, r9
1a00491e:	f002 fd1f 	bl	1a007360 <__aeabi_dcmplt>
1a004922:	2800      	cmp	r0, #0
1a004924:	f040 84dc 	bne.w	1a0052e0 <_dtoa_r+0xd90>
1a004928:	4554      	cmp	r4, sl
1a00492a:	d030      	beq.n	1a00498e <_dtoa_r+0x43e>
1a00492c:	4640      	mov	r0, r8
1a00492e:	4649      	mov	r1, r9
1a004930:	2200      	movs	r2, #0
1a004932:	4b47      	ldr	r3, [pc, #284]	; (1a004a50 <_dtoa_r+0x500>)
1a004934:	f7fd fa1e 	bl	1a001d74 <__aeabi_dmul>
1a004938:	2200      	movs	r2, #0
1a00493a:	4b45      	ldr	r3, [pc, #276]	; (1a004a50 <_dtoa_r+0x500>)
1a00493c:	4680      	mov	r8, r0
1a00493e:	4689      	mov	r9, r1
1a004940:	4630      	mov	r0, r6
1a004942:	4639      	mov	r1, r7
1a004944:	f7fd fa16 	bl	1a001d74 <__aeabi_dmul>
1a004948:	460f      	mov	r7, r1
1a00494a:	4606      	mov	r6, r0
1a00494c:	f002 fd46 	bl	1a0073dc <__aeabi_d2iz>
1a004950:	4605      	mov	r5, r0
1a004952:	f7fd f9a5 	bl	1a001ca0 <__aeabi_i2d>
1a004956:	4602      	mov	r2, r0
1a004958:	460b      	mov	r3, r1
1a00495a:	4630      	mov	r0, r6
1a00495c:	4639      	mov	r1, r7
1a00495e:	f7fd f851 	bl	1a001a04 <__aeabi_dsub>
1a004962:	3530      	adds	r5, #48	; 0x30
1a004964:	b2ed      	uxtb	r5, r5
1a004966:	4642      	mov	r2, r8
1a004968:	464b      	mov	r3, r9
1a00496a:	f804 5b01 	strb.w	r5, [r4], #1
1a00496e:	4606      	mov	r6, r0
1a004970:	460f      	mov	r7, r1
1a004972:	f002 fcf5 	bl	1a007360 <__aeabi_dcmplt>
1a004976:	4632      	mov	r2, r6
1a004978:	463b      	mov	r3, r7
1a00497a:	2800      	cmp	r0, #0
1a00497c:	d0c9      	beq.n	1a004912 <_dtoa_r+0x3c2>
1a00497e:	9b16      	ldr	r3, [sp, #88]	; 0x58
1a004980:	f8dd a048 	ldr.w	sl, [sp, #72]	; 0x48
1a004984:	9306      	str	r3, [sp, #24]
1a004986:	46d9      	mov	r9, fp
1a004988:	f8dd b050 	ldr.w	fp, [sp, #80]	; 0x50
1a00498c:	e236      	b.n	1a004dfc <_dtoa_r+0x8ac>
1a00498e:	46d9      	mov	r9, fp
1a004990:	f8dd 805c 	ldr.w	r8, [sp, #92]	; 0x5c
1a004994:	f8dd a048 	ldr.w	sl, [sp, #72]	; 0x48
1a004998:	f8dd b050 	ldr.w	fp, [sp, #80]	; 0x50
1a00499c:	e9dd 3410 	ldrd	r3, r4, [sp, #64]	; 0x40
1a0049a0:	e9cd 3400 	strd	r3, r4, [sp]
1a0049a4:	9b19      	ldr	r3, [sp, #100]	; 0x64
1a0049a6:	2b00      	cmp	r3, #0
1a0049a8:	f2c0 80ae 	blt.w	1a004b08 <_dtoa_r+0x5b8>
1a0049ac:	9a06      	ldr	r2, [sp, #24]
1a0049ae:	2a0e      	cmp	r2, #14
1a0049b0:	f300 80aa 	bgt.w	1a004b08 <_dtoa_r+0x5b8>
1a0049b4:	4b21      	ldr	r3, [pc, #132]	; (1a004a3c <_dtoa_r+0x4ec>)
1a0049b6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
1a0049ba:	ed93 7b00 	vldr	d7, [r3]
1a0049be:	9b07      	ldr	r3, [sp, #28]
1a0049c0:	2b00      	cmp	r3, #0
1a0049c2:	ed8d 7b02 	vstr	d7, [sp, #8]
1a0049c6:	f2c0 82be 	blt.w	1a004f46 <_dtoa_r+0x9f6>
1a0049ca:	e9dd 6700 	ldrd	r6, r7, [sp]
1a0049ce:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a0049d2:	4630      	mov	r0, r6
1a0049d4:	4639      	mov	r1, r7
1a0049d6:	f7fd faf7 	bl	1a001fc8 <__aeabi_ddiv>
1a0049da:	f002 fcff 	bl	1a0073dc <__aeabi_d2iz>
1a0049de:	4605      	mov	r5, r0
1a0049e0:	f7fd f95e 	bl	1a001ca0 <__aeabi_i2d>
1a0049e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a0049e8:	f7fd f9c4 	bl	1a001d74 <__aeabi_dmul>
1a0049ec:	460b      	mov	r3, r1
1a0049ee:	4602      	mov	r2, r0
1a0049f0:	4639      	mov	r1, r7
1a0049f2:	4630      	mov	r0, r6
1a0049f4:	f7fd f806 	bl	1a001a04 <__aeabi_dsub>
1a0049f8:	f105 0330 	add.w	r3, r5, #48	; 0x30
1a0049fc:	f88b 3000 	strb.w	r3, [fp]
1a004a00:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a004a02:	2b01      	cmp	r3, #1
1a004a04:	4606      	mov	r6, r0
1a004a06:	460f      	mov	r7, r1
1a004a08:	f10b 0401 	add.w	r4, fp, #1
1a004a0c:	d053      	beq.n	1a004ab6 <_dtoa_r+0x566>
1a004a0e:	2200      	movs	r2, #0
1a004a10:	4b0f      	ldr	r3, [pc, #60]	; (1a004a50 <_dtoa_r+0x500>)
1a004a12:	f7fd f9af 	bl	1a001d74 <__aeabi_dmul>
1a004a16:	2200      	movs	r2, #0
1a004a18:	2300      	movs	r3, #0
1a004a1a:	4606      	mov	r6, r0
1a004a1c:	460f      	mov	r7, r1
1a004a1e:	f002 fc95 	bl	1a00734c <__aeabi_dcmpeq>
1a004a22:	2800      	cmp	r0, #0
1a004a24:	f040 81ea 	bne.w	1a004dfc <_dtoa_r+0x8ac>
1a004a28:	f8cd a000 	str.w	sl, [sp]
1a004a2c:	f8cd 901c 	str.w	r9, [sp, #28]
1a004a30:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
1a004a34:	e9dd 9a02 	ldrd	r9, sl, [sp, #8]
1a004a38:	e017      	b.n	1a004a6a <_dtoa_r+0x51a>
1a004a3a:	bf00      	nop
1a004a3c:	1a0078e0 	.word	0x1a0078e0
1a004a40:	1a0078b8 	.word	0x1a0078b8
1a004a44:	3ff00000 	.word	0x3ff00000
1a004a48:	401c0000 	.word	0x401c0000
1a004a4c:	3fe00000 	.word	0x3fe00000
1a004a50:	40240000 	.word	0x40240000
1a004a54:	f7fd f98e 	bl	1a001d74 <__aeabi_dmul>
1a004a58:	2200      	movs	r2, #0
1a004a5a:	2300      	movs	r3, #0
1a004a5c:	4606      	mov	r6, r0
1a004a5e:	460f      	mov	r7, r1
1a004a60:	f002 fc74 	bl	1a00734c <__aeabi_dcmpeq>
1a004a64:	2800      	cmp	r0, #0
1a004a66:	f040 833d 	bne.w	1a0050e4 <_dtoa_r+0xb94>
1a004a6a:	464a      	mov	r2, r9
1a004a6c:	4653      	mov	r3, sl
1a004a6e:	4630      	mov	r0, r6
1a004a70:	4639      	mov	r1, r7
1a004a72:	f7fd faa9 	bl	1a001fc8 <__aeabi_ddiv>
1a004a76:	f002 fcb1 	bl	1a0073dc <__aeabi_d2iz>
1a004a7a:	4605      	mov	r5, r0
1a004a7c:	f7fd f910 	bl	1a001ca0 <__aeabi_i2d>
1a004a80:	464a      	mov	r2, r9
1a004a82:	4653      	mov	r3, sl
1a004a84:	f7fd f976 	bl	1a001d74 <__aeabi_dmul>
1a004a88:	4602      	mov	r2, r0
1a004a8a:	460b      	mov	r3, r1
1a004a8c:	4630      	mov	r0, r6
1a004a8e:	4639      	mov	r1, r7
1a004a90:	f7fc ffb8 	bl	1a001a04 <__aeabi_dsub>
1a004a94:	f105 0c30 	add.w	ip, r5, #48	; 0x30
1a004a98:	f804 cb01 	strb.w	ip, [r4], #1
1a004a9c:	eba4 0c0b 	sub.w	ip, r4, fp
1a004aa0:	45e0      	cmp	r8, ip
1a004aa2:	4606      	mov	r6, r0
1a004aa4:	460f      	mov	r7, r1
1a004aa6:	f04f 0200 	mov.w	r2, #0
1a004aaa:	4bc1      	ldr	r3, [pc, #772]	; (1a004db0 <_dtoa_r+0x860>)
1a004aac:	d1d2      	bne.n	1a004a54 <_dtoa_r+0x504>
1a004aae:	f8dd a000 	ldr.w	sl, [sp]
1a004ab2:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a004ab6:	4632      	mov	r2, r6
1a004ab8:	463b      	mov	r3, r7
1a004aba:	4630      	mov	r0, r6
1a004abc:	4639      	mov	r1, r7
1a004abe:	f7fc ffa3 	bl	1a001a08 <__adddf3>
1a004ac2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a004ac6:	4606      	mov	r6, r0
1a004ac8:	460f      	mov	r7, r1
1a004aca:	f002 fc67 	bl	1a00739c <__aeabi_dcmpgt>
1a004ace:	b958      	cbnz	r0, 1a004ae8 <_dtoa_r+0x598>
1a004ad0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a004ad4:	4630      	mov	r0, r6
1a004ad6:	4639      	mov	r1, r7
1a004ad8:	f002 fc38 	bl	1a00734c <__aeabi_dcmpeq>
1a004adc:	2800      	cmp	r0, #0
1a004ade:	f000 818d 	beq.w	1a004dfc <_dtoa_r+0x8ac>
1a004ae2:	07e9      	lsls	r1, r5, #31
1a004ae4:	f140 818a 	bpl.w	1a004dfc <_dtoa_r+0x8ac>
1a004ae8:	f814 5c01 	ldrb.w	r5, [r4, #-1]
1a004aec:	e005      	b.n	1a004afa <_dtoa_r+0x5aa>
1a004aee:	459b      	cmp	fp, r3
1a004af0:	f000 8373 	beq.w	1a0051da <_dtoa_r+0xc8a>
1a004af4:	f813 5c01 	ldrb.w	r5, [r3, #-1]
1a004af8:	461c      	mov	r4, r3
1a004afa:	2d39      	cmp	r5, #57	; 0x39
1a004afc:	f104 33ff 	add.w	r3, r4, #4294967295	; 0xffffffff
1a004b00:	d0f5      	beq.n	1a004aee <_dtoa_r+0x59e>
1a004b02:	3501      	adds	r5, #1
1a004b04:	701d      	strb	r5, [r3, #0]
1a004b06:	e179      	b.n	1a004dfc <_dtoa_r+0x8ac>
1a004b08:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1a004b0a:	2a00      	cmp	r2, #0
1a004b0c:	d03b      	beq.n	1a004b86 <_dtoa_r+0x636>
1a004b0e:	9a02      	ldr	r2, [sp, #8]
1a004b10:	2a01      	cmp	r2, #1
1a004b12:	f340 820b 	ble.w	1a004f2c <_dtoa_r+0x9dc>
1a004b16:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a004b18:	1e5f      	subs	r7, r3, #1
1a004b1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a004b1c:	42bb      	cmp	r3, r7
1a004b1e:	f2c0 82e6 	blt.w	1a0050ee <_dtoa_r+0xb9e>
1a004b22:	1bdf      	subs	r7, r3, r7
1a004b24:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a004b26:	2b00      	cmp	r3, #0
1a004b28:	f2c0 830b 	blt.w	1a005142 <_dtoa_r+0xbf2>
1a004b2c:	9a08      	ldr	r2, [sp, #32]
1a004b2e:	4614      	mov	r4, r2
1a004b30:	441a      	add	r2, r3
1a004b32:	4498      	add	r8, r3
1a004b34:	9208      	str	r2, [sp, #32]
1a004b36:	2101      	movs	r1, #1
1a004b38:	4648      	mov	r0, r9
1a004b3a:	f001 fcf9 	bl	1a006530 <__i2b>
1a004b3e:	4605      	mov	r5, r0
1a004b40:	e024      	b.n	1a004b8c <_dtoa_r+0x63c>
1a004b42:	2301      	movs	r3, #1
1a004b44:	930d      	str	r3, [sp, #52]	; 0x34
1a004b46:	e5af      	b.n	1a0046a8 <_dtoa_r+0x158>
1a004b48:	9a08      	ldr	r2, [sp, #32]
1a004b4a:	9b06      	ldr	r3, [sp, #24]
1a004b4c:	1ad2      	subs	r2, r2, r3
1a004b4e:	425b      	negs	r3, r3
1a004b50:	930b      	str	r3, [sp, #44]	; 0x2c
1a004b52:	2300      	movs	r3, #0
1a004b54:	9208      	str	r2, [sp, #32]
1a004b56:	930c      	str	r3, [sp, #48]	; 0x30
1a004b58:	e5b5      	b.n	1a0046c6 <_dtoa_r+0x176>
1a004b5a:	f1c4 0301 	rsb	r3, r4, #1
1a004b5e:	9308      	str	r3, [sp, #32]
1a004b60:	f04f 0800 	mov.w	r8, #0
1a004b64:	e5a7      	b.n	1a0046b6 <_dtoa_r+0x166>
1a004b66:	f8dd 8018 	ldr.w	r8, [sp, #24]
1a004b6a:	4640      	mov	r0, r8
1a004b6c:	f7fd f898 	bl	1a001ca0 <__aeabi_i2d>
1a004b70:	4632      	mov	r2, r6
1a004b72:	463b      	mov	r3, r7
1a004b74:	f002 fbea 	bl	1a00734c <__aeabi_dcmpeq>
1a004b78:	2800      	cmp	r0, #0
1a004b7a:	f47f ad81 	bne.w	1a004680 <_dtoa_r+0x130>
1a004b7e:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
1a004b82:	9306      	str	r3, [sp, #24]
1a004b84:	e57c      	b.n	1a004680 <_dtoa_r+0x130>
1a004b86:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
1a004b88:	9c08      	ldr	r4, [sp, #32]
1a004b8a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
1a004b8c:	2c00      	cmp	r4, #0
1a004b8e:	dd0c      	ble.n	1a004baa <_dtoa_r+0x65a>
1a004b90:	f1b8 0f00 	cmp.w	r8, #0
1a004b94:	dd09      	ble.n	1a004baa <_dtoa_r+0x65a>
1a004b96:	4544      	cmp	r4, r8
1a004b98:	9a08      	ldr	r2, [sp, #32]
1a004b9a:	4623      	mov	r3, r4
1a004b9c:	bfa8      	it	ge
1a004b9e:	4643      	movge	r3, r8
1a004ba0:	1ad2      	subs	r2, r2, r3
1a004ba2:	9208      	str	r2, [sp, #32]
1a004ba4:	1ae4      	subs	r4, r4, r3
1a004ba6:	eba8 0803 	sub.w	r8, r8, r3
1a004baa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a004bac:	b16b      	cbz	r3, 1a004bca <_dtoa_r+0x67a>
1a004bae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1a004bb0:	2a00      	cmp	r2, #0
1a004bb2:	f000 8290 	beq.w	1a0050d6 <_dtoa_r+0xb86>
1a004bb6:	1bde      	subs	r6, r3, r7
1a004bb8:	2f00      	cmp	r7, #0
1a004bba:	f040 819b 	bne.w	1a004ef4 <_dtoa_r+0x9a4>
1a004bbe:	4651      	mov	r1, sl
1a004bc0:	4632      	mov	r2, r6
1a004bc2:	4648      	mov	r0, r9
1a004bc4:	f001 fd64 	bl	1a006690 <__pow5mult>
1a004bc8:	4682      	mov	sl, r0
1a004bca:	2101      	movs	r1, #1
1a004bcc:	4648      	mov	r0, r9
1a004bce:	f001 fcaf 	bl	1a006530 <__i2b>
1a004bd2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1a004bd4:	4606      	mov	r6, r0
1a004bd6:	2a00      	cmp	r2, #0
1a004bd8:	f040 8125 	bne.w	1a004e26 <_dtoa_r+0x8d6>
1a004bdc:	9b02      	ldr	r3, [sp, #8]
1a004bde:	2b01      	cmp	r3, #1
1a004be0:	f340 816c 	ble.w	1a004ebc <_dtoa_r+0x96c>
1a004be4:	2001      	movs	r0, #1
1a004be6:	4440      	add	r0, r8
1a004be8:	f010 001f 	ands.w	r0, r0, #31
1a004bec:	f000 8119 	beq.w	1a004e22 <_dtoa_r+0x8d2>
1a004bf0:	f1c0 0320 	rsb	r3, r0, #32
1a004bf4:	2b04      	cmp	r3, #4
1a004bf6:	f340 83ac 	ble.w	1a005352 <_dtoa_r+0xe02>
1a004bfa:	f1c0 001c 	rsb	r0, r0, #28
1a004bfe:	9b08      	ldr	r3, [sp, #32]
1a004c00:	4403      	add	r3, r0
1a004c02:	9308      	str	r3, [sp, #32]
1a004c04:	4404      	add	r4, r0
1a004c06:	4480      	add	r8, r0
1a004c08:	9b08      	ldr	r3, [sp, #32]
1a004c0a:	2b00      	cmp	r3, #0
1a004c0c:	dd05      	ble.n	1a004c1a <_dtoa_r+0x6ca>
1a004c0e:	4651      	mov	r1, sl
1a004c10:	461a      	mov	r2, r3
1a004c12:	4648      	mov	r0, r9
1a004c14:	f001 fd8c 	bl	1a006730 <__lshift>
1a004c18:	4682      	mov	sl, r0
1a004c1a:	f1b8 0f00 	cmp.w	r8, #0
1a004c1e:	dd05      	ble.n	1a004c2c <_dtoa_r+0x6dc>
1a004c20:	4631      	mov	r1, r6
1a004c22:	4642      	mov	r2, r8
1a004c24:	4648      	mov	r0, r9
1a004c26:	f001 fd83 	bl	1a006730 <__lshift>
1a004c2a:	4606      	mov	r6, r0
1a004c2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1a004c2e:	2b00      	cmp	r3, #0
1a004c30:	d177      	bne.n	1a004d22 <_dtoa_r+0x7d2>
1a004c32:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a004c34:	2b00      	cmp	r3, #0
1a004c36:	f340 8209 	ble.w	1a00504c <_dtoa_r+0xafc>
1a004c3a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a004c3c:	2b00      	cmp	r3, #0
1a004c3e:	f000 8089 	beq.w	1a004d54 <_dtoa_r+0x804>
1a004c42:	2c00      	cmp	r4, #0
1a004c44:	f300 816b 	bgt.w	1a004f1e <_dtoa_r+0x9ce>
1a004c48:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a004c4a:	2b00      	cmp	r3, #0
1a004c4c:	f040 81cd 	bne.w	1a004fea <_dtoa_r+0xa9a>
1a004c50:	46a8      	mov	r8, r5
1a004c52:	9a00      	ldr	r2, [sp, #0]
1a004c54:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
1a004c58:	f002 0201 	and.w	r2, r2, #1
1a004c5c:	920a      	str	r2, [sp, #40]	; 0x28
1a004c5e:	9a09      	ldr	r2, [sp, #36]	; 0x24
1a004c60:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
1a004c64:	441a      	add	r2, r3
1a004c66:	465f      	mov	r7, fp
1a004c68:	9209      	str	r2, [sp, #36]	; 0x24
1a004c6a:	46b3      	mov	fp, r6
1a004c6c:	4659      	mov	r1, fp
1a004c6e:	4650      	mov	r0, sl
1a004c70:	f7ff fbdc 	bl	1a00442c <quorem>
1a004c74:	4629      	mov	r1, r5
1a004c76:	4604      	mov	r4, r0
1a004c78:	4650      	mov	r0, sl
1a004c7a:	f001 fdaf 	bl	1a0067dc <__mcmp>
1a004c7e:	4659      	mov	r1, fp
1a004c80:	4606      	mov	r6, r0
1a004c82:	4642      	mov	r2, r8
1a004c84:	4648      	mov	r0, r9
1a004c86:	f001 fdc5 	bl	1a006814 <__mdiff>
1a004c8a:	f104 0330 	add.w	r3, r4, #48	; 0x30
1a004c8e:	9300      	str	r3, [sp, #0]
1a004c90:	68c3      	ldr	r3, [r0, #12]
1a004c92:	4601      	mov	r1, r0
1a004c94:	2b00      	cmp	r3, #0
1a004c96:	f040 81d4 	bne.w	1a005042 <_dtoa_r+0xaf2>
1a004c9a:	9008      	str	r0, [sp, #32]
1a004c9c:	4650      	mov	r0, sl
1a004c9e:	f001 fd9d 	bl	1a0067dc <__mcmp>
1a004ca2:	9a08      	ldr	r2, [sp, #32]
1a004ca4:	9007      	str	r0, [sp, #28]
1a004ca6:	4611      	mov	r1, r2
1a004ca8:	4648      	mov	r0, r9
1a004caa:	f001 fba7 	bl	1a0063fc <_Bfree>
1a004cae:	9b07      	ldr	r3, [sp, #28]
1a004cb0:	b933      	cbnz	r3, 1a004cc0 <_dtoa_r+0x770>
1a004cb2:	9a02      	ldr	r2, [sp, #8]
1a004cb4:	b922      	cbnz	r2, 1a004cc0 <_dtoa_r+0x770>
1a004cb6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a004cb8:	2b00      	cmp	r3, #0
1a004cba:	f000 8319 	beq.w	1a0052f0 <_dtoa_r+0xda0>
1a004cbe:	9b02      	ldr	r3, [sp, #8]
1a004cc0:	2e00      	cmp	r6, #0
1a004cc2:	f2c0 821c 	blt.w	1a0050fe <_dtoa_r+0xbae>
1a004cc6:	d105      	bne.n	1a004cd4 <_dtoa_r+0x784>
1a004cc8:	9a02      	ldr	r2, [sp, #8]
1a004cca:	b91a      	cbnz	r2, 1a004cd4 <_dtoa_r+0x784>
1a004ccc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1a004cce:	2a00      	cmp	r2, #0
1a004cd0:	f000 8215 	beq.w	1a0050fe <_dtoa_r+0xbae>
1a004cd4:	2b00      	cmp	r3, #0
1a004cd6:	f107 0401 	add.w	r4, r7, #1
1a004cda:	f300 8225 	bgt.w	1a005128 <_dtoa_r+0xbd8>
1a004cde:	9b00      	ldr	r3, [sp, #0]
1a004ce0:	703b      	strb	r3, [r7, #0]
1a004ce2:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a004ce4:	42bb      	cmp	r3, r7
1a004ce6:	f000 8230 	beq.w	1a00514a <_dtoa_r+0xbfa>
1a004cea:	4651      	mov	r1, sl
1a004cec:	2300      	movs	r3, #0
1a004cee:	220a      	movs	r2, #10
1a004cf0:	4648      	mov	r0, r9
1a004cf2:	f001 fb8d 	bl	1a006410 <__multadd>
1a004cf6:	4545      	cmp	r5, r8
1a004cf8:	4682      	mov	sl, r0
1a004cfa:	4629      	mov	r1, r5
1a004cfc:	f04f 0300 	mov.w	r3, #0
1a004d00:	f04f 020a 	mov.w	r2, #10
1a004d04:	4648      	mov	r0, r9
1a004d06:	f000 8196 	beq.w	1a005036 <_dtoa_r+0xae6>
1a004d0a:	f001 fb81 	bl	1a006410 <__multadd>
1a004d0e:	4641      	mov	r1, r8
1a004d10:	4605      	mov	r5, r0
1a004d12:	2300      	movs	r3, #0
1a004d14:	220a      	movs	r2, #10
1a004d16:	4648      	mov	r0, r9
1a004d18:	f001 fb7a 	bl	1a006410 <__multadd>
1a004d1c:	4627      	mov	r7, r4
1a004d1e:	4680      	mov	r8, r0
1a004d20:	e7a4      	b.n	1a004c6c <_dtoa_r+0x71c>
1a004d22:	4631      	mov	r1, r6
1a004d24:	4650      	mov	r0, sl
1a004d26:	f001 fd59 	bl	1a0067dc <__mcmp>
1a004d2a:	2800      	cmp	r0, #0
1a004d2c:	da81      	bge.n	1a004c32 <_dtoa_r+0x6e2>
1a004d2e:	9f06      	ldr	r7, [sp, #24]
1a004d30:	4651      	mov	r1, sl
1a004d32:	2300      	movs	r3, #0
1a004d34:	220a      	movs	r2, #10
1a004d36:	4648      	mov	r0, r9
1a004d38:	3f01      	subs	r7, #1
1a004d3a:	9706      	str	r7, [sp, #24]
1a004d3c:	f001 fb68 	bl	1a006410 <__multadd>
1a004d40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a004d42:	4682      	mov	sl, r0
1a004d44:	2b00      	cmp	r3, #0
1a004d46:	f040 82eb 	bne.w	1a005320 <_dtoa_r+0xdd0>
1a004d4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a004d4c:	2b00      	cmp	r3, #0
1a004d4e:	f340 82f3 	ble.w	1a005338 <_dtoa_r+0xde8>
1a004d52:	9309      	str	r3, [sp, #36]	; 0x24
1a004d54:	465c      	mov	r4, fp
1a004d56:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
1a004d5a:	e002      	b.n	1a004d62 <_dtoa_r+0x812>
1a004d5c:	f001 fb58 	bl	1a006410 <__multadd>
1a004d60:	4682      	mov	sl, r0
1a004d62:	4631      	mov	r1, r6
1a004d64:	4650      	mov	r0, sl
1a004d66:	f7ff fb61 	bl	1a00442c <quorem>
1a004d6a:	f100 0730 	add.w	r7, r0, #48	; 0x30
1a004d6e:	f804 7b01 	strb.w	r7, [r4], #1
1a004d72:	eba4 030b 	sub.w	r3, r4, fp
1a004d76:	4598      	cmp	r8, r3
1a004d78:	f04f 020a 	mov.w	r2, #10
1a004d7c:	f04f 0300 	mov.w	r3, #0
1a004d80:	4651      	mov	r1, sl
1a004d82:	4648      	mov	r0, r9
1a004d84:	dcea      	bgt.n	1a004d5c <_dtoa_r+0x80c>
1a004d86:	2300      	movs	r3, #0
1a004d88:	9700      	str	r7, [sp, #0]
1a004d8a:	9302      	str	r3, [sp, #8]
1a004d8c:	4651      	mov	r1, sl
1a004d8e:	2201      	movs	r2, #1
1a004d90:	4648      	mov	r0, r9
1a004d92:	f001 fccd 	bl	1a006730 <__lshift>
1a004d96:	4631      	mov	r1, r6
1a004d98:	4682      	mov	sl, r0
1a004d9a:	f001 fd1f 	bl	1a0067dc <__mcmp>
1a004d9e:	2800      	cmp	r0, #0
1a004da0:	f814 2c01 	ldrb.w	r2, [r4, #-1]
1a004da4:	dc14      	bgt.n	1a004dd0 <_dtoa_r+0x880>
1a004da6:	d108      	bne.n	1a004dba <_dtoa_r+0x86a>
1a004da8:	9b00      	ldr	r3, [sp, #0]
1a004daa:	07db      	lsls	r3, r3, #31
1a004dac:	d410      	bmi.n	1a004dd0 <_dtoa_r+0x880>
1a004dae:	e004      	b.n	1a004dba <_dtoa_r+0x86a>
1a004db0:	40240000 	.word	0x40240000
1a004db4:	f814 2c02 	ldrb.w	r2, [r4, #-2]
1a004db8:	461c      	mov	r4, r3
1a004dba:	2a30      	cmp	r2, #48	; 0x30
1a004dbc:	f104 33ff 	add.w	r3, r4, #4294967295	; 0xffffffff
1a004dc0:	d0f8      	beq.n	1a004db4 <_dtoa_r+0x864>
1a004dc2:	e00b      	b.n	1a004ddc <_dtoa_r+0x88c>
1a004dc4:	459b      	cmp	fp, r3
1a004dc6:	f000 814e 	beq.w	1a005066 <_dtoa_r+0xb16>
1a004dca:	f813 2c01 	ldrb.w	r2, [r3, #-1]
1a004dce:	461c      	mov	r4, r3
1a004dd0:	2a39      	cmp	r2, #57	; 0x39
1a004dd2:	f104 33ff 	add.w	r3, r4, #4294967295	; 0xffffffff
1a004dd6:	d0f5      	beq.n	1a004dc4 <_dtoa_r+0x874>
1a004dd8:	3201      	adds	r2, #1
1a004dda:	701a      	strb	r2, [r3, #0]
1a004ddc:	4631      	mov	r1, r6
1a004dde:	4648      	mov	r0, r9
1a004de0:	f001 fb0c 	bl	1a0063fc <_Bfree>
1a004de4:	b155      	cbz	r5, 1a004dfc <_dtoa_r+0x8ac>
1a004de6:	9902      	ldr	r1, [sp, #8]
1a004de8:	b121      	cbz	r1, 1a004df4 <_dtoa_r+0x8a4>
1a004dea:	42a9      	cmp	r1, r5
1a004dec:	d002      	beq.n	1a004df4 <_dtoa_r+0x8a4>
1a004dee:	4648      	mov	r0, r9
1a004df0:	f001 fb04 	bl	1a0063fc <_Bfree>
1a004df4:	4629      	mov	r1, r5
1a004df6:	4648      	mov	r0, r9
1a004df8:	f001 fb00 	bl	1a0063fc <_Bfree>
1a004dfc:	4651      	mov	r1, sl
1a004dfe:	4648      	mov	r0, r9
1a004e00:	f001 fafc 	bl	1a0063fc <_Bfree>
1a004e04:	2200      	movs	r2, #0
1a004e06:	9b06      	ldr	r3, [sp, #24]
1a004e08:	7022      	strb	r2, [r4, #0]
1a004e0a:	9a05      	ldr	r2, [sp, #20]
1a004e0c:	3301      	adds	r3, #1
1a004e0e:	6013      	str	r3, [r2, #0]
1a004e10:	9b25      	ldr	r3, [sp, #148]	; 0x94
1a004e12:	2b00      	cmp	r3, #0
1a004e14:	f43f abdb 	beq.w	1a0045ce <_dtoa_r+0x7e>
1a004e18:	4658      	mov	r0, fp
1a004e1a:	601c      	str	r4, [r3, #0]
1a004e1c:	b01b      	add	sp, #108	; 0x6c
1a004e1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a004e22:	201c      	movs	r0, #28
1a004e24:	e6eb      	b.n	1a004bfe <_dtoa_r+0x6ae>
1a004e26:	4601      	mov	r1, r0
1a004e28:	4648      	mov	r0, r9
1a004e2a:	f001 fc31 	bl	1a006690 <__pow5mult>
1a004e2e:	9b02      	ldr	r3, [sp, #8]
1a004e30:	2b01      	cmp	r3, #1
1a004e32:	4606      	mov	r6, r0
1a004e34:	f340 80d4 	ble.w	1a004fe0 <_dtoa_r+0xa90>
1a004e38:	2300      	movs	r3, #0
1a004e3a:	930c      	str	r3, [sp, #48]	; 0x30
1a004e3c:	6933      	ldr	r3, [r6, #16]
1a004e3e:	eb06 0383 	add.w	r3, r6, r3, lsl #2
1a004e42:	6918      	ldr	r0, [r3, #16]
1a004e44:	f001 fb24 	bl	1a006490 <__hi0bits>
1a004e48:	f1c0 0020 	rsb	r0, r0, #32
1a004e4c:	e6cb      	b.n	1a004be6 <_dtoa_r+0x696>
1a004e4e:	900d      	str	r0, [sp, #52]	; 0x34
1a004e50:	e42a      	b.n	1a0046a8 <_dtoa_r+0x158>
1a004e52:	2501      	movs	r5, #1
1a004e54:	e440      	b.n	1a0046d8 <_dtoa_r+0x188>
1a004e56:	f1c3 0820 	rsb	r8, r3, #32
1a004e5a:	9b00      	ldr	r3, [sp, #0]
1a004e5c:	fa03 f008 	lsl.w	r0, r3, r8
1a004e60:	f7ff bbd8 	b.w	1a004614 <_dtoa_r+0xc4>
1a004e64:	2300      	movs	r3, #0
1a004e66:	930a      	str	r3, [sp, #40]	; 0x28
1a004e68:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
1a004e6c:	4413      	add	r3, r2
1a004e6e:	930e      	str	r3, [sp, #56]	; 0x38
1a004e70:	3301      	adds	r3, #1
1a004e72:	2b01      	cmp	r3, #1
1a004e74:	461e      	mov	r6, r3
1a004e76:	9309      	str	r3, [sp, #36]	; 0x24
1a004e78:	bfb8      	it	lt
1a004e7a:	2601      	movlt	r6, #1
1a004e7c:	2100      	movs	r1, #0
1a004e7e:	2e17      	cmp	r6, #23
1a004e80:	f8c9 1044 	str.w	r1, [r9, #68]	; 0x44
1a004e84:	9c09      	ldr	r4, [sp, #36]	; 0x24
1a004e86:	f77f ac89 	ble.w	1a00479c <_dtoa_r+0x24c>
1a004e8a:	2201      	movs	r2, #1
1a004e8c:	2304      	movs	r3, #4
1a004e8e:	005b      	lsls	r3, r3, #1
1a004e90:	f103 0014 	add.w	r0, r3, #20
1a004e94:	42b0      	cmp	r0, r6
1a004e96:	4611      	mov	r1, r2
1a004e98:	f102 0201 	add.w	r2, r2, #1
1a004e9c:	d9f7      	bls.n	1a004e8e <_dtoa_r+0x93e>
1a004e9e:	f8c9 1044 	str.w	r1, [r9, #68]	; 0x44
1a004ea2:	e47b      	b.n	1a00479c <_dtoa_r+0x24c>
1a004ea4:	2300      	movs	r3, #0
1a004ea6:	930a      	str	r3, [sp, #40]	; 0x28
1a004ea8:	9e07      	ldr	r6, [sp, #28]
1a004eaa:	2e00      	cmp	r6, #0
1a004eac:	f340 80e2 	ble.w	1a005074 <_dtoa_r+0xb24>
1a004eb0:	960e      	str	r6, [sp, #56]	; 0x38
1a004eb2:	9609      	str	r6, [sp, #36]	; 0x24
1a004eb4:	e7e2      	b.n	1a004e7c <_dtoa_r+0x92c>
1a004eb6:	2301      	movs	r3, #1
1a004eb8:	930a      	str	r3, [sp, #40]	; 0x28
1a004eba:	e7f5      	b.n	1a004ea8 <_dtoa_r+0x958>
1a004ebc:	9b00      	ldr	r3, [sp, #0]
1a004ebe:	2b00      	cmp	r3, #0
1a004ec0:	f47f ae90 	bne.w	1a004be4 <_dtoa_r+0x694>
1a004ec4:	e9dd 1200 	ldrd	r1, r2, [sp]
1a004ec8:	f3c2 0313 	ubfx	r3, r2, #0, #20
1a004ecc:	2b00      	cmp	r3, #0
1a004ece:	f040 8192 	bne.w	1a0051f6 <_dtoa_r+0xca6>
1a004ed2:	f022 4300 	bic.w	r3, r2, #2147483648	; 0x80000000
1a004ed6:	0d1b      	lsrs	r3, r3, #20
1a004ed8:	051b      	lsls	r3, r3, #20
1a004eda:	b12b      	cbz	r3, 1a004ee8 <_dtoa_r+0x998>
1a004edc:	9b08      	ldr	r3, [sp, #32]
1a004ede:	3301      	adds	r3, #1
1a004ee0:	9308      	str	r3, [sp, #32]
1a004ee2:	f108 0801 	add.w	r8, r8, #1
1a004ee6:	2301      	movs	r3, #1
1a004ee8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1a004eea:	930c      	str	r3, [sp, #48]	; 0x30
1a004eec:	2a00      	cmp	r2, #0
1a004eee:	f43f ae79 	beq.w	1a004be4 <_dtoa_r+0x694>
1a004ef2:	e7a3      	b.n	1a004e3c <_dtoa_r+0x8ec>
1a004ef4:	463a      	mov	r2, r7
1a004ef6:	4629      	mov	r1, r5
1a004ef8:	4648      	mov	r0, r9
1a004efa:	f001 fbc9 	bl	1a006690 <__pow5mult>
1a004efe:	4652      	mov	r2, sl
1a004f00:	4601      	mov	r1, r0
1a004f02:	4605      	mov	r5, r0
1a004f04:	4648      	mov	r0, r9
1a004f06:	f001 fb1d 	bl	1a006544 <__multiply>
1a004f0a:	4651      	mov	r1, sl
1a004f0c:	4607      	mov	r7, r0
1a004f0e:	4648      	mov	r0, r9
1a004f10:	f001 fa74 	bl	1a0063fc <_Bfree>
1a004f14:	46ba      	mov	sl, r7
1a004f16:	2e00      	cmp	r6, #0
1a004f18:	f43f ae57 	beq.w	1a004bca <_dtoa_r+0x67a>
1a004f1c:	e64f      	b.n	1a004bbe <_dtoa_r+0x66e>
1a004f1e:	4629      	mov	r1, r5
1a004f20:	4622      	mov	r2, r4
1a004f22:	4648      	mov	r0, r9
1a004f24:	f001 fc04 	bl	1a006730 <__lshift>
1a004f28:	4605      	mov	r5, r0
1a004f2a:	e68d      	b.n	1a004c48 <_dtoa_r+0x6f8>
1a004f2c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
1a004f2e:	2a00      	cmp	r2, #0
1a004f30:	f000 815d 	beq.w	1a0051ee <_dtoa_r+0xc9e>
1a004f34:	f203 4333 	addw	r3, r3, #1075	; 0x433
1a004f38:	9a08      	ldr	r2, [sp, #32]
1a004f3a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
1a004f3c:	4614      	mov	r4, r2
1a004f3e:	441a      	add	r2, r3
1a004f40:	4498      	add	r8, r3
1a004f42:	9208      	str	r2, [sp, #32]
1a004f44:	e5f7      	b.n	1a004b36 <_dtoa_r+0x5e6>
1a004f46:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a004f48:	2b00      	cmp	r3, #0
1a004f4a:	f73f ad3e 	bgt.w	1a0049ca <_dtoa_r+0x47a>
1a004f4e:	f040 80bc 	bne.w	1a0050ca <_dtoa_r+0xb7a>
1a004f52:	ec51 0b17 	vmov	r0, r1, d7
1a004f56:	2200      	movs	r2, #0
1a004f58:	4bb2      	ldr	r3, [pc, #712]	; (1a005224 <_dtoa_r+0xcd4>)
1a004f5a:	f7fc ff0b 	bl	1a001d74 <__aeabi_dmul>
1a004f5e:	e9dd 2300 	ldrd	r2, r3, [sp]
1a004f62:	f002 fa11 	bl	1a007388 <__aeabi_dcmpge>
1a004f66:	9e09      	ldr	r6, [sp, #36]	; 0x24
1a004f68:	4635      	mov	r5, r6
1a004f6a:	2800      	cmp	r0, #0
1a004f6c:	d176      	bne.n	1a00505c <_dtoa_r+0xb0c>
1a004f6e:	9a06      	ldr	r2, [sp, #24]
1a004f70:	2331      	movs	r3, #49	; 0x31
1a004f72:	3201      	adds	r2, #1
1a004f74:	9206      	str	r2, [sp, #24]
1a004f76:	f88b 3000 	strb.w	r3, [fp]
1a004f7a:	f10b 0401 	add.w	r4, fp, #1
1a004f7e:	4631      	mov	r1, r6
1a004f80:	4648      	mov	r0, r9
1a004f82:	f001 fa3b 	bl	1a0063fc <_Bfree>
1a004f86:	2d00      	cmp	r5, #0
1a004f88:	f47f af34 	bne.w	1a004df4 <_dtoa_r+0x8a4>
1a004f8c:	e736      	b.n	1a004dfc <_dtoa_r+0x8ac>
1a004f8e:	f000 8142 	beq.w	1a005216 <_dtoa_r+0xcc6>
1a004f92:	9b06      	ldr	r3, [sp, #24]
1a004f94:	425c      	negs	r4, r3
1a004f96:	4ba4      	ldr	r3, [pc, #656]	; (1a005228 <_dtoa_r+0xcd8>)
1a004f98:	f004 020f 	and.w	r2, r4, #15
1a004f9c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
1a004fa0:	e9d3 2300 	ldrd	r2, r3, [r3]
1a004fa4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
1a004fa8:	f7fc fee4 	bl	1a001d74 <__aeabi_dmul>
1a004fac:	1124      	asrs	r4, r4, #4
1a004fae:	e9cd 0100 	strd	r0, r1, [sp]
1a004fb2:	f000 81c6 	beq.w	1a005342 <_dtoa_r+0xdf2>
1a004fb6:	4d9d      	ldr	r5, [pc, #628]	; (1a00522c <_dtoa_r+0xcdc>)
1a004fb8:	2300      	movs	r3, #0
1a004fba:	2602      	movs	r6, #2
1a004fbc:	07e7      	lsls	r7, r4, #31
1a004fbe:	d505      	bpl.n	1a004fcc <_dtoa_r+0xa7c>
1a004fc0:	e9d5 2300 	ldrd	r2, r3, [r5]
1a004fc4:	f7fc fed6 	bl	1a001d74 <__aeabi_dmul>
1a004fc8:	3601      	adds	r6, #1
1a004fca:	2301      	movs	r3, #1
1a004fcc:	1064      	asrs	r4, r4, #1
1a004fce:	f105 0508 	add.w	r5, r5, #8
1a004fd2:	d1f3      	bne.n	1a004fbc <_dtoa_r+0xa6c>
1a004fd4:	2b00      	cmp	r3, #0
1a004fd6:	f43f ac27 	beq.w	1a004828 <_dtoa_r+0x2d8>
1a004fda:	e9cd 0100 	strd	r0, r1, [sp]
1a004fde:	e423      	b.n	1a004828 <_dtoa_r+0x2d8>
1a004fe0:	9b00      	ldr	r3, [sp, #0]
1a004fe2:	2b00      	cmp	r3, #0
1a004fe4:	f43f af6e 	beq.w	1a004ec4 <_dtoa_r+0x974>
1a004fe8:	e726      	b.n	1a004e38 <_dtoa_r+0x8e8>
1a004fea:	6869      	ldr	r1, [r5, #4]
1a004fec:	4648      	mov	r0, r9
1a004fee:	f001 f9df 	bl	1a0063b0 <_Balloc>
1a004ff2:	692b      	ldr	r3, [r5, #16]
1a004ff4:	3302      	adds	r3, #2
1a004ff6:	009a      	lsls	r2, r3, #2
1a004ff8:	4604      	mov	r4, r0
1a004ffa:	f105 010c 	add.w	r1, r5, #12
1a004ffe:	300c      	adds	r0, #12
1a005000:	f7fd fa6e 	bl	1a0024e0 <memcpy>
1a005004:	4621      	mov	r1, r4
1a005006:	2201      	movs	r2, #1
1a005008:	4648      	mov	r0, r9
1a00500a:	f001 fb91 	bl	1a006730 <__lshift>
1a00500e:	4680      	mov	r8, r0
1a005010:	e61f      	b.n	1a004c52 <_dtoa_r+0x702>
1a005012:	2400      	movs	r4, #0
1a005014:	f8c9 4044 	str.w	r4, [r9, #68]	; 0x44
1a005018:	4621      	mov	r1, r4
1a00501a:	4648      	mov	r0, r9
1a00501c:	f001 f9c8 	bl	1a0063b0 <_Balloc>
1a005020:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
1a005024:	930e      	str	r3, [sp, #56]	; 0x38
1a005026:	9309      	str	r3, [sp, #36]	; 0x24
1a005028:	2301      	movs	r3, #1
1a00502a:	4683      	mov	fp, r0
1a00502c:	9407      	str	r4, [sp, #28]
1a00502e:	f8c9 0040 	str.w	r0, [r9, #64]	; 0x40
1a005032:	930a      	str	r3, [sp, #40]	; 0x28
1a005034:	e4b6      	b.n	1a0049a4 <_dtoa_r+0x454>
1a005036:	f001 f9eb 	bl	1a006410 <__multadd>
1a00503a:	4627      	mov	r7, r4
1a00503c:	4605      	mov	r5, r0
1a00503e:	4680      	mov	r8, r0
1a005040:	e614      	b.n	1a004c6c <_dtoa_r+0x71c>
1a005042:	4648      	mov	r0, r9
1a005044:	f001 f9da 	bl	1a0063fc <_Bfree>
1a005048:	2301      	movs	r3, #1
1a00504a:	e639      	b.n	1a004cc0 <_dtoa_r+0x770>
1a00504c:	9b02      	ldr	r3, [sp, #8]
1a00504e:	2b02      	cmp	r3, #2
1a005050:	f77f adf3 	ble.w	1a004c3a <_dtoa_r+0x6ea>
1a005054:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a005056:	2b00      	cmp	r3, #0
1a005058:	f000 80cf 	beq.w	1a0051fa <_dtoa_r+0xcaa>
1a00505c:	9b07      	ldr	r3, [sp, #28]
1a00505e:	43db      	mvns	r3, r3
1a005060:	9306      	str	r3, [sp, #24]
1a005062:	465c      	mov	r4, fp
1a005064:	e78b      	b.n	1a004f7e <_dtoa_r+0xa2e>
1a005066:	9a06      	ldr	r2, [sp, #24]
1a005068:	2331      	movs	r3, #49	; 0x31
1a00506a:	3201      	adds	r2, #1
1a00506c:	9206      	str	r2, [sp, #24]
1a00506e:	f88b 3000 	strb.w	r3, [fp]
1a005072:	e6b3      	b.n	1a004ddc <_dtoa_r+0x88c>
1a005074:	2401      	movs	r4, #1
1a005076:	9409      	str	r4, [sp, #36]	; 0x24
1a005078:	9407      	str	r4, [sp, #28]
1a00507a:	f7ff bb8b 	b.w	1a004794 <_dtoa_r+0x244>
1a00507e:	4630      	mov	r0, r6
1a005080:	f7fc fe0e 	bl	1a001ca0 <__aeabi_i2d>
1a005084:	e9dd 2300 	ldrd	r2, r3, [sp]
1a005088:	f7fc fe74 	bl	1a001d74 <__aeabi_dmul>
1a00508c:	2200      	movs	r2, #0
1a00508e:	4b68      	ldr	r3, [pc, #416]	; (1a005230 <_dtoa_r+0xce0>)
1a005090:	f7fc fcba 	bl	1a001a08 <__adddf3>
1a005094:	4606      	mov	r6, r0
1a005096:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
1a00509a:	2200      	movs	r2, #0
1a00509c:	4b61      	ldr	r3, [pc, #388]	; (1a005224 <_dtoa_r+0xcd4>)
1a00509e:	e9dd 0100 	ldrd	r0, r1, [sp]
1a0050a2:	f7fc fcaf 	bl	1a001a04 <__aeabi_dsub>
1a0050a6:	4632      	mov	r2, r6
1a0050a8:	463b      	mov	r3, r7
1a0050aa:	4604      	mov	r4, r0
1a0050ac:	460d      	mov	r5, r1
1a0050ae:	f002 f975 	bl	1a00739c <__aeabi_dcmpgt>
1a0050b2:	2800      	cmp	r0, #0
1a0050b4:	d14f      	bne.n	1a005156 <_dtoa_r+0xc06>
1a0050b6:	4632      	mov	r2, r6
1a0050b8:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
1a0050bc:	4620      	mov	r0, r4
1a0050be:	4629      	mov	r1, r5
1a0050c0:	f002 f94e 	bl	1a007360 <__aeabi_dcmplt>
1a0050c4:	2800      	cmp	r0, #0
1a0050c6:	f43f ac69 	beq.w	1a00499c <_dtoa_r+0x44c>
1a0050ca:	2600      	movs	r6, #0
1a0050cc:	4635      	mov	r5, r6
1a0050ce:	e7c5      	b.n	1a00505c <_dtoa_r+0xb0c>
1a0050d0:	2301      	movs	r3, #1
1a0050d2:	930a      	str	r3, [sp, #40]	; 0x28
1a0050d4:	e6c8      	b.n	1a004e68 <_dtoa_r+0x918>
1a0050d6:	4651      	mov	r1, sl
1a0050d8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
1a0050da:	4648      	mov	r0, r9
1a0050dc:	f001 fad8 	bl	1a006690 <__pow5mult>
1a0050e0:	4682      	mov	sl, r0
1a0050e2:	e572      	b.n	1a004bca <_dtoa_r+0x67a>
1a0050e4:	f8dd a000 	ldr.w	sl, [sp]
1a0050e8:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a0050ec:	e686      	b.n	1a004dfc <_dtoa_r+0x8ac>
1a0050ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a0050f0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1a0050f2:	1afb      	subs	r3, r7, r3
1a0050f4:	441a      	add	r2, r3
1a0050f6:	e9cd 720b 	strd	r7, r2, [sp, #44]	; 0x2c
1a0050fa:	2700      	movs	r7, #0
1a0050fc:	e512      	b.n	1a004b24 <_dtoa_r+0x5d4>
1a0050fe:	2b00      	cmp	r3, #0
1a005100:	9402      	str	r4, [sp, #8]
1a005102:	465e      	mov	r6, fp
1a005104:	f107 0401 	add.w	r4, r7, #1
1a005108:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
1a00510c:	f300 80ba 	bgt.w	1a005284 <_dtoa_r+0xd34>
1a005110:	9b00      	ldr	r3, [sp, #0]
1a005112:	9502      	str	r5, [sp, #8]
1a005114:	703b      	strb	r3, [r7, #0]
1a005116:	4645      	mov	r5, r8
1a005118:	e660      	b.n	1a004ddc <_dtoa_r+0x88c>
1a00511a:	ed9d 7b10 	vldr	d7, [sp, #64]	; 0x40
1a00511e:	2602      	movs	r6, #2
1a005120:	ed8d 7b12 	vstr	d7, [sp, #72]	; 0x48
1a005124:	f7ff bb67 	b.w	1a0047f6 <_dtoa_r+0x2a6>
1a005128:	9b00      	ldr	r3, [sp, #0]
1a00512a:	2b39      	cmp	r3, #57	; 0x39
1a00512c:	465e      	mov	r6, fp
1a00512e:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
1a005132:	f000 80b9 	beq.w	1a0052a8 <_dtoa_r+0xd58>
1a005136:	9b00      	ldr	r3, [sp, #0]
1a005138:	9502      	str	r5, [sp, #8]
1a00513a:	3301      	adds	r3, #1
1a00513c:	703b      	strb	r3, [r7, #0]
1a00513e:	4645      	mov	r5, r8
1a005140:	e64c      	b.n	1a004ddc <_dtoa_r+0x88c>
1a005142:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
1a005146:	1a9c      	subs	r4, r3, r2
1a005148:	e4f5      	b.n	1a004b36 <_dtoa_r+0x5e6>
1a00514a:	465e      	mov	r6, fp
1a00514c:	9502      	str	r5, [sp, #8]
1a00514e:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
1a005152:	4645      	mov	r5, r8
1a005154:	e61a      	b.n	1a004d8c <_dtoa_r+0x83c>
1a005156:	2600      	movs	r6, #0
1a005158:	4635      	mov	r5, r6
1a00515a:	e708      	b.n	1a004f6e <_dtoa_r+0xa1e>
1a00515c:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
1a005160:	e9dd 0100 	ldrd	r0, r1, [sp]
1a005164:	f7fc fe06 	bl	1a001d74 <__aeabi_dmul>
1a005168:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a00516a:	f88b 5000 	strb.w	r5, [fp]
1a00516e:	2b01      	cmp	r3, #1
1a005170:	e9cd 0100 	strd	r0, r1, [sp]
1a005174:	d020      	beq.n	1a0051b8 <_dtoa_r+0xc68>
1a005176:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a005178:	f8cd 8048 	str.w	r8, [sp, #72]	; 0x48
1a00517c:	445b      	add	r3, fp
1a00517e:	4698      	mov	r8, r3
1a005180:	2200      	movs	r2, #0
1a005182:	4b2c      	ldr	r3, [pc, #176]	; (1a005234 <_dtoa_r+0xce4>)
1a005184:	4630      	mov	r0, r6
1a005186:	4639      	mov	r1, r7
1a005188:	f7fc fdf4 	bl	1a001d74 <__aeabi_dmul>
1a00518c:	460f      	mov	r7, r1
1a00518e:	4606      	mov	r6, r0
1a005190:	f002 f924 	bl	1a0073dc <__aeabi_d2iz>
1a005194:	4605      	mov	r5, r0
1a005196:	f7fc fd83 	bl	1a001ca0 <__aeabi_i2d>
1a00519a:	3530      	adds	r5, #48	; 0x30
1a00519c:	4602      	mov	r2, r0
1a00519e:	460b      	mov	r3, r1
1a0051a0:	4630      	mov	r0, r6
1a0051a2:	4639      	mov	r1, r7
1a0051a4:	f7fc fc2e 	bl	1a001a04 <__aeabi_dsub>
1a0051a8:	f804 5b01 	strb.w	r5, [r4], #1
1a0051ac:	4544      	cmp	r4, r8
1a0051ae:	4606      	mov	r6, r0
1a0051b0:	460f      	mov	r7, r1
1a0051b2:	d1e5      	bne.n	1a005180 <_dtoa_r+0xc30>
1a0051b4:	f8dd 8048 	ldr.w	r8, [sp, #72]	; 0x48
1a0051b8:	4b1f      	ldr	r3, [pc, #124]	; (1a005238 <_dtoa_r+0xce8>)
1a0051ba:	2200      	movs	r2, #0
1a0051bc:	e9dd 0100 	ldrd	r0, r1, [sp]
1a0051c0:	f7fc fc22 	bl	1a001a08 <__adddf3>
1a0051c4:	4632      	mov	r2, r6
1a0051c6:	463b      	mov	r3, r7
1a0051c8:	f002 f8ca 	bl	1a007360 <__aeabi_dcmplt>
1a0051cc:	2800      	cmp	r0, #0
1a0051ce:	d070      	beq.n	1a0052b2 <_dtoa_r+0xd62>
1a0051d0:	9b16      	ldr	r3, [sp, #88]	; 0x58
1a0051d2:	9306      	str	r3, [sp, #24]
1a0051d4:	f814 5c01 	ldrb.w	r5, [r4, #-1]
1a0051d8:	e48f      	b.n	1a004afa <_dtoa_r+0x5aa>
1a0051da:	2330      	movs	r3, #48	; 0x30
1a0051dc:	f88b 3000 	strb.w	r3, [fp]
1a0051e0:	9b06      	ldr	r3, [sp, #24]
1a0051e2:	f814 5c01 	ldrb.w	r5, [r4, #-1]
1a0051e6:	3301      	adds	r3, #1
1a0051e8:	9306      	str	r3, [sp, #24]
1a0051ea:	465b      	mov	r3, fp
1a0051ec:	e489      	b.n	1a004b02 <_dtoa_r+0x5b2>
1a0051ee:	9b18      	ldr	r3, [sp, #96]	; 0x60
1a0051f0:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
1a0051f4:	e6a0      	b.n	1a004f38 <_dtoa_r+0x9e8>
1a0051f6:	2300      	movs	r3, #0
1a0051f8:	e676      	b.n	1a004ee8 <_dtoa_r+0x998>
1a0051fa:	4631      	mov	r1, r6
1a0051fc:	2205      	movs	r2, #5
1a0051fe:	4648      	mov	r0, r9
1a005200:	f001 f906 	bl	1a006410 <__multadd>
1a005204:	4601      	mov	r1, r0
1a005206:	4606      	mov	r6, r0
1a005208:	4650      	mov	r0, sl
1a00520a:	f001 fae7 	bl	1a0067dc <__mcmp>
1a00520e:	2800      	cmp	r0, #0
1a005210:	f73f aead 	bgt.w	1a004f6e <_dtoa_r+0xa1e>
1a005214:	e722      	b.n	1a00505c <_dtoa_r+0xb0c>
1a005216:	ed9d 7b10 	vldr	d7, [sp, #64]	; 0x40
1a00521a:	2602      	movs	r6, #2
1a00521c:	ed8d 7b00 	vstr	d7, [sp]
1a005220:	f7ff bb02 	b.w	1a004828 <_dtoa_r+0x2d8>
1a005224:	40140000 	.word	0x40140000
1a005228:	1a0078e0 	.word	0x1a0078e0
1a00522c:	1a0078b8 	.word	0x1a0078b8
1a005230:	401c0000 	.word	0x401c0000
1a005234:	40240000 	.word	0x40240000
1a005238:	3fe00000 	.word	0x3fe00000
1a00523c:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a00523e:	2b00      	cmp	r3, #0
1a005240:	f43f af1d 	beq.w	1a00507e <_dtoa_r+0xb2e>
1a005244:	9c0e      	ldr	r4, [sp, #56]	; 0x38
1a005246:	2c00      	cmp	r4, #0
1a005248:	f77f aba8 	ble.w	1a00499c <_dtoa_r+0x44c>
1a00524c:	2200      	movs	r2, #0
1a00524e:	4b45      	ldr	r3, [pc, #276]	; (1a005364 <_dtoa_r+0xe14>)
1a005250:	e9dd 0100 	ldrd	r0, r1, [sp]
1a005254:	f7fc fd8e 	bl	1a001d74 <__aeabi_dmul>
1a005258:	e9cd 0100 	strd	r0, r1, [sp]
1a00525c:	1c70      	adds	r0, r6, #1
1a00525e:	f7fc fd1f 	bl	1a001ca0 <__aeabi_i2d>
1a005262:	e9dd 2300 	ldrd	r2, r3, [sp]
1a005266:	f7fc fd85 	bl	1a001d74 <__aeabi_dmul>
1a00526a:	4b3f      	ldr	r3, [pc, #252]	; (1a005368 <_dtoa_r+0xe18>)
1a00526c:	2200      	movs	r2, #0
1a00526e:	f7fc fbcb 	bl	1a001a08 <__adddf3>
1a005272:	9b06      	ldr	r3, [sp, #24]
1a005274:	9412      	str	r4, [sp, #72]	; 0x48
1a005276:	3b01      	subs	r3, #1
1a005278:	4606      	mov	r6, r0
1a00527a:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
1a00527e:	9316      	str	r3, [sp, #88]	; 0x58
1a005280:	f7ff baf3 	b.w	1a00486a <_dtoa_r+0x31a>
1a005284:	4651      	mov	r1, sl
1a005286:	2201      	movs	r2, #1
1a005288:	4648      	mov	r0, r9
1a00528a:	f001 fa51 	bl	1a006730 <__lshift>
1a00528e:	4631      	mov	r1, r6
1a005290:	4682      	mov	sl, r0
1a005292:	f001 faa3 	bl	1a0067dc <__mcmp>
1a005296:	2800      	cmp	r0, #0
1a005298:	dd3b      	ble.n	1a005312 <_dtoa_r+0xdc2>
1a00529a:	9b00      	ldr	r3, [sp, #0]
1a00529c:	2b39      	cmp	r3, #57	; 0x39
1a00529e:	d003      	beq.n	1a0052a8 <_dtoa_r+0xd58>
1a0052a0:	9b02      	ldr	r3, [sp, #8]
1a0052a2:	3331      	adds	r3, #49	; 0x31
1a0052a4:	9300      	str	r3, [sp, #0]
1a0052a6:	e733      	b.n	1a005110 <_dtoa_r+0xbc0>
1a0052a8:	2239      	movs	r2, #57	; 0x39
1a0052aa:	9502      	str	r5, [sp, #8]
1a0052ac:	703a      	strb	r2, [r7, #0]
1a0052ae:	4645      	mov	r5, r8
1a0052b0:	e58e      	b.n	1a004dd0 <_dtoa_r+0x880>
1a0052b2:	e9dd 2300 	ldrd	r2, r3, [sp]
1a0052b6:	2000      	movs	r0, #0
1a0052b8:	492c      	ldr	r1, [pc, #176]	; (1a00536c <_dtoa_r+0xe1c>)
1a0052ba:	f7fc fba3 	bl	1a001a04 <__aeabi_dsub>
1a0052be:	4632      	mov	r2, r6
1a0052c0:	463b      	mov	r3, r7
1a0052c2:	f002 f86b 	bl	1a00739c <__aeabi_dcmpgt>
1a0052c6:	b910      	cbnz	r0, 1a0052ce <_dtoa_r+0xd7e>
1a0052c8:	f7ff bb68 	b.w	1a00499c <_dtoa_r+0x44c>
1a0052cc:	4614      	mov	r4, r2
1a0052ce:	f814 3c01 	ldrb.w	r3, [r4, #-1]
1a0052d2:	2b30      	cmp	r3, #48	; 0x30
1a0052d4:	f104 32ff 	add.w	r2, r4, #4294967295	; 0xffffffff
1a0052d8:	d0f8      	beq.n	1a0052cc <_dtoa_r+0xd7c>
1a0052da:	9b16      	ldr	r3, [sp, #88]	; 0x58
1a0052dc:	9306      	str	r3, [sp, #24]
1a0052de:	e58d      	b.n	1a004dfc <_dtoa_r+0x8ac>
1a0052e0:	46d9      	mov	r9, fp
1a0052e2:	f8dd a048 	ldr.w	sl, [sp, #72]	; 0x48
1a0052e6:	f8dd b050 	ldr.w	fp, [sp, #80]	; 0x50
1a0052ea:	9b16      	ldr	r3, [sp, #88]	; 0x58
1a0052ec:	9306      	str	r3, [sp, #24]
1a0052ee:	e404      	b.n	1a004afa <_dtoa_r+0x5aa>
1a0052f0:	9b00      	ldr	r3, [sp, #0]
1a0052f2:	2b39      	cmp	r3, #57	; 0x39
1a0052f4:	4621      	mov	r1, r4
1a0052f6:	4632      	mov	r2, r6
1a0052f8:	f107 0401 	add.w	r4, r7, #1
1a0052fc:	465e      	mov	r6, fp
1a0052fe:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
1a005302:	d0d1      	beq.n	1a0052a8 <_dtoa_r+0xd58>
1a005304:	2a00      	cmp	r2, #0
1a005306:	f77f af03 	ble.w	1a005110 <_dtoa_r+0xbc0>
1a00530a:	460b      	mov	r3, r1
1a00530c:	3331      	adds	r3, #49	; 0x31
1a00530e:	9300      	str	r3, [sp, #0]
1a005310:	e6fe      	b.n	1a005110 <_dtoa_r+0xbc0>
1a005312:	f47f aefd 	bne.w	1a005110 <_dtoa_r+0xbc0>
1a005316:	9b00      	ldr	r3, [sp, #0]
1a005318:	07da      	lsls	r2, r3, #31
1a00531a:	f57f aef9 	bpl.w	1a005110 <_dtoa_r+0xbc0>
1a00531e:	e7bc      	b.n	1a00529a <_dtoa_r+0xd4a>
1a005320:	4629      	mov	r1, r5
1a005322:	2300      	movs	r3, #0
1a005324:	220a      	movs	r2, #10
1a005326:	4648      	mov	r0, r9
1a005328:	f001 f872 	bl	1a006410 <__multadd>
1a00532c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a00532e:	2b00      	cmp	r3, #0
1a005330:	4605      	mov	r5, r0
1a005332:	dd09      	ble.n	1a005348 <_dtoa_r+0xdf8>
1a005334:	9309      	str	r3, [sp, #36]	; 0x24
1a005336:	e484      	b.n	1a004c42 <_dtoa_r+0x6f2>
1a005338:	9b02      	ldr	r3, [sp, #8]
1a00533a:	2b02      	cmp	r3, #2
1a00533c:	dc0e      	bgt.n	1a00535c <_dtoa_r+0xe0c>
1a00533e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a005340:	e507      	b.n	1a004d52 <_dtoa_r+0x802>
1a005342:	2602      	movs	r6, #2
1a005344:	f7ff ba70 	b.w	1a004828 <_dtoa_r+0x2d8>
1a005348:	9b02      	ldr	r3, [sp, #8]
1a00534a:	2b02      	cmp	r3, #2
1a00534c:	dc06      	bgt.n	1a00535c <_dtoa_r+0xe0c>
1a00534e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a005350:	e7f0      	b.n	1a005334 <_dtoa_r+0xde4>
1a005352:	f43f ac59 	beq.w	1a004c08 <_dtoa_r+0x6b8>
1a005356:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
1a00535a:	e450      	b.n	1a004bfe <_dtoa_r+0x6ae>
1a00535c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a00535e:	9309      	str	r3, [sp, #36]	; 0x24
1a005360:	e678      	b.n	1a005054 <_dtoa_r+0xb04>
1a005362:	bf00      	nop
1a005364:	40240000 	.word	0x40240000
1a005368:	401c0000 	.word	0x401c0000
1a00536c:	3fe00000 	.word	0x3fe00000

1a005370 <__sflush_r>:
1a005370:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
1a005374:	b29a      	uxth	r2, r3
1a005376:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a00537a:	460c      	mov	r4, r1
1a00537c:	0711      	lsls	r1, r2, #28
1a00537e:	4680      	mov	r8, r0
1a005380:	d444      	bmi.n	1a00540c <__sflush_r+0x9c>
1a005382:	6862      	ldr	r2, [r4, #4]
1a005384:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a005388:	2a00      	cmp	r2, #0
1a00538a:	81a3      	strh	r3, [r4, #12]
1a00538c:	dd59      	ble.n	1a005442 <__sflush_r+0xd2>
1a00538e:	6aa5      	ldr	r5, [r4, #40]	; 0x28
1a005390:	2d00      	cmp	r5, #0
1a005392:	d053      	beq.n	1a00543c <__sflush_r+0xcc>
1a005394:	2200      	movs	r2, #0
1a005396:	b29b      	uxth	r3, r3
1a005398:	f8d8 6000 	ldr.w	r6, [r8]
1a00539c:	69e1      	ldr	r1, [r4, #28]
1a00539e:	f8c8 2000 	str.w	r2, [r8]
1a0053a2:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
1a0053a6:	f040 8083 	bne.w	1a0054b0 <__sflush_r+0x140>
1a0053aa:	2301      	movs	r3, #1
1a0053ac:	4640      	mov	r0, r8
1a0053ae:	47a8      	blx	r5
1a0053b0:	1c42      	adds	r2, r0, #1
1a0053b2:	d04a      	beq.n	1a00544a <__sflush_r+0xda>
1a0053b4:	89a3      	ldrh	r3, [r4, #12]
1a0053b6:	6aa5      	ldr	r5, [r4, #40]	; 0x28
1a0053b8:	69e1      	ldr	r1, [r4, #28]
1a0053ba:	075b      	lsls	r3, r3, #29
1a0053bc:	d505      	bpl.n	1a0053ca <__sflush_r+0x5a>
1a0053be:	6862      	ldr	r2, [r4, #4]
1a0053c0:	6b23      	ldr	r3, [r4, #48]	; 0x30
1a0053c2:	1a80      	subs	r0, r0, r2
1a0053c4:	b10b      	cbz	r3, 1a0053ca <__sflush_r+0x5a>
1a0053c6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
1a0053c8:	1ac0      	subs	r0, r0, r3
1a0053ca:	4602      	mov	r2, r0
1a0053cc:	2300      	movs	r3, #0
1a0053ce:	4640      	mov	r0, r8
1a0053d0:	47a8      	blx	r5
1a0053d2:	1c47      	adds	r7, r0, #1
1a0053d4:	d045      	beq.n	1a005462 <__sflush_r+0xf2>
1a0053d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a0053da:	6922      	ldr	r2, [r4, #16]
1a0053dc:	6022      	str	r2, [r4, #0]
1a0053de:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
1a0053e2:	2200      	movs	r2, #0
1a0053e4:	81a3      	strh	r3, [r4, #12]
1a0053e6:	04db      	lsls	r3, r3, #19
1a0053e8:	6062      	str	r2, [r4, #4]
1a0053ea:	d500      	bpl.n	1a0053ee <__sflush_r+0x7e>
1a0053ec:	6520      	str	r0, [r4, #80]	; 0x50
1a0053ee:	6b21      	ldr	r1, [r4, #48]	; 0x30
1a0053f0:	f8c8 6000 	str.w	r6, [r8]
1a0053f4:	b311      	cbz	r1, 1a00543c <__sflush_r+0xcc>
1a0053f6:	f104 0340 	add.w	r3, r4, #64	; 0x40
1a0053fa:	4299      	cmp	r1, r3
1a0053fc:	d002      	beq.n	1a005404 <__sflush_r+0x94>
1a0053fe:	4640      	mov	r0, r8
1a005400:	f000 f944 	bl	1a00568c <_free_r>
1a005404:	2000      	movs	r0, #0
1a005406:	6320      	str	r0, [r4, #48]	; 0x30
1a005408:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a00540c:	6926      	ldr	r6, [r4, #16]
1a00540e:	b1ae      	cbz	r6, 1a00543c <__sflush_r+0xcc>
1a005410:	6825      	ldr	r5, [r4, #0]
1a005412:	6026      	str	r6, [r4, #0]
1a005414:	0792      	lsls	r2, r2, #30
1a005416:	bf0c      	ite	eq
1a005418:	6963      	ldreq	r3, [r4, #20]
1a00541a:	2300      	movne	r3, #0
1a00541c:	1bad      	subs	r5, r5, r6
1a00541e:	60a3      	str	r3, [r4, #8]
1a005420:	e00a      	b.n	1a005438 <__sflush_r+0xc8>
1a005422:	462b      	mov	r3, r5
1a005424:	4632      	mov	r2, r6
1a005426:	6a67      	ldr	r7, [r4, #36]	; 0x24
1a005428:	69e1      	ldr	r1, [r4, #28]
1a00542a:	4640      	mov	r0, r8
1a00542c:	47b8      	blx	r7
1a00542e:	2800      	cmp	r0, #0
1a005430:	eba5 0500 	sub.w	r5, r5, r0
1a005434:	4406      	add	r6, r0
1a005436:	dd2b      	ble.n	1a005490 <__sflush_r+0x120>
1a005438:	2d00      	cmp	r5, #0
1a00543a:	dcf2      	bgt.n	1a005422 <__sflush_r+0xb2>
1a00543c:	2000      	movs	r0, #0
1a00543e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a005442:	6be2      	ldr	r2, [r4, #60]	; 0x3c
1a005444:	2a00      	cmp	r2, #0
1a005446:	dca2      	bgt.n	1a00538e <__sflush_r+0x1e>
1a005448:	e7f8      	b.n	1a00543c <__sflush_r+0xcc>
1a00544a:	f8d8 3000 	ldr.w	r3, [r8]
1a00544e:	2b00      	cmp	r3, #0
1a005450:	d0b0      	beq.n	1a0053b4 <__sflush_r+0x44>
1a005452:	2b1d      	cmp	r3, #29
1a005454:	d001      	beq.n	1a00545a <__sflush_r+0xea>
1a005456:	2b16      	cmp	r3, #22
1a005458:	d12c      	bne.n	1a0054b4 <__sflush_r+0x144>
1a00545a:	f8c8 6000 	str.w	r6, [r8]
1a00545e:	2000      	movs	r0, #0
1a005460:	e7ed      	b.n	1a00543e <__sflush_r+0xce>
1a005462:	f8d8 1000 	ldr.w	r1, [r8]
1a005466:	291d      	cmp	r1, #29
1a005468:	d81a      	bhi.n	1a0054a0 <__sflush_r+0x130>
1a00546a:	4b15      	ldr	r3, [pc, #84]	; (1a0054c0 <__sflush_r+0x150>)
1a00546c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a005470:	40cb      	lsrs	r3, r1
1a005472:	43db      	mvns	r3, r3
1a005474:	f013 0301 	ands.w	r3, r3, #1
1a005478:	d114      	bne.n	1a0054a4 <__sflush_r+0x134>
1a00547a:	6925      	ldr	r5, [r4, #16]
1a00547c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
1a005480:	e9c4 5300 	strd	r5, r3, [r4]
1a005484:	04d5      	lsls	r5, r2, #19
1a005486:	81a2      	strh	r2, [r4, #12]
1a005488:	d5b1      	bpl.n	1a0053ee <__sflush_r+0x7e>
1a00548a:	2900      	cmp	r1, #0
1a00548c:	d1af      	bne.n	1a0053ee <__sflush_r+0x7e>
1a00548e:	e7ad      	b.n	1a0053ec <__sflush_r+0x7c>
1a005490:	89a3      	ldrh	r3, [r4, #12]
1a005492:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a005496:	81a3      	strh	r3, [r4, #12]
1a005498:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a00549c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a0054a0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a0054a4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
1a0054a8:	81a2      	strh	r2, [r4, #12]
1a0054aa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a0054ae:	e7c6      	b.n	1a00543e <__sflush_r+0xce>
1a0054b0:	6d20      	ldr	r0, [r4, #80]	; 0x50
1a0054b2:	e782      	b.n	1a0053ba <__sflush_r+0x4a>
1a0054b4:	89a3      	ldrh	r3, [r4, #12]
1a0054b6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a0054ba:	81a3      	strh	r3, [r4, #12]
1a0054bc:	e7bf      	b.n	1a00543e <__sflush_r+0xce>
1a0054be:	bf00      	nop
1a0054c0:	20400001 	.word	0x20400001

1a0054c4 <_fflush_r>:
1a0054c4:	b538      	push	{r3, r4, r5, lr}
1a0054c6:	460d      	mov	r5, r1
1a0054c8:	4604      	mov	r4, r0
1a0054ca:	b108      	cbz	r0, 1a0054d0 <_fflush_r+0xc>
1a0054cc:	6b83      	ldr	r3, [r0, #56]	; 0x38
1a0054ce:	b1a3      	cbz	r3, 1a0054fa <_fflush_r+0x36>
1a0054d0:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
1a0054d4:	b1b8      	cbz	r0, 1a005506 <_fflush_r+0x42>
1a0054d6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
1a0054d8:	07db      	lsls	r3, r3, #31
1a0054da:	d401      	bmi.n	1a0054e0 <_fflush_r+0x1c>
1a0054dc:	0581      	lsls	r1, r0, #22
1a0054de:	d51a      	bpl.n	1a005516 <_fflush_r+0x52>
1a0054e0:	4620      	mov	r0, r4
1a0054e2:	4629      	mov	r1, r5
1a0054e4:	f7ff ff44 	bl	1a005370 <__sflush_r>
1a0054e8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
1a0054ea:	07da      	lsls	r2, r3, #31
1a0054ec:	4604      	mov	r4, r0
1a0054ee:	d402      	bmi.n	1a0054f6 <_fflush_r+0x32>
1a0054f0:	89ab      	ldrh	r3, [r5, #12]
1a0054f2:	059b      	lsls	r3, r3, #22
1a0054f4:	d50a      	bpl.n	1a00550c <_fflush_r+0x48>
1a0054f6:	4620      	mov	r0, r4
1a0054f8:	bd38      	pop	{r3, r4, r5, pc}
1a0054fa:	f000 f83f 	bl	1a00557c <__sinit>
1a0054fe:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
1a005502:	2800      	cmp	r0, #0
1a005504:	d1e7      	bne.n	1a0054d6 <_fflush_r+0x12>
1a005506:	4604      	mov	r4, r0
1a005508:	4620      	mov	r0, r4
1a00550a:	bd38      	pop	{r3, r4, r5, pc}
1a00550c:	6da8      	ldr	r0, [r5, #88]	; 0x58
1a00550e:	f000 fb6d 	bl	1a005bec <__retarget_lock_release_recursive>
1a005512:	4620      	mov	r0, r4
1a005514:	bd38      	pop	{r3, r4, r5, pc}
1a005516:	6da8      	ldr	r0, [r5, #88]	; 0x58
1a005518:	f000 fb66 	bl	1a005be8 <__retarget_lock_acquire_recursive>
1a00551c:	e7e0      	b.n	1a0054e0 <_fflush_r+0x1c>
1a00551e:	bf00      	nop

1a005520 <std>:
1a005520:	b510      	push	{r4, lr}
1a005522:	2300      	movs	r3, #0
1a005524:	4604      	mov	r4, r0
1a005526:	8181      	strh	r1, [r0, #12]
1a005528:	81c2      	strh	r2, [r0, #14]
1a00552a:	e9c0 3300 	strd	r3, r3, [r0]
1a00552e:	6083      	str	r3, [r0, #8]
1a005530:	6643      	str	r3, [r0, #100]	; 0x64
1a005532:	e9c0 3304 	strd	r3, r3, [r0, #16]
1a005536:	6183      	str	r3, [r0, #24]
1a005538:	4619      	mov	r1, r3
1a00553a:	2208      	movs	r2, #8
1a00553c:	305c      	adds	r0, #92	; 0x5c
1a00553e:	f7fd f869 	bl	1a002614 <memset>
1a005542:	4807      	ldr	r0, [pc, #28]	; (1a005560 <std+0x40>)
1a005544:	4907      	ldr	r1, [pc, #28]	; (1a005564 <std+0x44>)
1a005546:	4a08      	ldr	r2, [pc, #32]	; (1a005568 <std+0x48>)
1a005548:	4b08      	ldr	r3, [pc, #32]	; (1a00556c <std+0x4c>)
1a00554a:	62e3      	str	r3, [r4, #44]	; 0x2c
1a00554c:	e9c4 4007 	strd	r4, r0, [r4, #28]
1a005550:	e9c4 1209 	strd	r1, r2, [r4, #36]	; 0x24
1a005554:	f104 0058 	add.w	r0, r4, #88	; 0x58
1a005558:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1a00555c:	f000 bb40 	b.w	1a005be0 <__retarget_lock_init_recursive>
1a005560:	1a006d89 	.word	0x1a006d89
1a005564:	1a006dad 	.word	0x1a006dad
1a005568:	1a006de9 	.word	0x1a006de9
1a00556c:	1a006e09 	.word	0x1a006e09

1a005570 <_cleanup_r>:
1a005570:	4901      	ldr	r1, [pc, #4]	; (1a005578 <_cleanup_r+0x8>)
1a005572:	f000 bafd 	b.w	1a005b70 <_fwalk_reent>
1a005576:	bf00      	nop
1a005578:	1a006f69 	.word	0x1a006f69

1a00557c <__sinit>:
1a00557c:	b510      	push	{r4, lr}
1a00557e:	4604      	mov	r4, r0
1a005580:	4812      	ldr	r0, [pc, #72]	; (1a0055cc <__sinit+0x50>)
1a005582:	f000 fb31 	bl	1a005be8 <__retarget_lock_acquire_recursive>
1a005586:	6ba2      	ldr	r2, [r4, #56]	; 0x38
1a005588:	b9d2      	cbnz	r2, 1a0055c0 <__sinit+0x44>
1a00558a:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
1a00558e:	4810      	ldr	r0, [pc, #64]	; (1a0055d0 <__sinit+0x54>)
1a005590:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
1a005594:	2103      	movs	r1, #3
1a005596:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
1a00559a:	63e0      	str	r0, [r4, #60]	; 0x3c
1a00559c:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
1a0055a0:	6860      	ldr	r0, [r4, #4]
1a0055a2:	2104      	movs	r1, #4
1a0055a4:	f7ff ffbc 	bl	1a005520 <std>
1a0055a8:	2201      	movs	r2, #1
1a0055aa:	2109      	movs	r1, #9
1a0055ac:	68a0      	ldr	r0, [r4, #8]
1a0055ae:	f7ff ffb7 	bl	1a005520 <std>
1a0055b2:	2202      	movs	r2, #2
1a0055b4:	2112      	movs	r1, #18
1a0055b6:	68e0      	ldr	r0, [r4, #12]
1a0055b8:	f7ff ffb2 	bl	1a005520 <std>
1a0055bc:	2301      	movs	r3, #1
1a0055be:	63a3      	str	r3, [r4, #56]	; 0x38
1a0055c0:	4802      	ldr	r0, [pc, #8]	; (1a0055cc <__sinit+0x50>)
1a0055c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1a0055c6:	f000 bb11 	b.w	1a005bec <__retarget_lock_release_recursive>
1a0055ca:	bf00      	nop
1a0055cc:	10000af0 	.word	0x10000af0
1a0055d0:	1a005571 	.word	0x1a005571

1a0055d4 <__sfp_lock_acquire>:
1a0055d4:	4801      	ldr	r0, [pc, #4]	; (1a0055dc <__sfp_lock_acquire+0x8>)
1a0055d6:	f000 bb07 	b.w	1a005be8 <__retarget_lock_acquire_recursive>
1a0055da:	bf00      	nop
1a0055dc:	10000b04 	.word	0x10000b04

1a0055e0 <__sfp_lock_release>:
1a0055e0:	4801      	ldr	r0, [pc, #4]	; (1a0055e8 <__sfp_lock_release+0x8>)
1a0055e2:	f000 bb03 	b.w	1a005bec <__retarget_lock_release_recursive>
1a0055e6:	bf00      	nop
1a0055e8:	10000b04 	.word	0x10000b04

1a0055ec <_malloc_trim_r>:
1a0055ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a0055ee:	4f24      	ldr	r7, [pc, #144]	; (1a005680 <_malloc_trim_r+0x94>)
1a0055f0:	460c      	mov	r4, r1
1a0055f2:	4606      	mov	r6, r0
1a0055f4:	f000 fed0 	bl	1a006398 <__malloc_lock>
1a0055f8:	68bb      	ldr	r3, [r7, #8]
1a0055fa:	685d      	ldr	r5, [r3, #4]
1a0055fc:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
1a005600:	310f      	adds	r1, #15
1a005602:	f025 0503 	bic.w	r5, r5, #3
1a005606:	4429      	add	r1, r5
1a005608:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
1a00560c:	f021 010f 	bic.w	r1, r1, #15
1a005610:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
1a005614:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
1a005618:	db07      	blt.n	1a00562a <_malloc_trim_r+0x3e>
1a00561a:	2100      	movs	r1, #0
1a00561c:	4630      	mov	r0, r6
1a00561e:	f7fb f8a9 	bl	1a000774 <_sbrk_r>
1a005622:	68bb      	ldr	r3, [r7, #8]
1a005624:	442b      	add	r3, r5
1a005626:	4298      	cmp	r0, r3
1a005628:	d004      	beq.n	1a005634 <_malloc_trim_r+0x48>
1a00562a:	4630      	mov	r0, r6
1a00562c:	f000 feba 	bl	1a0063a4 <__malloc_unlock>
1a005630:	2000      	movs	r0, #0
1a005632:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a005634:	4261      	negs	r1, r4
1a005636:	4630      	mov	r0, r6
1a005638:	f7fb f89c 	bl	1a000774 <_sbrk_r>
1a00563c:	3001      	adds	r0, #1
1a00563e:	d00d      	beq.n	1a00565c <_malloc_trim_r+0x70>
1a005640:	4b10      	ldr	r3, [pc, #64]	; (1a005684 <_malloc_trim_r+0x98>)
1a005642:	68ba      	ldr	r2, [r7, #8]
1a005644:	6819      	ldr	r1, [r3, #0]
1a005646:	1b2d      	subs	r5, r5, r4
1a005648:	f045 0501 	orr.w	r5, r5, #1
1a00564c:	4630      	mov	r0, r6
1a00564e:	1b09      	subs	r1, r1, r4
1a005650:	6055      	str	r5, [r2, #4]
1a005652:	6019      	str	r1, [r3, #0]
1a005654:	f000 fea6 	bl	1a0063a4 <__malloc_unlock>
1a005658:	2001      	movs	r0, #1
1a00565a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a00565c:	2100      	movs	r1, #0
1a00565e:	4630      	mov	r0, r6
1a005660:	f7fb f888 	bl	1a000774 <_sbrk_r>
1a005664:	68ba      	ldr	r2, [r7, #8]
1a005666:	1a83      	subs	r3, r0, r2
1a005668:	2b0f      	cmp	r3, #15
1a00566a:	ddde      	ble.n	1a00562a <_malloc_trim_r+0x3e>
1a00566c:	4c06      	ldr	r4, [pc, #24]	; (1a005688 <_malloc_trim_r+0x9c>)
1a00566e:	4905      	ldr	r1, [pc, #20]	; (1a005684 <_malloc_trim_r+0x98>)
1a005670:	6824      	ldr	r4, [r4, #0]
1a005672:	f043 0301 	orr.w	r3, r3, #1
1a005676:	1b00      	subs	r0, r0, r4
1a005678:	6053      	str	r3, [r2, #4]
1a00567a:	6008      	str	r0, [r1, #0]
1a00567c:	e7d5      	b.n	1a00562a <_malloc_trim_r+0x3e>
1a00567e:	bf00      	nop
1a005680:	100004b8 	.word	0x100004b8
1a005684:	10000aa0 	.word	0x10000aa0
1a005688:	100008c0 	.word	0x100008c0

1a00568c <_free_r>:
1a00568c:	2900      	cmp	r1, #0
1a00568e:	d053      	beq.n	1a005738 <_free_r+0xac>
1a005690:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a005692:	460c      	mov	r4, r1
1a005694:	4606      	mov	r6, r0
1a005696:	f000 fe7f 	bl	1a006398 <__malloc_lock>
1a00569a:	f854 cc04 	ldr.w	ip, [r4, #-4]
1a00569e:	4f71      	ldr	r7, [pc, #452]	; (1a005864 <_free_r+0x1d8>)
1a0056a0:	f02c 0101 	bic.w	r1, ip, #1
1a0056a4:	f1a4 0508 	sub.w	r5, r4, #8
1a0056a8:	186b      	adds	r3, r5, r1
1a0056aa:	68b8      	ldr	r0, [r7, #8]
1a0056ac:	685a      	ldr	r2, [r3, #4]
1a0056ae:	4298      	cmp	r0, r3
1a0056b0:	f022 0203 	bic.w	r2, r2, #3
1a0056b4:	d053      	beq.n	1a00575e <_free_r+0xd2>
1a0056b6:	f01c 0f01 	tst.w	ip, #1
1a0056ba:	605a      	str	r2, [r3, #4]
1a0056bc:	eb03 0002 	add.w	r0, r3, r2
1a0056c0:	d13b      	bne.n	1a00573a <_free_r+0xae>
1a0056c2:	f854 cc08 	ldr.w	ip, [r4, #-8]
1a0056c6:	6840      	ldr	r0, [r0, #4]
1a0056c8:	eba5 050c 	sub.w	r5, r5, ip
1a0056cc:	f107 0e08 	add.w	lr, r7, #8
1a0056d0:	68ac      	ldr	r4, [r5, #8]
1a0056d2:	4574      	cmp	r4, lr
1a0056d4:	4461      	add	r1, ip
1a0056d6:	f000 0001 	and.w	r0, r0, #1
1a0056da:	d075      	beq.n	1a0057c8 <_free_r+0x13c>
1a0056dc:	f8d5 c00c 	ldr.w	ip, [r5, #12]
1a0056e0:	f8c4 c00c 	str.w	ip, [r4, #12]
1a0056e4:	f8cc 4008 	str.w	r4, [ip, #8]
1a0056e8:	b360      	cbz	r0, 1a005744 <_free_r+0xb8>
1a0056ea:	f041 0301 	orr.w	r3, r1, #1
1a0056ee:	606b      	str	r3, [r5, #4]
1a0056f0:	5069      	str	r1, [r5, r1]
1a0056f2:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
1a0056f6:	d350      	bcc.n	1a00579a <_free_r+0x10e>
1a0056f8:	0a4b      	lsrs	r3, r1, #9
1a0056fa:	2b04      	cmp	r3, #4
1a0056fc:	d870      	bhi.n	1a0057e0 <_free_r+0x154>
1a0056fe:	098b      	lsrs	r3, r1, #6
1a005700:	f103 0439 	add.w	r4, r3, #57	; 0x39
1a005704:	00e4      	lsls	r4, r4, #3
1a005706:	f103 0238 	add.w	r2, r3, #56	; 0x38
1a00570a:	1938      	adds	r0, r7, r4
1a00570c:	593b      	ldr	r3, [r7, r4]
1a00570e:	3808      	subs	r0, #8
1a005710:	4298      	cmp	r0, r3
1a005712:	d078      	beq.n	1a005806 <_free_r+0x17a>
1a005714:	685a      	ldr	r2, [r3, #4]
1a005716:	f022 0203 	bic.w	r2, r2, #3
1a00571a:	428a      	cmp	r2, r1
1a00571c:	d971      	bls.n	1a005802 <_free_r+0x176>
1a00571e:	689b      	ldr	r3, [r3, #8]
1a005720:	4298      	cmp	r0, r3
1a005722:	d1f7      	bne.n	1a005714 <_free_r+0x88>
1a005724:	68c3      	ldr	r3, [r0, #12]
1a005726:	e9c5 0302 	strd	r0, r3, [r5, #8]
1a00572a:	609d      	str	r5, [r3, #8]
1a00572c:	60c5      	str	r5, [r0, #12]
1a00572e:	4630      	mov	r0, r6
1a005730:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
1a005734:	f000 be36 	b.w	1a0063a4 <__malloc_unlock>
1a005738:	4770      	bx	lr
1a00573a:	6840      	ldr	r0, [r0, #4]
1a00573c:	f000 0001 	and.w	r0, r0, #1
1a005740:	2800      	cmp	r0, #0
1a005742:	d1d2      	bne.n	1a0056ea <_free_r+0x5e>
1a005744:	6898      	ldr	r0, [r3, #8]
1a005746:	4c48      	ldr	r4, [pc, #288]	; (1a005868 <_free_r+0x1dc>)
1a005748:	4411      	add	r1, r2
1a00574a:	42a0      	cmp	r0, r4
1a00574c:	f041 0201 	orr.w	r2, r1, #1
1a005750:	d062      	beq.n	1a005818 <_free_r+0x18c>
1a005752:	68db      	ldr	r3, [r3, #12]
1a005754:	60c3      	str	r3, [r0, #12]
1a005756:	6098      	str	r0, [r3, #8]
1a005758:	606a      	str	r2, [r5, #4]
1a00575a:	5069      	str	r1, [r5, r1]
1a00575c:	e7c9      	b.n	1a0056f2 <_free_r+0x66>
1a00575e:	f01c 0f01 	tst.w	ip, #1
1a005762:	440a      	add	r2, r1
1a005764:	d107      	bne.n	1a005776 <_free_r+0xea>
1a005766:	f854 3c08 	ldr.w	r3, [r4, #-8]
1a00576a:	1aed      	subs	r5, r5, r3
1a00576c:	441a      	add	r2, r3
1a00576e:	e9d5 1302 	ldrd	r1, r3, [r5, #8]
1a005772:	60cb      	str	r3, [r1, #12]
1a005774:	6099      	str	r1, [r3, #8]
1a005776:	4b3d      	ldr	r3, [pc, #244]	; (1a00586c <_free_r+0x1e0>)
1a005778:	681b      	ldr	r3, [r3, #0]
1a00577a:	f042 0101 	orr.w	r1, r2, #1
1a00577e:	4293      	cmp	r3, r2
1a005780:	6069      	str	r1, [r5, #4]
1a005782:	60bd      	str	r5, [r7, #8]
1a005784:	d804      	bhi.n	1a005790 <_free_r+0x104>
1a005786:	4b3a      	ldr	r3, [pc, #232]	; (1a005870 <_free_r+0x1e4>)
1a005788:	4630      	mov	r0, r6
1a00578a:	6819      	ldr	r1, [r3, #0]
1a00578c:	f7ff ff2e 	bl	1a0055ec <_malloc_trim_r>
1a005790:	4630      	mov	r0, r6
1a005792:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
1a005796:	f000 be05 	b.w	1a0063a4 <__malloc_unlock>
1a00579a:	08c9      	lsrs	r1, r1, #3
1a00579c:	6878      	ldr	r0, [r7, #4]
1a00579e:	1c4a      	adds	r2, r1, #1
1a0057a0:	2301      	movs	r3, #1
1a0057a2:	1089      	asrs	r1, r1, #2
1a0057a4:	408b      	lsls	r3, r1
1a0057a6:	4303      	orrs	r3, r0
1a0057a8:	eb07 01c2 	add.w	r1, r7, r2, lsl #3
1a0057ac:	f857 0032 	ldr.w	r0, [r7, r2, lsl #3]
1a0057b0:	607b      	str	r3, [r7, #4]
1a0057b2:	3908      	subs	r1, #8
1a0057b4:	e9c5 0102 	strd	r0, r1, [r5, #8]
1a0057b8:	f847 5032 	str.w	r5, [r7, r2, lsl #3]
1a0057bc:	60c5      	str	r5, [r0, #12]
1a0057be:	4630      	mov	r0, r6
1a0057c0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
1a0057c4:	f000 bdee 	b.w	1a0063a4 <__malloc_unlock>
1a0057c8:	2800      	cmp	r0, #0
1a0057ca:	d145      	bne.n	1a005858 <_free_r+0x1cc>
1a0057cc:	440a      	add	r2, r1
1a0057ce:	e9d3 1302 	ldrd	r1, r3, [r3, #8]
1a0057d2:	f042 0001 	orr.w	r0, r2, #1
1a0057d6:	60cb      	str	r3, [r1, #12]
1a0057d8:	6099      	str	r1, [r3, #8]
1a0057da:	6068      	str	r0, [r5, #4]
1a0057dc:	50aa      	str	r2, [r5, r2]
1a0057de:	e7d7      	b.n	1a005790 <_free_r+0x104>
1a0057e0:	2b14      	cmp	r3, #20
1a0057e2:	d908      	bls.n	1a0057f6 <_free_r+0x16a>
1a0057e4:	2b54      	cmp	r3, #84	; 0x54
1a0057e6:	d81e      	bhi.n	1a005826 <_free_r+0x19a>
1a0057e8:	0b0b      	lsrs	r3, r1, #12
1a0057ea:	f103 046f 	add.w	r4, r3, #111	; 0x6f
1a0057ee:	00e4      	lsls	r4, r4, #3
1a0057f0:	f103 026e 	add.w	r2, r3, #110	; 0x6e
1a0057f4:	e789      	b.n	1a00570a <_free_r+0x7e>
1a0057f6:	f103 045c 	add.w	r4, r3, #92	; 0x5c
1a0057fa:	00e4      	lsls	r4, r4, #3
1a0057fc:	f103 025b 	add.w	r2, r3, #91	; 0x5b
1a005800:	e783      	b.n	1a00570a <_free_r+0x7e>
1a005802:	4618      	mov	r0, r3
1a005804:	e78e      	b.n	1a005724 <_free_r+0x98>
1a005806:	1093      	asrs	r3, r2, #2
1a005808:	6879      	ldr	r1, [r7, #4]
1a00580a:	2201      	movs	r2, #1
1a00580c:	fa02 f303 	lsl.w	r3, r2, r3
1a005810:	430b      	orrs	r3, r1
1a005812:	607b      	str	r3, [r7, #4]
1a005814:	4603      	mov	r3, r0
1a005816:	e786      	b.n	1a005726 <_free_r+0x9a>
1a005818:	e9c7 5504 	strd	r5, r5, [r7, #16]
1a00581c:	e9c5 0002 	strd	r0, r0, [r5, #8]
1a005820:	606a      	str	r2, [r5, #4]
1a005822:	5069      	str	r1, [r5, r1]
1a005824:	e7b4      	b.n	1a005790 <_free_r+0x104>
1a005826:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
1a00582a:	d806      	bhi.n	1a00583a <_free_r+0x1ae>
1a00582c:	0bcb      	lsrs	r3, r1, #15
1a00582e:	f103 0478 	add.w	r4, r3, #120	; 0x78
1a005832:	00e4      	lsls	r4, r4, #3
1a005834:	f103 0277 	add.w	r2, r3, #119	; 0x77
1a005838:	e767      	b.n	1a00570a <_free_r+0x7e>
1a00583a:	f240 5254 	movw	r2, #1364	; 0x554
1a00583e:	4293      	cmp	r3, r2
1a005840:	d806      	bhi.n	1a005850 <_free_r+0x1c4>
1a005842:	0c8b      	lsrs	r3, r1, #18
1a005844:	f103 047d 	add.w	r4, r3, #125	; 0x7d
1a005848:	00e4      	lsls	r4, r4, #3
1a00584a:	f103 027c 	add.w	r2, r3, #124	; 0x7c
1a00584e:	e75c      	b.n	1a00570a <_free_r+0x7e>
1a005850:	f44f 747e 	mov.w	r4, #1016	; 0x3f8
1a005854:	227e      	movs	r2, #126	; 0x7e
1a005856:	e758      	b.n	1a00570a <_free_r+0x7e>
1a005858:	f041 0201 	orr.w	r2, r1, #1
1a00585c:	606a      	str	r2, [r5, #4]
1a00585e:	6019      	str	r1, [r3, #0]
1a005860:	e796      	b.n	1a005790 <_free_r+0x104>
1a005862:	bf00      	nop
1a005864:	100004b8 	.word	0x100004b8
1a005868:	100004c0 	.word	0x100004c0
1a00586c:	100008c4 	.word	0x100008c4
1a005870:	10000ad0 	.word	0x10000ad0

1a005874 <__sfvwrite_r>:
1a005874:	6893      	ldr	r3, [r2, #8]
1a005876:	2b00      	cmp	r3, #0
1a005878:	f000 80e4 	beq.w	1a005a44 <__sfvwrite_r+0x1d0>
1a00587c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a005880:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
1a005884:	b29b      	uxth	r3, r3
1a005886:	460c      	mov	r4, r1
1a005888:	0719      	lsls	r1, r3, #28
1a00588a:	b083      	sub	sp, #12
1a00588c:	4682      	mov	sl, r0
1a00588e:	4690      	mov	r8, r2
1a005890:	d535      	bpl.n	1a0058fe <__sfvwrite_r+0x8a>
1a005892:	6922      	ldr	r2, [r4, #16]
1a005894:	b39a      	cbz	r2, 1a0058fe <__sfvwrite_r+0x8a>
1a005896:	f013 0202 	ands.w	r2, r3, #2
1a00589a:	f8d8 6000 	ldr.w	r6, [r8]
1a00589e:	d03d      	beq.n	1a00591c <__sfvwrite_r+0xa8>
1a0058a0:	2700      	movs	r7, #0
1a0058a2:	f8d4 b024 	ldr.w	fp, [r4, #36]	; 0x24
1a0058a6:	f8d4 c01c 	ldr.w	ip, [r4, #28]
1a0058aa:	f8df 92c0 	ldr.w	r9, [pc, #704]	; 1a005b6c <__sfvwrite_r+0x2f8>
1a0058ae:	463d      	mov	r5, r7
1a0058b0:	454d      	cmp	r5, r9
1a0058b2:	462b      	mov	r3, r5
1a0058b4:	463a      	mov	r2, r7
1a0058b6:	bf28      	it	cs
1a0058b8:	464b      	movcs	r3, r9
1a0058ba:	4661      	mov	r1, ip
1a0058bc:	4650      	mov	r0, sl
1a0058be:	b1d5      	cbz	r5, 1a0058f6 <__sfvwrite_r+0x82>
1a0058c0:	47d8      	blx	fp
1a0058c2:	2800      	cmp	r0, #0
1a0058c4:	f340 80c6 	ble.w	1a005a54 <__sfvwrite_r+0x1e0>
1a0058c8:	f8d8 3008 	ldr.w	r3, [r8, #8]
1a0058cc:	1a1b      	subs	r3, r3, r0
1a0058ce:	4407      	add	r7, r0
1a0058d0:	1a2d      	subs	r5, r5, r0
1a0058d2:	f8c8 3008 	str.w	r3, [r8, #8]
1a0058d6:	2b00      	cmp	r3, #0
1a0058d8:	f000 80b0 	beq.w	1a005a3c <__sfvwrite_r+0x1c8>
1a0058dc:	f8d4 c01c 	ldr.w	ip, [r4, #28]
1a0058e0:	f8d4 b024 	ldr.w	fp, [r4, #36]	; 0x24
1a0058e4:	454d      	cmp	r5, r9
1a0058e6:	462b      	mov	r3, r5
1a0058e8:	463a      	mov	r2, r7
1a0058ea:	bf28      	it	cs
1a0058ec:	464b      	movcs	r3, r9
1a0058ee:	4661      	mov	r1, ip
1a0058f0:	4650      	mov	r0, sl
1a0058f2:	2d00      	cmp	r5, #0
1a0058f4:	d1e4      	bne.n	1a0058c0 <__sfvwrite_r+0x4c>
1a0058f6:	e9d6 7500 	ldrd	r7, r5, [r6]
1a0058fa:	3608      	adds	r6, #8
1a0058fc:	e7d8      	b.n	1a0058b0 <__sfvwrite_r+0x3c>
1a0058fe:	4621      	mov	r1, r4
1a005900:	4650      	mov	r0, sl
1a005902:	f7fe fd2d 	bl	1a004360 <__swsetup_r>
1a005906:	2800      	cmp	r0, #0
1a005908:	f040 812a 	bne.w	1a005b60 <__sfvwrite_r+0x2ec>
1a00590c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a005910:	f8d8 6000 	ldr.w	r6, [r8]
1a005914:	b29b      	uxth	r3, r3
1a005916:	f013 0202 	ands.w	r2, r3, #2
1a00591a:	d1c1      	bne.n	1a0058a0 <__sfvwrite_r+0x2c>
1a00591c:	f013 0901 	ands.w	r9, r3, #1
1a005920:	d15d      	bne.n	1a0059de <__sfvwrite_r+0x16a>
1a005922:	68a7      	ldr	r7, [r4, #8]
1a005924:	6820      	ldr	r0, [r4, #0]
1a005926:	464d      	mov	r5, r9
1a005928:	2d00      	cmp	r5, #0
1a00592a:	d054      	beq.n	1a0059d6 <__sfvwrite_r+0x162>
1a00592c:	059a      	lsls	r2, r3, #22
1a00592e:	f140 809b 	bpl.w	1a005a68 <__sfvwrite_r+0x1f4>
1a005932:	42af      	cmp	r7, r5
1a005934:	46bb      	mov	fp, r7
1a005936:	f200 80d8 	bhi.w	1a005aea <__sfvwrite_r+0x276>
1a00593a:	f413 6f90 	tst.w	r3, #1152	; 0x480
1a00593e:	d02f      	beq.n	1a0059a0 <__sfvwrite_r+0x12c>
1a005940:	e9d4 1704 	ldrd	r1, r7, [r4, #16]
1a005944:	eb07 0747 	add.w	r7, r7, r7, lsl #1
1a005948:	eba0 0b01 	sub.w	fp, r0, r1
1a00594c:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
1a005950:	1c68      	adds	r0, r5, #1
1a005952:	107f      	asrs	r7, r7, #1
1a005954:	4458      	add	r0, fp
1a005956:	42b8      	cmp	r0, r7
1a005958:	463a      	mov	r2, r7
1a00595a:	bf84      	itt	hi
1a00595c:	4607      	movhi	r7, r0
1a00595e:	463a      	movhi	r2, r7
1a005960:	055b      	lsls	r3, r3, #21
1a005962:	f140 80d3 	bpl.w	1a005b0c <__sfvwrite_r+0x298>
1a005966:	4611      	mov	r1, r2
1a005968:	4650      	mov	r0, sl
1a00596a:	f000 f9b9 	bl	1a005ce0 <_malloc_r>
1a00596e:	2800      	cmp	r0, #0
1a005970:	f000 80f0 	beq.w	1a005b54 <__sfvwrite_r+0x2e0>
1a005974:	465a      	mov	r2, fp
1a005976:	6921      	ldr	r1, [r4, #16]
1a005978:	9001      	str	r0, [sp, #4]
1a00597a:	f7fc fdb1 	bl	1a0024e0 <memcpy>
1a00597e:	89a2      	ldrh	r2, [r4, #12]
1a005980:	9b01      	ldr	r3, [sp, #4]
1a005982:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
1a005986:	f042 0280 	orr.w	r2, r2, #128	; 0x80
1a00598a:	81a2      	strh	r2, [r4, #12]
1a00598c:	eba7 020b 	sub.w	r2, r7, fp
1a005990:	eb03 000b 	add.w	r0, r3, fp
1a005994:	6167      	str	r7, [r4, #20]
1a005996:	6123      	str	r3, [r4, #16]
1a005998:	6020      	str	r0, [r4, #0]
1a00599a:	60a2      	str	r2, [r4, #8]
1a00599c:	462f      	mov	r7, r5
1a00599e:	46ab      	mov	fp, r5
1a0059a0:	465a      	mov	r2, fp
1a0059a2:	4649      	mov	r1, r9
1a0059a4:	f000 fc94 	bl	1a0062d0 <memmove>
1a0059a8:	68a2      	ldr	r2, [r4, #8]
1a0059aa:	6823      	ldr	r3, [r4, #0]
1a0059ac:	1bd2      	subs	r2, r2, r7
1a0059ae:	445b      	add	r3, fp
1a0059b0:	462f      	mov	r7, r5
1a0059b2:	60a2      	str	r2, [r4, #8]
1a0059b4:	6023      	str	r3, [r4, #0]
1a0059b6:	2500      	movs	r5, #0
1a0059b8:	f8d8 3008 	ldr.w	r3, [r8, #8]
1a0059bc:	1bdb      	subs	r3, r3, r7
1a0059be:	44b9      	add	r9, r7
1a0059c0:	f8c8 3008 	str.w	r3, [r8, #8]
1a0059c4:	2b00      	cmp	r3, #0
1a0059c6:	d039      	beq.n	1a005a3c <__sfvwrite_r+0x1c8>
1a0059c8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a0059cc:	68a7      	ldr	r7, [r4, #8]
1a0059ce:	6820      	ldr	r0, [r4, #0]
1a0059d0:	b29b      	uxth	r3, r3
1a0059d2:	2d00      	cmp	r5, #0
1a0059d4:	d1aa      	bne.n	1a00592c <__sfvwrite_r+0xb8>
1a0059d6:	e9d6 9500 	ldrd	r9, r5, [r6]
1a0059da:	3608      	adds	r6, #8
1a0059dc:	e7a4      	b.n	1a005928 <__sfvwrite_r+0xb4>
1a0059de:	4633      	mov	r3, r6
1a0059e0:	4691      	mov	r9, r2
1a0059e2:	4610      	mov	r0, r2
1a0059e4:	4617      	mov	r7, r2
1a0059e6:	464e      	mov	r6, r9
1a0059e8:	469b      	mov	fp, r3
1a0059ea:	2f00      	cmp	r7, #0
1a0059ec:	d06b      	beq.n	1a005ac6 <__sfvwrite_r+0x252>
1a0059ee:	2800      	cmp	r0, #0
1a0059f0:	d071      	beq.n	1a005ad6 <__sfvwrite_r+0x262>
1a0059f2:	e9d4 1204 	ldrd	r1, r2, [r4, #16]
1a0059f6:	6820      	ldr	r0, [r4, #0]
1a0059f8:	45b9      	cmp	r9, r7
1a0059fa:	464b      	mov	r3, r9
1a0059fc:	bf28      	it	cs
1a0059fe:	463b      	movcs	r3, r7
1a005a00:	4288      	cmp	r0, r1
1a005a02:	d903      	bls.n	1a005a0c <__sfvwrite_r+0x198>
1a005a04:	68a5      	ldr	r5, [r4, #8]
1a005a06:	4415      	add	r5, r2
1a005a08:	42ab      	cmp	r3, r5
1a005a0a:	dc71      	bgt.n	1a005af0 <__sfvwrite_r+0x27c>
1a005a0c:	429a      	cmp	r2, r3
1a005a0e:	f300 8093 	bgt.w	1a005b38 <__sfvwrite_r+0x2c4>
1a005a12:	4613      	mov	r3, r2
1a005a14:	6a65      	ldr	r5, [r4, #36]	; 0x24
1a005a16:	69e1      	ldr	r1, [r4, #28]
1a005a18:	4632      	mov	r2, r6
1a005a1a:	4650      	mov	r0, sl
1a005a1c:	47a8      	blx	r5
1a005a1e:	1e05      	subs	r5, r0, #0
1a005a20:	dd18      	ble.n	1a005a54 <__sfvwrite_r+0x1e0>
1a005a22:	ebb9 0905 	subs.w	r9, r9, r5
1a005a26:	d00f      	beq.n	1a005a48 <__sfvwrite_r+0x1d4>
1a005a28:	2001      	movs	r0, #1
1a005a2a:	f8d8 3008 	ldr.w	r3, [r8, #8]
1a005a2e:	1b5b      	subs	r3, r3, r5
1a005a30:	442e      	add	r6, r5
1a005a32:	1b7f      	subs	r7, r7, r5
1a005a34:	f8c8 3008 	str.w	r3, [r8, #8]
1a005a38:	2b00      	cmp	r3, #0
1a005a3a:	d1d6      	bne.n	1a0059ea <__sfvwrite_r+0x176>
1a005a3c:	2000      	movs	r0, #0
1a005a3e:	b003      	add	sp, #12
1a005a40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a005a44:	2000      	movs	r0, #0
1a005a46:	4770      	bx	lr
1a005a48:	4621      	mov	r1, r4
1a005a4a:	4650      	mov	r0, sl
1a005a4c:	f7ff fd3a 	bl	1a0054c4 <_fflush_r>
1a005a50:	2800      	cmp	r0, #0
1a005a52:	d0ea      	beq.n	1a005a2a <__sfvwrite_r+0x1b6>
1a005a54:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a005a58:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a005a5c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a005a60:	81a3      	strh	r3, [r4, #12]
1a005a62:	b003      	add	sp, #12
1a005a64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a005a68:	6923      	ldr	r3, [r4, #16]
1a005a6a:	4283      	cmp	r3, r0
1a005a6c:	d315      	bcc.n	1a005a9a <__sfvwrite_r+0x226>
1a005a6e:	6961      	ldr	r1, [r4, #20]
1a005a70:	42a9      	cmp	r1, r5
1a005a72:	d812      	bhi.n	1a005a9a <__sfvwrite_r+0x226>
1a005a74:	4b3c      	ldr	r3, [pc, #240]	; (1a005b68 <__sfvwrite_r+0x2f4>)
1a005a76:	6a67      	ldr	r7, [r4, #36]	; 0x24
1a005a78:	429d      	cmp	r5, r3
1a005a7a:	bf94      	ite	ls
1a005a7c:	462b      	movls	r3, r5
1a005a7e:	f06f 4300 	mvnhi.w	r3, #2147483648	; 0x80000000
1a005a82:	464a      	mov	r2, r9
1a005a84:	fb93 f3f1 	sdiv	r3, r3, r1
1a005a88:	4650      	mov	r0, sl
1a005a8a:	fb01 f303 	mul.w	r3, r1, r3
1a005a8e:	69e1      	ldr	r1, [r4, #28]
1a005a90:	47b8      	blx	r7
1a005a92:	1e07      	subs	r7, r0, #0
1a005a94:	ddde      	ble.n	1a005a54 <__sfvwrite_r+0x1e0>
1a005a96:	1bed      	subs	r5, r5, r7
1a005a98:	e78e      	b.n	1a0059b8 <__sfvwrite_r+0x144>
1a005a9a:	42af      	cmp	r7, r5
1a005a9c:	bf28      	it	cs
1a005a9e:	462f      	movcs	r7, r5
1a005aa0:	463a      	mov	r2, r7
1a005aa2:	4649      	mov	r1, r9
1a005aa4:	f000 fc14 	bl	1a0062d0 <memmove>
1a005aa8:	68a3      	ldr	r3, [r4, #8]
1a005aaa:	6822      	ldr	r2, [r4, #0]
1a005aac:	1bdb      	subs	r3, r3, r7
1a005aae:	443a      	add	r2, r7
1a005ab0:	60a3      	str	r3, [r4, #8]
1a005ab2:	6022      	str	r2, [r4, #0]
1a005ab4:	2b00      	cmp	r3, #0
1a005ab6:	d1ee      	bne.n	1a005a96 <__sfvwrite_r+0x222>
1a005ab8:	4621      	mov	r1, r4
1a005aba:	4650      	mov	r0, sl
1a005abc:	f7ff fd02 	bl	1a0054c4 <_fflush_r>
1a005ac0:	2800      	cmp	r0, #0
1a005ac2:	d0e8      	beq.n	1a005a96 <__sfvwrite_r+0x222>
1a005ac4:	e7c6      	b.n	1a005a54 <__sfvwrite_r+0x1e0>
1a005ac6:	f10b 0308 	add.w	r3, fp, #8
1a005aca:	e953 6702 	ldrd	r6, r7, [r3, #-8]
1a005ace:	469b      	mov	fp, r3
1a005ad0:	3308      	adds	r3, #8
1a005ad2:	2f00      	cmp	r7, #0
1a005ad4:	d0f9      	beq.n	1a005aca <__sfvwrite_r+0x256>
1a005ad6:	463a      	mov	r2, r7
1a005ad8:	210a      	movs	r1, #10
1a005ada:	4630      	mov	r0, r6
1a005adc:	f000 fba8 	bl	1a006230 <memchr>
1a005ae0:	b338      	cbz	r0, 1a005b32 <__sfvwrite_r+0x2be>
1a005ae2:	3001      	adds	r0, #1
1a005ae4:	eba0 0906 	sub.w	r9, r0, r6
1a005ae8:	e783      	b.n	1a0059f2 <__sfvwrite_r+0x17e>
1a005aea:	462f      	mov	r7, r5
1a005aec:	46ab      	mov	fp, r5
1a005aee:	e757      	b.n	1a0059a0 <__sfvwrite_r+0x12c>
1a005af0:	4631      	mov	r1, r6
1a005af2:	462a      	mov	r2, r5
1a005af4:	f000 fbec 	bl	1a0062d0 <memmove>
1a005af8:	6823      	ldr	r3, [r4, #0]
1a005afa:	442b      	add	r3, r5
1a005afc:	6023      	str	r3, [r4, #0]
1a005afe:	4621      	mov	r1, r4
1a005b00:	4650      	mov	r0, sl
1a005b02:	f7ff fcdf 	bl	1a0054c4 <_fflush_r>
1a005b06:	2800      	cmp	r0, #0
1a005b08:	d08b      	beq.n	1a005a22 <__sfvwrite_r+0x1ae>
1a005b0a:	e7a3      	b.n	1a005a54 <__sfvwrite_r+0x1e0>
1a005b0c:	4650      	mov	r0, sl
1a005b0e:	f000 ff59 	bl	1a0069c4 <_realloc_r>
1a005b12:	4603      	mov	r3, r0
1a005b14:	2800      	cmp	r0, #0
1a005b16:	f47f af39 	bne.w	1a00598c <__sfvwrite_r+0x118>
1a005b1a:	6921      	ldr	r1, [r4, #16]
1a005b1c:	4650      	mov	r0, sl
1a005b1e:	f7ff fdb5 	bl	1a00568c <_free_r>
1a005b22:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a005b26:	220c      	movs	r2, #12
1a005b28:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a005b2c:	f8ca 2000 	str.w	r2, [sl]
1a005b30:	e792      	b.n	1a005a58 <__sfvwrite_r+0x1e4>
1a005b32:	f107 0901 	add.w	r9, r7, #1
1a005b36:	e75c      	b.n	1a0059f2 <__sfvwrite_r+0x17e>
1a005b38:	461a      	mov	r2, r3
1a005b3a:	4631      	mov	r1, r6
1a005b3c:	9301      	str	r3, [sp, #4]
1a005b3e:	f000 fbc7 	bl	1a0062d0 <memmove>
1a005b42:	9b01      	ldr	r3, [sp, #4]
1a005b44:	68a1      	ldr	r1, [r4, #8]
1a005b46:	6822      	ldr	r2, [r4, #0]
1a005b48:	1ac9      	subs	r1, r1, r3
1a005b4a:	441a      	add	r2, r3
1a005b4c:	60a1      	str	r1, [r4, #8]
1a005b4e:	6022      	str	r2, [r4, #0]
1a005b50:	461d      	mov	r5, r3
1a005b52:	e766      	b.n	1a005a22 <__sfvwrite_r+0x1ae>
1a005b54:	230c      	movs	r3, #12
1a005b56:	f8ca 3000 	str.w	r3, [sl]
1a005b5a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a005b5e:	e77b      	b.n	1a005a58 <__sfvwrite_r+0x1e4>
1a005b60:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a005b64:	e76b      	b.n	1a005a3e <__sfvwrite_r+0x1ca>
1a005b66:	bf00      	nop
1a005b68:	7ffffffe 	.word	0x7ffffffe
1a005b6c:	7ffffc00 	.word	0x7ffffc00

1a005b70 <_fwalk_reent>:
1a005b70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a005b74:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
1a005b78:	d01f      	beq.n	1a005bba <_fwalk_reent+0x4a>
1a005b7a:	4688      	mov	r8, r1
1a005b7c:	4606      	mov	r6, r0
1a005b7e:	f04f 0900 	mov.w	r9, #0
1a005b82:	e9d7 5401 	ldrd	r5, r4, [r7, #4]
1a005b86:	3d01      	subs	r5, #1
1a005b88:	d411      	bmi.n	1a005bae <_fwalk_reent+0x3e>
1a005b8a:	89a3      	ldrh	r3, [r4, #12]
1a005b8c:	2b01      	cmp	r3, #1
1a005b8e:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
1a005b92:	4621      	mov	r1, r4
1a005b94:	4630      	mov	r0, r6
1a005b96:	d906      	bls.n	1a005ba6 <_fwalk_reent+0x36>
1a005b98:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
1a005b9c:	3301      	adds	r3, #1
1a005b9e:	d002      	beq.n	1a005ba6 <_fwalk_reent+0x36>
1a005ba0:	47c0      	blx	r8
1a005ba2:	ea49 0900 	orr.w	r9, r9, r0
1a005ba6:	1c6b      	adds	r3, r5, #1
1a005ba8:	f104 0468 	add.w	r4, r4, #104	; 0x68
1a005bac:	d1ed      	bne.n	1a005b8a <_fwalk_reent+0x1a>
1a005bae:	683f      	ldr	r7, [r7, #0]
1a005bb0:	2f00      	cmp	r7, #0
1a005bb2:	d1e6      	bne.n	1a005b82 <_fwalk_reent+0x12>
1a005bb4:	4648      	mov	r0, r9
1a005bb6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a005bba:	46b9      	mov	r9, r7
1a005bbc:	4648      	mov	r0, r9
1a005bbe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a005bc2:	bf00      	nop

1a005bc4 <_localeconv_r>:
1a005bc4:	4a04      	ldr	r2, [pc, #16]	; (1a005bd8 <_localeconv_r+0x14>)
1a005bc6:	4b05      	ldr	r3, [pc, #20]	; (1a005bdc <_localeconv_r+0x18>)
1a005bc8:	6812      	ldr	r2, [r2, #0]
1a005bca:	6b50      	ldr	r0, [r2, #52]	; 0x34
1a005bcc:	2800      	cmp	r0, #0
1a005bce:	bf08      	it	eq
1a005bd0:	4618      	moveq	r0, r3
1a005bd2:	30f0      	adds	r0, #240	; 0xf0
1a005bd4:	4770      	bx	lr
1a005bd6:	bf00      	nop
1a005bd8:	10000088 	.word	0x10000088
1a005bdc:	100008c8 	.word	0x100008c8

1a005be0 <__retarget_lock_init_recursive>:
1a005be0:	4770      	bx	lr
1a005be2:	bf00      	nop

1a005be4 <__retarget_lock_close_recursive>:
1a005be4:	4770      	bx	lr
1a005be6:	bf00      	nop

1a005be8 <__retarget_lock_acquire_recursive>:
1a005be8:	4770      	bx	lr
1a005bea:	bf00      	nop

1a005bec <__retarget_lock_release_recursive>:
1a005bec:	4770      	bx	lr
1a005bee:	bf00      	nop

1a005bf0 <__swhatbuf_r>:
1a005bf0:	b570      	push	{r4, r5, r6, lr}
1a005bf2:	460c      	mov	r4, r1
1a005bf4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
1a005bf8:	2900      	cmp	r1, #0
1a005bfa:	b096      	sub	sp, #88	; 0x58
1a005bfc:	4615      	mov	r5, r2
1a005bfe:	461e      	mov	r6, r3
1a005c00:	da0f      	bge.n	1a005c22 <__swhatbuf_r+0x32>
1a005c02:	89a2      	ldrh	r2, [r4, #12]
1a005c04:	2300      	movs	r3, #0
1a005c06:	f012 0080 	ands.w	r0, r2, #128	; 0x80
1a005c0a:	6033      	str	r3, [r6, #0]
1a005c0c:	d104      	bne.n	1a005c18 <__swhatbuf_r+0x28>
1a005c0e:	f44f 6380 	mov.w	r3, #1024	; 0x400
1a005c12:	602b      	str	r3, [r5, #0]
1a005c14:	b016      	add	sp, #88	; 0x58
1a005c16:	bd70      	pop	{r4, r5, r6, pc}
1a005c18:	2240      	movs	r2, #64	; 0x40
1a005c1a:	4618      	mov	r0, r3
1a005c1c:	602a      	str	r2, [r5, #0]
1a005c1e:	b016      	add	sp, #88	; 0x58
1a005c20:	bd70      	pop	{r4, r5, r6, pc}
1a005c22:	466a      	mov	r2, sp
1a005c24:	f7fa fd57 	bl	1a0006d6 <_fstat_r>
1a005c28:	2800      	cmp	r0, #0
1a005c2a:	dbea      	blt.n	1a005c02 <__swhatbuf_r+0x12>
1a005c2c:	9b01      	ldr	r3, [sp, #4]
1a005c2e:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
1a005c32:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
1a005c36:	fab3 f383 	clz	r3, r3
1a005c3a:	095b      	lsrs	r3, r3, #5
1a005c3c:	f44f 6280 	mov.w	r2, #1024	; 0x400
1a005c40:	f44f 6000 	mov.w	r0, #2048	; 0x800
1a005c44:	6033      	str	r3, [r6, #0]
1a005c46:	602a      	str	r2, [r5, #0]
1a005c48:	b016      	add	sp, #88	; 0x58
1a005c4a:	bd70      	pop	{r4, r5, r6, pc}

1a005c4c <__smakebuf_r>:
1a005c4c:	898a      	ldrh	r2, [r1, #12]
1a005c4e:	0792      	lsls	r2, r2, #30
1a005c50:	460b      	mov	r3, r1
1a005c52:	d506      	bpl.n	1a005c62 <__smakebuf_r+0x16>
1a005c54:	f101 0243 	add.w	r2, r1, #67	; 0x43
1a005c58:	2101      	movs	r1, #1
1a005c5a:	601a      	str	r2, [r3, #0]
1a005c5c:	e9c3 2104 	strd	r2, r1, [r3, #16]
1a005c60:	4770      	bx	lr
1a005c62:	b570      	push	{r4, r5, r6, lr}
1a005c64:	b082      	sub	sp, #8
1a005c66:	ab01      	add	r3, sp, #4
1a005c68:	466a      	mov	r2, sp
1a005c6a:	460c      	mov	r4, r1
1a005c6c:	4605      	mov	r5, r0
1a005c6e:	f7ff ffbf 	bl	1a005bf0 <__swhatbuf_r>
1a005c72:	9900      	ldr	r1, [sp, #0]
1a005c74:	4606      	mov	r6, r0
1a005c76:	4628      	mov	r0, r5
1a005c78:	f000 f832 	bl	1a005ce0 <_malloc_r>
1a005c7c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a005c80:	b1d8      	cbz	r0, 1a005cba <__smakebuf_r+0x6e>
1a005c82:	4916      	ldr	r1, [pc, #88]	; (1a005cdc <__smakebuf_r+0x90>)
1a005c84:	63e9      	str	r1, [r5, #60]	; 0x3c
1a005c86:	9a01      	ldr	r2, [sp, #4]
1a005c88:	9900      	ldr	r1, [sp, #0]
1a005c8a:	6020      	str	r0, [r4, #0]
1a005c8c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a005c90:	81a3      	strh	r3, [r4, #12]
1a005c92:	e9c4 0104 	strd	r0, r1, [r4, #16]
1a005c96:	b91a      	cbnz	r2, 1a005ca0 <__smakebuf_r+0x54>
1a005c98:	4333      	orrs	r3, r6
1a005c9a:	81a3      	strh	r3, [r4, #12]
1a005c9c:	b002      	add	sp, #8
1a005c9e:	bd70      	pop	{r4, r5, r6, pc}
1a005ca0:	4628      	mov	r0, r5
1a005ca2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
1a005ca6:	f7fa fd1b 	bl	1a0006e0 <_isatty_r>
1a005caa:	b1a0      	cbz	r0, 1a005cd6 <__smakebuf_r+0x8a>
1a005cac:	89a3      	ldrh	r3, [r4, #12]
1a005cae:	f023 0303 	bic.w	r3, r3, #3
1a005cb2:	f043 0301 	orr.w	r3, r3, #1
1a005cb6:	b21b      	sxth	r3, r3
1a005cb8:	e7ee      	b.n	1a005c98 <__smakebuf_r+0x4c>
1a005cba:	059a      	lsls	r2, r3, #22
1a005cbc:	d4ee      	bmi.n	1a005c9c <__smakebuf_r+0x50>
1a005cbe:	f023 0303 	bic.w	r3, r3, #3
1a005cc2:	f104 0243 	add.w	r2, r4, #67	; 0x43
1a005cc6:	f043 0302 	orr.w	r3, r3, #2
1a005cca:	2101      	movs	r1, #1
1a005ccc:	81a3      	strh	r3, [r4, #12]
1a005cce:	6022      	str	r2, [r4, #0]
1a005cd0:	e9c4 2104 	strd	r2, r1, [r4, #16]
1a005cd4:	e7e2      	b.n	1a005c9c <__smakebuf_r+0x50>
1a005cd6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a005cda:	e7dd      	b.n	1a005c98 <__smakebuf_r+0x4c>
1a005cdc:	1a005571 	.word	0x1a005571

1a005ce0 <_malloc_r>:
1a005ce0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a005ce4:	f101 050b 	add.w	r5, r1, #11
1a005ce8:	2d16      	cmp	r5, #22
1a005cea:	b083      	sub	sp, #12
1a005cec:	4606      	mov	r6, r0
1a005cee:	d823      	bhi.n	1a005d38 <_malloc_r+0x58>
1a005cf0:	2910      	cmp	r1, #16
1a005cf2:	f200 80b9 	bhi.w	1a005e68 <_malloc_r+0x188>
1a005cf6:	f000 fb4f 	bl	1a006398 <__malloc_lock>
1a005cfa:	2510      	movs	r5, #16
1a005cfc:	2318      	movs	r3, #24
1a005cfe:	2002      	movs	r0, #2
1a005d00:	4fc5      	ldr	r7, [pc, #788]	; (1a006018 <_malloc_r+0x338>)
1a005d02:	443b      	add	r3, r7
1a005d04:	f1a3 0208 	sub.w	r2, r3, #8
1a005d08:	685c      	ldr	r4, [r3, #4]
1a005d0a:	4294      	cmp	r4, r2
1a005d0c:	f000 8166 	beq.w	1a005fdc <_malloc_r+0x2fc>
1a005d10:	6863      	ldr	r3, [r4, #4]
1a005d12:	f023 0303 	bic.w	r3, r3, #3
1a005d16:	4423      	add	r3, r4
1a005d18:	e9d4 5102 	ldrd	r5, r1, [r4, #8]
1a005d1c:	685a      	ldr	r2, [r3, #4]
1a005d1e:	60e9      	str	r1, [r5, #12]
1a005d20:	f042 0201 	orr.w	r2, r2, #1
1a005d24:	608d      	str	r5, [r1, #8]
1a005d26:	4630      	mov	r0, r6
1a005d28:	605a      	str	r2, [r3, #4]
1a005d2a:	f000 fb3b 	bl	1a0063a4 <__malloc_unlock>
1a005d2e:	3408      	adds	r4, #8
1a005d30:	4620      	mov	r0, r4
1a005d32:	b003      	add	sp, #12
1a005d34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a005d38:	f035 0507 	bics.w	r5, r5, #7
1a005d3c:	f100 8094 	bmi.w	1a005e68 <_malloc_r+0x188>
1a005d40:	42a9      	cmp	r1, r5
1a005d42:	f200 8091 	bhi.w	1a005e68 <_malloc_r+0x188>
1a005d46:	f000 fb27 	bl	1a006398 <__malloc_lock>
1a005d4a:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
1a005d4e:	f0c0 8183 	bcc.w	1a006058 <_malloc_r+0x378>
1a005d52:	0a6b      	lsrs	r3, r5, #9
1a005d54:	f000 808f 	beq.w	1a005e76 <_malloc_r+0x196>
1a005d58:	2b04      	cmp	r3, #4
1a005d5a:	f200 8146 	bhi.w	1a005fea <_malloc_r+0x30a>
1a005d5e:	09ab      	lsrs	r3, r5, #6
1a005d60:	f103 0039 	add.w	r0, r3, #57	; 0x39
1a005d64:	f103 0c38 	add.w	ip, r3, #56	; 0x38
1a005d68:	00c3      	lsls	r3, r0, #3
1a005d6a:	4fab      	ldr	r7, [pc, #684]	; (1a006018 <_malloc_r+0x338>)
1a005d6c:	443b      	add	r3, r7
1a005d6e:	f1a3 0108 	sub.w	r1, r3, #8
1a005d72:	685c      	ldr	r4, [r3, #4]
1a005d74:	42a1      	cmp	r1, r4
1a005d76:	d106      	bne.n	1a005d86 <_malloc_r+0xa6>
1a005d78:	e00c      	b.n	1a005d94 <_malloc_r+0xb4>
1a005d7a:	2a00      	cmp	r2, #0
1a005d7c:	f280 811d 	bge.w	1a005fba <_malloc_r+0x2da>
1a005d80:	68e4      	ldr	r4, [r4, #12]
1a005d82:	42a1      	cmp	r1, r4
1a005d84:	d006      	beq.n	1a005d94 <_malloc_r+0xb4>
1a005d86:	6863      	ldr	r3, [r4, #4]
1a005d88:	f023 0303 	bic.w	r3, r3, #3
1a005d8c:	1b5a      	subs	r2, r3, r5
1a005d8e:	2a0f      	cmp	r2, #15
1a005d90:	ddf3      	ble.n	1a005d7a <_malloc_r+0x9a>
1a005d92:	4660      	mov	r0, ip
1a005d94:	693c      	ldr	r4, [r7, #16]
1a005d96:	f8df c294 	ldr.w	ip, [pc, #660]	; 1a00602c <_malloc_r+0x34c>
1a005d9a:	4564      	cmp	r4, ip
1a005d9c:	d071      	beq.n	1a005e82 <_malloc_r+0x1a2>
1a005d9e:	6863      	ldr	r3, [r4, #4]
1a005da0:	f023 0303 	bic.w	r3, r3, #3
1a005da4:	1b5a      	subs	r2, r3, r5
1a005da6:	2a0f      	cmp	r2, #15
1a005da8:	f300 8144 	bgt.w	1a006034 <_malloc_r+0x354>
1a005dac:	2a00      	cmp	r2, #0
1a005dae:	e9c7 cc04 	strd	ip, ip, [r7, #16]
1a005db2:	f280 8126 	bge.w	1a006002 <_malloc_r+0x322>
1a005db6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
1a005dba:	f080 8169 	bcs.w	1a006090 <_malloc_r+0x3b0>
1a005dbe:	08db      	lsrs	r3, r3, #3
1a005dc0:	1c59      	adds	r1, r3, #1
1a005dc2:	687a      	ldr	r2, [r7, #4]
1a005dc4:	f857 8031 	ldr.w	r8, [r7, r1, lsl #3]
1a005dc8:	f8c4 8008 	str.w	r8, [r4, #8]
1a005dcc:	f04f 0e01 	mov.w	lr, #1
1a005dd0:	109b      	asrs	r3, r3, #2
1a005dd2:	fa0e f303 	lsl.w	r3, lr, r3
1a005dd6:	eb07 0ec1 	add.w	lr, r7, r1, lsl #3
1a005dda:	4313      	orrs	r3, r2
1a005ddc:	f1ae 0208 	sub.w	r2, lr, #8
1a005de0:	60e2      	str	r2, [r4, #12]
1a005de2:	607b      	str	r3, [r7, #4]
1a005de4:	f847 4031 	str.w	r4, [r7, r1, lsl #3]
1a005de8:	f8c8 400c 	str.w	r4, [r8, #12]
1a005dec:	1082      	asrs	r2, r0, #2
1a005dee:	2401      	movs	r4, #1
1a005df0:	4094      	lsls	r4, r2
1a005df2:	429c      	cmp	r4, r3
1a005df4:	d84b      	bhi.n	1a005e8e <_malloc_r+0x1ae>
1a005df6:	421c      	tst	r4, r3
1a005df8:	d106      	bne.n	1a005e08 <_malloc_r+0x128>
1a005dfa:	f020 0003 	bic.w	r0, r0, #3
1a005dfe:	0064      	lsls	r4, r4, #1
1a005e00:	421c      	tst	r4, r3
1a005e02:	f100 0004 	add.w	r0, r0, #4
1a005e06:	d0fa      	beq.n	1a005dfe <_malloc_r+0x11e>
1a005e08:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
1a005e0c:	46ce      	mov	lr, r9
1a005e0e:	4680      	mov	r8, r0
1a005e10:	f8de 300c 	ldr.w	r3, [lr, #12]
1a005e14:	459e      	cmp	lr, r3
1a005e16:	d107      	bne.n	1a005e28 <_malloc_r+0x148>
1a005e18:	e122      	b.n	1a006060 <_malloc_r+0x380>
1a005e1a:	2a00      	cmp	r2, #0
1a005e1c:	f280 8129 	bge.w	1a006072 <_malloc_r+0x392>
1a005e20:	68db      	ldr	r3, [r3, #12]
1a005e22:	459e      	cmp	lr, r3
1a005e24:	f000 811c 	beq.w	1a006060 <_malloc_r+0x380>
1a005e28:	6859      	ldr	r1, [r3, #4]
1a005e2a:	f021 0103 	bic.w	r1, r1, #3
1a005e2e:	1b4a      	subs	r2, r1, r5
1a005e30:	2a0f      	cmp	r2, #15
1a005e32:	ddf2      	ble.n	1a005e1a <_malloc_r+0x13a>
1a005e34:	e9d3 8e02 	ldrd	r8, lr, [r3, #8]
1a005e38:	195c      	adds	r4, r3, r5
1a005e3a:	f045 0501 	orr.w	r5, r5, #1
1a005e3e:	605d      	str	r5, [r3, #4]
1a005e40:	f042 0501 	orr.w	r5, r2, #1
1a005e44:	f8c8 e00c 	str.w	lr, [r8, #12]
1a005e48:	4630      	mov	r0, r6
1a005e4a:	f8ce 8008 	str.w	r8, [lr, #8]
1a005e4e:	e9c7 4404 	strd	r4, r4, [r7, #16]
1a005e52:	e9c4 cc02 	strd	ip, ip, [r4, #8]
1a005e56:	6065      	str	r5, [r4, #4]
1a005e58:	505a      	str	r2, [r3, r1]
1a005e5a:	9301      	str	r3, [sp, #4]
1a005e5c:	f000 faa2 	bl	1a0063a4 <__malloc_unlock>
1a005e60:	9b01      	ldr	r3, [sp, #4]
1a005e62:	f103 0408 	add.w	r4, r3, #8
1a005e66:	e763      	b.n	1a005d30 <_malloc_r+0x50>
1a005e68:	2400      	movs	r4, #0
1a005e6a:	230c      	movs	r3, #12
1a005e6c:	4620      	mov	r0, r4
1a005e6e:	6033      	str	r3, [r6, #0]
1a005e70:	b003      	add	sp, #12
1a005e72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a005e76:	f44f 7300 	mov.w	r3, #512	; 0x200
1a005e7a:	2040      	movs	r0, #64	; 0x40
1a005e7c:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
1a005e80:	e773      	b.n	1a005d6a <_malloc_r+0x8a>
1a005e82:	687b      	ldr	r3, [r7, #4]
1a005e84:	1082      	asrs	r2, r0, #2
1a005e86:	2401      	movs	r4, #1
1a005e88:	4094      	lsls	r4, r2
1a005e8a:	429c      	cmp	r4, r3
1a005e8c:	d9b3      	bls.n	1a005df6 <_malloc_r+0x116>
1a005e8e:	68bc      	ldr	r4, [r7, #8]
1a005e90:	6863      	ldr	r3, [r4, #4]
1a005e92:	f023 0903 	bic.w	r9, r3, #3
1a005e96:	45a9      	cmp	r9, r5
1a005e98:	d303      	bcc.n	1a005ea2 <_malloc_r+0x1c2>
1a005e9a:	eba9 0305 	sub.w	r3, r9, r5
1a005e9e:	2b0f      	cmp	r3, #15
1a005ea0:	dc7b      	bgt.n	1a005f9a <_malloc_r+0x2ba>
1a005ea2:	4b5e      	ldr	r3, [pc, #376]	; (1a00601c <_malloc_r+0x33c>)
1a005ea4:	f8df a188 	ldr.w	sl, [pc, #392]	; 1a006030 <_malloc_r+0x350>
1a005ea8:	681a      	ldr	r2, [r3, #0]
1a005eaa:	f8da 3000 	ldr.w	r3, [sl]
1a005eae:	3301      	adds	r3, #1
1a005eb0:	eb05 0802 	add.w	r8, r5, r2
1a005eb4:	f000 8148 	beq.w	1a006148 <_malloc_r+0x468>
1a005eb8:	f508 5880 	add.w	r8, r8, #4096	; 0x1000
1a005ebc:	f108 080f 	add.w	r8, r8, #15
1a005ec0:	f428 687f 	bic.w	r8, r8, #4080	; 0xff0
1a005ec4:	f028 080f 	bic.w	r8, r8, #15
1a005ec8:	4641      	mov	r1, r8
1a005eca:	4630      	mov	r0, r6
1a005ecc:	f7fa fc52 	bl	1a000774 <_sbrk_r>
1a005ed0:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
1a005ed4:	4683      	mov	fp, r0
1a005ed6:	f000 8104 	beq.w	1a0060e2 <_malloc_r+0x402>
1a005eda:	eb04 0009 	add.w	r0, r4, r9
1a005ede:	4558      	cmp	r0, fp
1a005ee0:	f200 80fd 	bhi.w	1a0060de <_malloc_r+0x3fe>
1a005ee4:	4a4e      	ldr	r2, [pc, #312]	; (1a006020 <_malloc_r+0x340>)
1a005ee6:	6813      	ldr	r3, [r2, #0]
1a005ee8:	4443      	add	r3, r8
1a005eea:	6013      	str	r3, [r2, #0]
1a005eec:	f000 814d 	beq.w	1a00618a <_malloc_r+0x4aa>
1a005ef0:	f8da 1000 	ldr.w	r1, [sl]
1a005ef4:	3101      	adds	r1, #1
1a005ef6:	bf1b      	ittet	ne
1a005ef8:	ebab 0000 	subne.w	r0, fp, r0
1a005efc:	181b      	addne	r3, r3, r0
1a005efe:	f8ca b000 	streq.w	fp, [sl]
1a005f02:	6013      	strne	r3, [r2, #0]
1a005f04:	f01b 0307 	ands.w	r3, fp, #7
1a005f08:	f000 8134 	beq.w	1a006174 <_malloc_r+0x494>
1a005f0c:	f1c3 0108 	rsb	r1, r3, #8
1a005f10:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
1a005f14:	448b      	add	fp, r1
1a005f16:	3308      	adds	r3, #8
1a005f18:	44d8      	add	r8, fp
1a005f1a:	f3c8 080b 	ubfx	r8, r8, #0, #12
1a005f1e:	eba3 0808 	sub.w	r8, r3, r8
1a005f22:	4641      	mov	r1, r8
1a005f24:	4630      	mov	r0, r6
1a005f26:	9201      	str	r2, [sp, #4]
1a005f28:	f7fa fc24 	bl	1a000774 <_sbrk_r>
1a005f2c:	1c43      	adds	r3, r0, #1
1a005f2e:	9a01      	ldr	r2, [sp, #4]
1a005f30:	f000 8146 	beq.w	1a0061c0 <_malloc_r+0x4e0>
1a005f34:	eba0 010b 	sub.w	r1, r0, fp
1a005f38:	4441      	add	r1, r8
1a005f3a:	f041 0101 	orr.w	r1, r1, #1
1a005f3e:	6813      	ldr	r3, [r2, #0]
1a005f40:	f8c7 b008 	str.w	fp, [r7, #8]
1a005f44:	4443      	add	r3, r8
1a005f46:	42bc      	cmp	r4, r7
1a005f48:	f8cb 1004 	str.w	r1, [fp, #4]
1a005f4c:	6013      	str	r3, [r2, #0]
1a005f4e:	d015      	beq.n	1a005f7c <_malloc_r+0x29c>
1a005f50:	f1b9 0f0f 	cmp.w	r9, #15
1a005f54:	f240 8130 	bls.w	1a0061b8 <_malloc_r+0x4d8>
1a005f58:	6860      	ldr	r0, [r4, #4]
1a005f5a:	f1a9 010c 	sub.w	r1, r9, #12
1a005f5e:	f021 0107 	bic.w	r1, r1, #7
1a005f62:	f000 0001 	and.w	r0, r0, #1
1a005f66:	eb04 0c01 	add.w	ip, r4, r1
1a005f6a:	4308      	orrs	r0, r1
1a005f6c:	f04f 0e05 	mov.w	lr, #5
1a005f70:	290f      	cmp	r1, #15
1a005f72:	6060      	str	r0, [r4, #4]
1a005f74:	e9cc ee01 	strd	lr, lr, [ip, #4]
1a005f78:	f200 813a 	bhi.w	1a0061f0 <_malloc_r+0x510>
1a005f7c:	4a29      	ldr	r2, [pc, #164]	; (1a006024 <_malloc_r+0x344>)
1a005f7e:	482a      	ldr	r0, [pc, #168]	; (1a006028 <_malloc_r+0x348>)
1a005f80:	6811      	ldr	r1, [r2, #0]
1a005f82:	68bc      	ldr	r4, [r7, #8]
1a005f84:	428b      	cmp	r3, r1
1a005f86:	6801      	ldr	r1, [r0, #0]
1a005f88:	bf88      	it	hi
1a005f8a:	6013      	strhi	r3, [r2, #0]
1a005f8c:	6862      	ldr	r2, [r4, #4]
1a005f8e:	428b      	cmp	r3, r1
1a005f90:	f022 0203 	bic.w	r2, r2, #3
1a005f94:	bf88      	it	hi
1a005f96:	6003      	strhi	r3, [r0, #0]
1a005f98:	e0a7      	b.n	1a0060ea <_malloc_r+0x40a>
1a005f9a:	1962      	adds	r2, r4, r5
1a005f9c:	f043 0301 	orr.w	r3, r3, #1
1a005fa0:	f045 0501 	orr.w	r5, r5, #1
1a005fa4:	6065      	str	r5, [r4, #4]
1a005fa6:	4630      	mov	r0, r6
1a005fa8:	60ba      	str	r2, [r7, #8]
1a005faa:	6053      	str	r3, [r2, #4]
1a005fac:	f000 f9fa 	bl	1a0063a4 <__malloc_unlock>
1a005fb0:	3408      	adds	r4, #8
1a005fb2:	4620      	mov	r0, r4
1a005fb4:	b003      	add	sp, #12
1a005fb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a005fba:	4423      	add	r3, r4
1a005fbc:	68e1      	ldr	r1, [r4, #12]
1a005fbe:	685a      	ldr	r2, [r3, #4]
1a005fc0:	68a5      	ldr	r5, [r4, #8]
1a005fc2:	f042 0201 	orr.w	r2, r2, #1
1a005fc6:	60e9      	str	r1, [r5, #12]
1a005fc8:	4630      	mov	r0, r6
1a005fca:	608d      	str	r5, [r1, #8]
1a005fcc:	605a      	str	r2, [r3, #4]
1a005fce:	f000 f9e9 	bl	1a0063a4 <__malloc_unlock>
1a005fd2:	3408      	adds	r4, #8
1a005fd4:	4620      	mov	r0, r4
1a005fd6:	b003      	add	sp, #12
1a005fd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a005fdc:	68dc      	ldr	r4, [r3, #12]
1a005fde:	42a3      	cmp	r3, r4
1a005fe0:	bf08      	it	eq
1a005fe2:	3002      	addeq	r0, #2
1a005fe4:	f43f aed6 	beq.w	1a005d94 <_malloc_r+0xb4>
1a005fe8:	e692      	b.n	1a005d10 <_malloc_r+0x30>
1a005fea:	2b14      	cmp	r3, #20
1a005fec:	d971      	bls.n	1a0060d2 <_malloc_r+0x3f2>
1a005fee:	2b54      	cmp	r3, #84	; 0x54
1a005ff0:	f200 80ad 	bhi.w	1a00614e <_malloc_r+0x46e>
1a005ff4:	0b2b      	lsrs	r3, r5, #12
1a005ff6:	f103 006f 	add.w	r0, r3, #111	; 0x6f
1a005ffa:	f103 0c6e 	add.w	ip, r3, #110	; 0x6e
1a005ffe:	00c3      	lsls	r3, r0, #3
1a006000:	e6b3      	b.n	1a005d6a <_malloc_r+0x8a>
1a006002:	4423      	add	r3, r4
1a006004:	4630      	mov	r0, r6
1a006006:	685a      	ldr	r2, [r3, #4]
1a006008:	f042 0201 	orr.w	r2, r2, #1
1a00600c:	605a      	str	r2, [r3, #4]
1a00600e:	3408      	adds	r4, #8
1a006010:	f000 f9c8 	bl	1a0063a4 <__malloc_unlock>
1a006014:	e68c      	b.n	1a005d30 <_malloc_r+0x50>
1a006016:	bf00      	nop
1a006018:	100004b8 	.word	0x100004b8
1a00601c:	10000ad0 	.word	0x10000ad0
1a006020:	10000aa0 	.word	0x10000aa0
1a006024:	10000ac8 	.word	0x10000ac8
1a006028:	10000acc 	.word	0x10000acc
1a00602c:	100004c0 	.word	0x100004c0
1a006030:	100008c0 	.word	0x100008c0
1a006034:	1961      	adds	r1, r4, r5
1a006036:	f045 0e01 	orr.w	lr, r5, #1
1a00603a:	f042 0501 	orr.w	r5, r2, #1
1a00603e:	f8c4 e004 	str.w	lr, [r4, #4]
1a006042:	4630      	mov	r0, r6
1a006044:	e9c7 1104 	strd	r1, r1, [r7, #16]
1a006048:	e9c1 cc02 	strd	ip, ip, [r1, #8]
1a00604c:	604d      	str	r5, [r1, #4]
1a00604e:	50e2      	str	r2, [r4, r3]
1a006050:	f000 f9a8 	bl	1a0063a4 <__malloc_unlock>
1a006054:	3408      	adds	r4, #8
1a006056:	e66b      	b.n	1a005d30 <_malloc_r+0x50>
1a006058:	08e8      	lsrs	r0, r5, #3
1a00605a:	f105 0308 	add.w	r3, r5, #8
1a00605e:	e64f      	b.n	1a005d00 <_malloc_r+0x20>
1a006060:	f108 0801 	add.w	r8, r8, #1
1a006064:	f018 0f03 	tst.w	r8, #3
1a006068:	f10e 0e08 	add.w	lr, lr, #8
1a00606c:	f47f aed0 	bne.w	1a005e10 <_malloc_r+0x130>
1a006070:	e052      	b.n	1a006118 <_malloc_r+0x438>
1a006072:	4419      	add	r1, r3
1a006074:	461c      	mov	r4, r3
1a006076:	684a      	ldr	r2, [r1, #4]
1a006078:	68db      	ldr	r3, [r3, #12]
1a00607a:	f854 5f08 	ldr.w	r5, [r4, #8]!
1a00607e:	f042 0201 	orr.w	r2, r2, #1
1a006082:	604a      	str	r2, [r1, #4]
1a006084:	4630      	mov	r0, r6
1a006086:	60eb      	str	r3, [r5, #12]
1a006088:	609d      	str	r5, [r3, #8]
1a00608a:	f000 f98b 	bl	1a0063a4 <__malloc_unlock>
1a00608e:	e64f      	b.n	1a005d30 <_malloc_r+0x50>
1a006090:	0a5a      	lsrs	r2, r3, #9
1a006092:	2a04      	cmp	r2, #4
1a006094:	d935      	bls.n	1a006102 <_malloc_r+0x422>
1a006096:	2a14      	cmp	r2, #20
1a006098:	d86f      	bhi.n	1a00617a <_malloc_r+0x49a>
1a00609a:	f102 015c 	add.w	r1, r2, #92	; 0x5c
1a00609e:	00c9      	lsls	r1, r1, #3
1a0060a0:	325b      	adds	r2, #91	; 0x5b
1a0060a2:	eb07 0e01 	add.w	lr, r7, r1
1a0060a6:	5879      	ldr	r1, [r7, r1]
1a0060a8:	f1ae 0e08 	sub.w	lr, lr, #8
1a0060ac:	458e      	cmp	lr, r1
1a0060ae:	d058      	beq.n	1a006162 <_malloc_r+0x482>
1a0060b0:	684a      	ldr	r2, [r1, #4]
1a0060b2:	f022 0203 	bic.w	r2, r2, #3
1a0060b6:	429a      	cmp	r2, r3
1a0060b8:	d902      	bls.n	1a0060c0 <_malloc_r+0x3e0>
1a0060ba:	6889      	ldr	r1, [r1, #8]
1a0060bc:	458e      	cmp	lr, r1
1a0060be:	d1f7      	bne.n	1a0060b0 <_malloc_r+0x3d0>
1a0060c0:	f8d1 e00c 	ldr.w	lr, [r1, #12]
1a0060c4:	687b      	ldr	r3, [r7, #4]
1a0060c6:	e9c4 1e02 	strd	r1, lr, [r4, #8]
1a0060ca:	f8ce 4008 	str.w	r4, [lr, #8]
1a0060ce:	60cc      	str	r4, [r1, #12]
1a0060d0:	e68c      	b.n	1a005dec <_malloc_r+0x10c>
1a0060d2:	f103 005c 	add.w	r0, r3, #92	; 0x5c
1a0060d6:	f103 0c5b 	add.w	ip, r3, #91	; 0x5b
1a0060da:	00c3      	lsls	r3, r0, #3
1a0060dc:	e645      	b.n	1a005d6a <_malloc_r+0x8a>
1a0060de:	42bc      	cmp	r4, r7
1a0060e0:	d072      	beq.n	1a0061c8 <_malloc_r+0x4e8>
1a0060e2:	68bc      	ldr	r4, [r7, #8]
1a0060e4:	6862      	ldr	r2, [r4, #4]
1a0060e6:	f022 0203 	bic.w	r2, r2, #3
1a0060ea:	4295      	cmp	r5, r2
1a0060ec:	eba2 0305 	sub.w	r3, r2, r5
1a0060f0:	d802      	bhi.n	1a0060f8 <_malloc_r+0x418>
1a0060f2:	2b0f      	cmp	r3, #15
1a0060f4:	f73f af51 	bgt.w	1a005f9a <_malloc_r+0x2ba>
1a0060f8:	4630      	mov	r0, r6
1a0060fa:	f000 f953 	bl	1a0063a4 <__malloc_unlock>
1a0060fe:	2400      	movs	r4, #0
1a006100:	e616      	b.n	1a005d30 <_malloc_r+0x50>
1a006102:	099a      	lsrs	r2, r3, #6
1a006104:	f102 0139 	add.w	r1, r2, #57	; 0x39
1a006108:	00c9      	lsls	r1, r1, #3
1a00610a:	3238      	adds	r2, #56	; 0x38
1a00610c:	e7c9      	b.n	1a0060a2 <_malloc_r+0x3c2>
1a00610e:	f8d9 9000 	ldr.w	r9, [r9]
1a006112:	4599      	cmp	r9, r3
1a006114:	f040 8083 	bne.w	1a00621e <_malloc_r+0x53e>
1a006118:	f010 0f03 	tst.w	r0, #3
1a00611c:	f1a9 0308 	sub.w	r3, r9, #8
1a006120:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
1a006124:	d1f3      	bne.n	1a00610e <_malloc_r+0x42e>
1a006126:	687b      	ldr	r3, [r7, #4]
1a006128:	ea23 0304 	bic.w	r3, r3, r4
1a00612c:	607b      	str	r3, [r7, #4]
1a00612e:	0064      	lsls	r4, r4, #1
1a006130:	429c      	cmp	r4, r3
1a006132:	f63f aeac 	bhi.w	1a005e8e <_malloc_r+0x1ae>
1a006136:	b91c      	cbnz	r4, 1a006140 <_malloc_r+0x460>
1a006138:	e6a9      	b.n	1a005e8e <_malloc_r+0x1ae>
1a00613a:	0064      	lsls	r4, r4, #1
1a00613c:	f108 0804 	add.w	r8, r8, #4
1a006140:	421c      	tst	r4, r3
1a006142:	d0fa      	beq.n	1a00613a <_malloc_r+0x45a>
1a006144:	4640      	mov	r0, r8
1a006146:	e65f      	b.n	1a005e08 <_malloc_r+0x128>
1a006148:	f108 0810 	add.w	r8, r8, #16
1a00614c:	e6bc      	b.n	1a005ec8 <_malloc_r+0x1e8>
1a00614e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
1a006152:	d826      	bhi.n	1a0061a2 <_malloc_r+0x4c2>
1a006154:	0beb      	lsrs	r3, r5, #15
1a006156:	f103 0078 	add.w	r0, r3, #120	; 0x78
1a00615a:	f103 0c77 	add.w	ip, r3, #119	; 0x77
1a00615e:	00c3      	lsls	r3, r0, #3
1a006160:	e603      	b.n	1a005d6a <_malloc_r+0x8a>
1a006162:	687b      	ldr	r3, [r7, #4]
1a006164:	1092      	asrs	r2, r2, #2
1a006166:	f04f 0801 	mov.w	r8, #1
1a00616a:	fa08 f202 	lsl.w	r2, r8, r2
1a00616e:	4313      	orrs	r3, r2
1a006170:	607b      	str	r3, [r7, #4]
1a006172:	e7a8      	b.n	1a0060c6 <_malloc_r+0x3e6>
1a006174:	f44f 5380 	mov.w	r3, #4096	; 0x1000
1a006178:	e6ce      	b.n	1a005f18 <_malloc_r+0x238>
1a00617a:	2a54      	cmp	r2, #84	; 0x54
1a00617c:	d829      	bhi.n	1a0061d2 <_malloc_r+0x4f2>
1a00617e:	0b1a      	lsrs	r2, r3, #12
1a006180:	f102 016f 	add.w	r1, r2, #111	; 0x6f
1a006184:	00c9      	lsls	r1, r1, #3
1a006186:	326e      	adds	r2, #110	; 0x6e
1a006188:	e78b      	b.n	1a0060a2 <_malloc_r+0x3c2>
1a00618a:	f3c0 010b 	ubfx	r1, r0, #0, #12
1a00618e:	2900      	cmp	r1, #0
1a006190:	f47f aeae 	bne.w	1a005ef0 <_malloc_r+0x210>
1a006194:	eb09 0208 	add.w	r2, r9, r8
1a006198:	68b9      	ldr	r1, [r7, #8]
1a00619a:	f042 0201 	orr.w	r2, r2, #1
1a00619e:	604a      	str	r2, [r1, #4]
1a0061a0:	e6ec      	b.n	1a005f7c <_malloc_r+0x29c>
1a0061a2:	f240 5254 	movw	r2, #1364	; 0x554
1a0061a6:	4293      	cmp	r3, r2
1a0061a8:	d81c      	bhi.n	1a0061e4 <_malloc_r+0x504>
1a0061aa:	0cab      	lsrs	r3, r5, #18
1a0061ac:	f103 007d 	add.w	r0, r3, #125	; 0x7d
1a0061b0:	f103 0c7c 	add.w	ip, r3, #124	; 0x7c
1a0061b4:	00c3      	lsls	r3, r0, #3
1a0061b6:	e5d8      	b.n	1a005d6a <_malloc_r+0x8a>
1a0061b8:	2301      	movs	r3, #1
1a0061ba:	f8cb 3004 	str.w	r3, [fp, #4]
1a0061be:	e79b      	b.n	1a0060f8 <_malloc_r+0x418>
1a0061c0:	2101      	movs	r1, #1
1a0061c2:	f04f 0800 	mov.w	r8, #0
1a0061c6:	e6ba      	b.n	1a005f3e <_malloc_r+0x25e>
1a0061c8:	4a16      	ldr	r2, [pc, #88]	; (1a006224 <_malloc_r+0x544>)
1a0061ca:	6813      	ldr	r3, [r2, #0]
1a0061cc:	4443      	add	r3, r8
1a0061ce:	6013      	str	r3, [r2, #0]
1a0061d0:	e68e      	b.n	1a005ef0 <_malloc_r+0x210>
1a0061d2:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
1a0061d6:	d814      	bhi.n	1a006202 <_malloc_r+0x522>
1a0061d8:	0bda      	lsrs	r2, r3, #15
1a0061da:	f102 0178 	add.w	r1, r2, #120	; 0x78
1a0061de:	00c9      	lsls	r1, r1, #3
1a0061e0:	3277      	adds	r2, #119	; 0x77
1a0061e2:	e75e      	b.n	1a0060a2 <_malloc_r+0x3c2>
1a0061e4:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
1a0061e8:	207f      	movs	r0, #127	; 0x7f
1a0061ea:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
1a0061ee:	e5bc      	b.n	1a005d6a <_malloc_r+0x8a>
1a0061f0:	f104 0108 	add.w	r1, r4, #8
1a0061f4:	4630      	mov	r0, r6
1a0061f6:	9201      	str	r2, [sp, #4]
1a0061f8:	f7ff fa48 	bl	1a00568c <_free_r>
1a0061fc:	9a01      	ldr	r2, [sp, #4]
1a0061fe:	6813      	ldr	r3, [r2, #0]
1a006200:	e6bc      	b.n	1a005f7c <_malloc_r+0x29c>
1a006202:	f240 5154 	movw	r1, #1364	; 0x554
1a006206:	428a      	cmp	r2, r1
1a006208:	d805      	bhi.n	1a006216 <_malloc_r+0x536>
1a00620a:	0c9a      	lsrs	r2, r3, #18
1a00620c:	f102 017d 	add.w	r1, r2, #125	; 0x7d
1a006210:	00c9      	lsls	r1, r1, #3
1a006212:	327c      	adds	r2, #124	; 0x7c
1a006214:	e745      	b.n	1a0060a2 <_malloc_r+0x3c2>
1a006216:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
1a00621a:	227e      	movs	r2, #126	; 0x7e
1a00621c:	e741      	b.n	1a0060a2 <_malloc_r+0x3c2>
1a00621e:	687b      	ldr	r3, [r7, #4]
1a006220:	e785      	b.n	1a00612e <_malloc_r+0x44e>
1a006222:	bf00      	nop
1a006224:	10000aa0 	.word	0x10000aa0
1a006228:	ffffffff 	.word	0xffffffff
1a00622c:	ffffffff 	.word	0xffffffff

1a006230 <memchr>:
1a006230:	f001 01ff 	and.w	r1, r1, #255	; 0xff
1a006234:	2a10      	cmp	r2, #16
1a006236:	db2b      	blt.n	1a006290 <memchr+0x60>
1a006238:	f010 0f07 	tst.w	r0, #7
1a00623c:	d008      	beq.n	1a006250 <memchr+0x20>
1a00623e:	f810 3b01 	ldrb.w	r3, [r0], #1
1a006242:	3a01      	subs	r2, #1
1a006244:	428b      	cmp	r3, r1
1a006246:	d02d      	beq.n	1a0062a4 <memchr+0x74>
1a006248:	f010 0f07 	tst.w	r0, #7
1a00624c:	b342      	cbz	r2, 1a0062a0 <memchr+0x70>
1a00624e:	d1f6      	bne.n	1a00623e <memchr+0xe>
1a006250:	b4f0      	push	{r4, r5, r6, r7}
1a006252:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
1a006256:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
1a00625a:	f022 0407 	bic.w	r4, r2, #7
1a00625e:	f07f 0700 	mvns.w	r7, #0
1a006262:	2300      	movs	r3, #0
1a006264:	e8f0 5602 	ldrd	r5, r6, [r0], #8
1a006268:	3c08      	subs	r4, #8
1a00626a:	ea85 0501 	eor.w	r5, r5, r1
1a00626e:	ea86 0601 	eor.w	r6, r6, r1
1a006272:	fa85 f547 	uadd8	r5, r5, r7
1a006276:	faa3 f587 	sel	r5, r3, r7
1a00627a:	fa86 f647 	uadd8	r6, r6, r7
1a00627e:	faa5 f687 	sel	r6, r5, r7
1a006282:	b98e      	cbnz	r6, 1a0062a8 <memchr+0x78>
1a006284:	d1ee      	bne.n	1a006264 <memchr+0x34>
1a006286:	bcf0      	pop	{r4, r5, r6, r7}
1a006288:	f001 01ff 	and.w	r1, r1, #255	; 0xff
1a00628c:	f002 0207 	and.w	r2, r2, #7
1a006290:	b132      	cbz	r2, 1a0062a0 <memchr+0x70>
1a006292:	f810 3b01 	ldrb.w	r3, [r0], #1
1a006296:	3a01      	subs	r2, #1
1a006298:	ea83 0301 	eor.w	r3, r3, r1
1a00629c:	b113      	cbz	r3, 1a0062a4 <memchr+0x74>
1a00629e:	d1f8      	bne.n	1a006292 <memchr+0x62>
1a0062a0:	2000      	movs	r0, #0
1a0062a2:	4770      	bx	lr
1a0062a4:	3801      	subs	r0, #1
1a0062a6:	4770      	bx	lr
1a0062a8:	2d00      	cmp	r5, #0
1a0062aa:	bf06      	itte	eq
1a0062ac:	4635      	moveq	r5, r6
1a0062ae:	3803      	subeq	r0, #3
1a0062b0:	3807      	subne	r0, #7
1a0062b2:	f015 0f01 	tst.w	r5, #1
1a0062b6:	d107      	bne.n	1a0062c8 <memchr+0x98>
1a0062b8:	3001      	adds	r0, #1
1a0062ba:	f415 7f80 	tst.w	r5, #256	; 0x100
1a0062be:	bf02      	ittt	eq
1a0062c0:	3001      	addeq	r0, #1
1a0062c2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
1a0062c6:	3001      	addeq	r0, #1
1a0062c8:	bcf0      	pop	{r4, r5, r6, r7}
1a0062ca:	3801      	subs	r0, #1
1a0062cc:	4770      	bx	lr
1a0062ce:	bf00      	nop

1a0062d0 <memmove>:
1a0062d0:	4288      	cmp	r0, r1
1a0062d2:	b4f0      	push	{r4, r5, r6, r7}
1a0062d4:	d90d      	bls.n	1a0062f2 <memmove+0x22>
1a0062d6:	188b      	adds	r3, r1, r2
1a0062d8:	4283      	cmp	r3, r0
1a0062da:	d90a      	bls.n	1a0062f2 <memmove+0x22>
1a0062dc:	1884      	adds	r4, r0, r2
1a0062de:	b132      	cbz	r2, 1a0062ee <memmove+0x1e>
1a0062e0:	4622      	mov	r2, r4
1a0062e2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
1a0062e6:	f802 4d01 	strb.w	r4, [r2, #-1]!
1a0062ea:	4299      	cmp	r1, r3
1a0062ec:	d1f9      	bne.n	1a0062e2 <memmove+0x12>
1a0062ee:	bcf0      	pop	{r4, r5, r6, r7}
1a0062f0:	4770      	bx	lr
1a0062f2:	2a0f      	cmp	r2, #15
1a0062f4:	d949      	bls.n	1a00638a <memmove+0xba>
1a0062f6:	ea40 0301 	orr.w	r3, r0, r1
1a0062fa:	079b      	lsls	r3, r3, #30
1a0062fc:	d147      	bne.n	1a00638e <memmove+0xbe>
1a0062fe:	f1a2 0310 	sub.w	r3, r2, #16
1a006302:	091b      	lsrs	r3, r3, #4
1a006304:	f101 0720 	add.w	r7, r1, #32
1a006308:	eb07 1703 	add.w	r7, r7, r3, lsl #4
1a00630c:	f101 0410 	add.w	r4, r1, #16
1a006310:	f100 0510 	add.w	r5, r0, #16
1a006314:	f854 6c10 	ldr.w	r6, [r4, #-16]
1a006318:	f845 6c10 	str.w	r6, [r5, #-16]
1a00631c:	f854 6c0c 	ldr.w	r6, [r4, #-12]
1a006320:	f845 6c0c 	str.w	r6, [r5, #-12]
1a006324:	f854 6c08 	ldr.w	r6, [r4, #-8]
1a006328:	f845 6c08 	str.w	r6, [r5, #-8]
1a00632c:	f854 6c04 	ldr.w	r6, [r4, #-4]
1a006330:	f845 6c04 	str.w	r6, [r5, #-4]
1a006334:	3410      	adds	r4, #16
1a006336:	42bc      	cmp	r4, r7
1a006338:	f105 0510 	add.w	r5, r5, #16
1a00633c:	d1ea      	bne.n	1a006314 <memmove+0x44>
1a00633e:	3301      	adds	r3, #1
1a006340:	f002 050f 	and.w	r5, r2, #15
1a006344:	011b      	lsls	r3, r3, #4
1a006346:	2d03      	cmp	r5, #3
1a006348:	4419      	add	r1, r3
1a00634a:	4403      	add	r3, r0
1a00634c:	d921      	bls.n	1a006392 <memmove+0xc2>
1a00634e:	1f1f      	subs	r7, r3, #4
1a006350:	460e      	mov	r6, r1
1a006352:	462c      	mov	r4, r5
1a006354:	3c04      	subs	r4, #4
1a006356:	f856 cb04 	ldr.w	ip, [r6], #4
1a00635a:	f847 cf04 	str.w	ip, [r7, #4]!
1a00635e:	2c03      	cmp	r4, #3
1a006360:	d8f8      	bhi.n	1a006354 <memmove+0x84>
1a006362:	1f2c      	subs	r4, r5, #4
1a006364:	f024 0403 	bic.w	r4, r4, #3
1a006368:	3404      	adds	r4, #4
1a00636a:	4423      	add	r3, r4
1a00636c:	4421      	add	r1, r4
1a00636e:	f002 0203 	and.w	r2, r2, #3
1a006372:	2a00      	cmp	r2, #0
1a006374:	d0bb      	beq.n	1a0062ee <memmove+0x1e>
1a006376:	3b01      	subs	r3, #1
1a006378:	440a      	add	r2, r1
1a00637a:	f811 4b01 	ldrb.w	r4, [r1], #1
1a00637e:	f803 4f01 	strb.w	r4, [r3, #1]!
1a006382:	4291      	cmp	r1, r2
1a006384:	d1f9      	bne.n	1a00637a <memmove+0xaa>
1a006386:	bcf0      	pop	{r4, r5, r6, r7}
1a006388:	4770      	bx	lr
1a00638a:	4603      	mov	r3, r0
1a00638c:	e7f1      	b.n	1a006372 <memmove+0xa2>
1a00638e:	4603      	mov	r3, r0
1a006390:	e7f1      	b.n	1a006376 <memmove+0xa6>
1a006392:	462a      	mov	r2, r5
1a006394:	e7ed      	b.n	1a006372 <memmove+0xa2>
1a006396:	bf00      	nop

1a006398 <__malloc_lock>:
1a006398:	4801      	ldr	r0, [pc, #4]	; (1a0063a0 <__malloc_lock+0x8>)
1a00639a:	f7ff bc25 	b.w	1a005be8 <__retarget_lock_acquire_recursive>
1a00639e:	bf00      	nop
1a0063a0:	10000af4 	.word	0x10000af4

1a0063a4 <__malloc_unlock>:
1a0063a4:	4801      	ldr	r0, [pc, #4]	; (1a0063ac <__malloc_unlock+0x8>)
1a0063a6:	f7ff bc21 	b.w	1a005bec <__retarget_lock_release_recursive>
1a0063aa:	bf00      	nop
1a0063ac:	10000af4 	.word	0x10000af4

1a0063b0 <_Balloc>:
1a0063b0:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
1a0063b2:	b570      	push	{r4, r5, r6, lr}
1a0063b4:	4605      	mov	r5, r0
1a0063b6:	460c      	mov	r4, r1
1a0063b8:	b14b      	cbz	r3, 1a0063ce <_Balloc+0x1e>
1a0063ba:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
1a0063be:	b180      	cbz	r0, 1a0063e2 <_Balloc+0x32>
1a0063c0:	6802      	ldr	r2, [r0, #0]
1a0063c2:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
1a0063c6:	2300      	movs	r3, #0
1a0063c8:	e9c0 3303 	strd	r3, r3, [r0, #12]
1a0063cc:	bd70      	pop	{r4, r5, r6, pc}
1a0063ce:	2221      	movs	r2, #33	; 0x21
1a0063d0:	2104      	movs	r1, #4
1a0063d2:	f000 fd95 	bl	1a006f00 <_calloc_r>
1a0063d6:	4603      	mov	r3, r0
1a0063d8:	64e8      	str	r0, [r5, #76]	; 0x4c
1a0063da:	2800      	cmp	r0, #0
1a0063dc:	d1ed      	bne.n	1a0063ba <_Balloc+0xa>
1a0063de:	2000      	movs	r0, #0
1a0063e0:	bd70      	pop	{r4, r5, r6, pc}
1a0063e2:	2101      	movs	r1, #1
1a0063e4:	fa01 f604 	lsl.w	r6, r1, r4
1a0063e8:	1d72      	adds	r2, r6, #5
1a0063ea:	4628      	mov	r0, r5
1a0063ec:	0092      	lsls	r2, r2, #2
1a0063ee:	f000 fd87 	bl	1a006f00 <_calloc_r>
1a0063f2:	2800      	cmp	r0, #0
1a0063f4:	d0f3      	beq.n	1a0063de <_Balloc+0x2e>
1a0063f6:	e9c0 4601 	strd	r4, r6, [r0, #4]
1a0063fa:	e7e4      	b.n	1a0063c6 <_Balloc+0x16>

1a0063fc <_Bfree>:
1a0063fc:	b131      	cbz	r1, 1a00640c <_Bfree+0x10>
1a0063fe:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
1a006400:	684a      	ldr	r2, [r1, #4]
1a006402:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
1a006406:	6008      	str	r0, [r1, #0]
1a006408:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
1a00640c:	4770      	bx	lr
1a00640e:	bf00      	nop

1a006410 <__multadd>:
1a006410:	b5f0      	push	{r4, r5, r6, r7, lr}
1a006412:	690c      	ldr	r4, [r1, #16]
1a006414:	b083      	sub	sp, #12
1a006416:	460d      	mov	r5, r1
1a006418:	4606      	mov	r6, r0
1a00641a:	f101 0c14 	add.w	ip, r1, #20
1a00641e:	2700      	movs	r7, #0
1a006420:	f8dc 0000 	ldr.w	r0, [ip]
1a006424:	b281      	uxth	r1, r0
1a006426:	fb02 3301 	mla	r3, r2, r1, r3
1a00642a:	0c01      	lsrs	r1, r0, #16
1a00642c:	0c18      	lsrs	r0, r3, #16
1a00642e:	fb02 0101 	mla	r1, r2, r1, r0
1a006432:	b29b      	uxth	r3, r3
1a006434:	3701      	adds	r7, #1
1a006436:	eb03 4301 	add.w	r3, r3, r1, lsl #16
1a00643a:	42bc      	cmp	r4, r7
1a00643c:	f84c 3b04 	str.w	r3, [ip], #4
1a006440:	ea4f 4311 	mov.w	r3, r1, lsr #16
1a006444:	dcec      	bgt.n	1a006420 <__multadd+0x10>
1a006446:	b13b      	cbz	r3, 1a006458 <__multadd+0x48>
1a006448:	68aa      	ldr	r2, [r5, #8]
1a00644a:	42a2      	cmp	r2, r4
1a00644c:	dd07      	ble.n	1a00645e <__multadd+0x4e>
1a00644e:	eb05 0284 	add.w	r2, r5, r4, lsl #2
1a006452:	3401      	adds	r4, #1
1a006454:	6153      	str	r3, [r2, #20]
1a006456:	612c      	str	r4, [r5, #16]
1a006458:	4628      	mov	r0, r5
1a00645a:	b003      	add	sp, #12
1a00645c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1a00645e:	6869      	ldr	r1, [r5, #4]
1a006460:	9301      	str	r3, [sp, #4]
1a006462:	3101      	adds	r1, #1
1a006464:	4630      	mov	r0, r6
1a006466:	f7ff ffa3 	bl	1a0063b0 <_Balloc>
1a00646a:	692a      	ldr	r2, [r5, #16]
1a00646c:	3202      	adds	r2, #2
1a00646e:	f105 010c 	add.w	r1, r5, #12
1a006472:	4607      	mov	r7, r0
1a006474:	0092      	lsls	r2, r2, #2
1a006476:	300c      	adds	r0, #12
1a006478:	f7fc f832 	bl	1a0024e0 <memcpy>
1a00647c:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
1a00647e:	6869      	ldr	r1, [r5, #4]
1a006480:	9b01      	ldr	r3, [sp, #4]
1a006482:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
1a006486:	6028      	str	r0, [r5, #0]
1a006488:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
1a00648c:	463d      	mov	r5, r7
1a00648e:	e7de      	b.n	1a00644e <__multadd+0x3e>

1a006490 <__hi0bits>:
1a006490:	0c02      	lsrs	r2, r0, #16
1a006492:	0412      	lsls	r2, r2, #16
1a006494:	4603      	mov	r3, r0
1a006496:	b9c2      	cbnz	r2, 1a0064ca <__hi0bits+0x3a>
1a006498:	0403      	lsls	r3, r0, #16
1a00649a:	2010      	movs	r0, #16
1a00649c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
1a0064a0:	bf04      	itt	eq
1a0064a2:	021b      	lsleq	r3, r3, #8
1a0064a4:	3008      	addeq	r0, #8
1a0064a6:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
1a0064aa:	bf04      	itt	eq
1a0064ac:	011b      	lsleq	r3, r3, #4
1a0064ae:	3004      	addeq	r0, #4
1a0064b0:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
1a0064b4:	bf04      	itt	eq
1a0064b6:	009b      	lsleq	r3, r3, #2
1a0064b8:	3002      	addeq	r0, #2
1a0064ba:	2b00      	cmp	r3, #0
1a0064bc:	db04      	blt.n	1a0064c8 <__hi0bits+0x38>
1a0064be:	005b      	lsls	r3, r3, #1
1a0064c0:	d501      	bpl.n	1a0064c6 <__hi0bits+0x36>
1a0064c2:	3001      	adds	r0, #1
1a0064c4:	4770      	bx	lr
1a0064c6:	2020      	movs	r0, #32
1a0064c8:	4770      	bx	lr
1a0064ca:	2000      	movs	r0, #0
1a0064cc:	e7e6      	b.n	1a00649c <__hi0bits+0xc>
1a0064ce:	bf00      	nop

1a0064d0 <__lo0bits>:
1a0064d0:	6803      	ldr	r3, [r0, #0]
1a0064d2:	f013 0207 	ands.w	r2, r3, #7
1a0064d6:	4601      	mov	r1, r0
1a0064d8:	d007      	beq.n	1a0064ea <__lo0bits+0x1a>
1a0064da:	07da      	lsls	r2, r3, #31
1a0064dc:	d41f      	bmi.n	1a00651e <__lo0bits+0x4e>
1a0064de:	0798      	lsls	r0, r3, #30
1a0064e0:	d51f      	bpl.n	1a006522 <__lo0bits+0x52>
1a0064e2:	085b      	lsrs	r3, r3, #1
1a0064e4:	600b      	str	r3, [r1, #0]
1a0064e6:	2001      	movs	r0, #1
1a0064e8:	4770      	bx	lr
1a0064ea:	b298      	uxth	r0, r3
1a0064ec:	b1a0      	cbz	r0, 1a006518 <__lo0bits+0x48>
1a0064ee:	4610      	mov	r0, r2
1a0064f0:	f013 0fff 	tst.w	r3, #255	; 0xff
1a0064f4:	bf04      	itt	eq
1a0064f6:	0a1b      	lsreq	r3, r3, #8
1a0064f8:	3008      	addeq	r0, #8
1a0064fa:	071a      	lsls	r2, r3, #28
1a0064fc:	bf04      	itt	eq
1a0064fe:	091b      	lsreq	r3, r3, #4
1a006500:	3004      	addeq	r0, #4
1a006502:	079a      	lsls	r2, r3, #30
1a006504:	bf04      	itt	eq
1a006506:	089b      	lsreq	r3, r3, #2
1a006508:	3002      	addeq	r0, #2
1a00650a:	07da      	lsls	r2, r3, #31
1a00650c:	d402      	bmi.n	1a006514 <__lo0bits+0x44>
1a00650e:	085b      	lsrs	r3, r3, #1
1a006510:	d00b      	beq.n	1a00652a <__lo0bits+0x5a>
1a006512:	3001      	adds	r0, #1
1a006514:	600b      	str	r3, [r1, #0]
1a006516:	4770      	bx	lr
1a006518:	0c1b      	lsrs	r3, r3, #16
1a00651a:	2010      	movs	r0, #16
1a00651c:	e7e8      	b.n	1a0064f0 <__lo0bits+0x20>
1a00651e:	2000      	movs	r0, #0
1a006520:	4770      	bx	lr
1a006522:	089b      	lsrs	r3, r3, #2
1a006524:	600b      	str	r3, [r1, #0]
1a006526:	2002      	movs	r0, #2
1a006528:	4770      	bx	lr
1a00652a:	2020      	movs	r0, #32
1a00652c:	4770      	bx	lr
1a00652e:	bf00      	nop

1a006530 <__i2b>:
1a006530:	b510      	push	{r4, lr}
1a006532:	460c      	mov	r4, r1
1a006534:	2101      	movs	r1, #1
1a006536:	f7ff ff3b 	bl	1a0063b0 <_Balloc>
1a00653a:	2201      	movs	r2, #1
1a00653c:	e9c0 2404 	strd	r2, r4, [r0, #16]
1a006540:	bd10      	pop	{r4, pc}
1a006542:	bf00      	nop

1a006544 <__multiply>:
1a006544:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a006548:	690e      	ldr	r6, [r1, #16]
1a00654a:	6914      	ldr	r4, [r2, #16]
1a00654c:	42a6      	cmp	r6, r4
1a00654e:	b083      	sub	sp, #12
1a006550:	460f      	mov	r7, r1
1a006552:	4615      	mov	r5, r2
1a006554:	da04      	bge.n	1a006560 <__multiply+0x1c>
1a006556:	4632      	mov	r2, r6
1a006558:	462f      	mov	r7, r5
1a00655a:	4626      	mov	r6, r4
1a00655c:	460d      	mov	r5, r1
1a00655e:	4614      	mov	r4, r2
1a006560:	e9d7 1301 	ldrd	r1, r3, [r7, #4]
1a006564:	eb06 0804 	add.w	r8, r6, r4
1a006568:	4543      	cmp	r3, r8
1a00656a:	bfb8      	it	lt
1a00656c:	3101      	addlt	r1, #1
1a00656e:	f7ff ff1f 	bl	1a0063b0 <_Balloc>
1a006572:	f100 0914 	add.w	r9, r0, #20
1a006576:	eb09 0e88 	add.w	lr, r9, r8, lsl #2
1a00657a:	45f1      	cmp	r9, lr
1a00657c:	9000      	str	r0, [sp, #0]
1a00657e:	d205      	bcs.n	1a00658c <__multiply+0x48>
1a006580:	464b      	mov	r3, r9
1a006582:	2200      	movs	r2, #0
1a006584:	f843 2b04 	str.w	r2, [r3], #4
1a006588:	459e      	cmp	lr, r3
1a00658a:	d8fb      	bhi.n	1a006584 <__multiply+0x40>
1a00658c:	f105 0a14 	add.w	sl, r5, #20
1a006590:	eb0a 0484 	add.w	r4, sl, r4, lsl #2
1a006594:	f107 0314 	add.w	r3, r7, #20
1a006598:	45a2      	cmp	sl, r4
1a00659a:	eb03 0c86 	add.w	ip, r3, r6, lsl #2
1a00659e:	d261      	bcs.n	1a006664 <__multiply+0x120>
1a0065a0:	1b64      	subs	r4, r4, r5
1a0065a2:	3c15      	subs	r4, #21
1a0065a4:	f024 0403 	bic.w	r4, r4, #3
1a0065a8:	f8cd e004 	str.w	lr, [sp, #4]
1a0065ac:	44a2      	add	sl, r4
1a0065ae:	f105 0210 	add.w	r2, r5, #16
1a0065b2:	469e      	mov	lr, r3
1a0065b4:	e005      	b.n	1a0065c2 <__multiply+0x7e>
1a0065b6:	0c2d      	lsrs	r5, r5, #16
1a0065b8:	d12b      	bne.n	1a006612 <__multiply+0xce>
1a0065ba:	4592      	cmp	sl, r2
1a0065bc:	f109 0904 	add.w	r9, r9, #4
1a0065c0:	d04e      	beq.n	1a006660 <__multiply+0x11c>
1a0065c2:	f852 5f04 	ldr.w	r5, [r2, #4]!
1a0065c6:	fa1f fb85 	uxth.w	fp, r5
1a0065ca:	f1bb 0f00 	cmp.w	fp, #0
1a0065ce:	d0f2      	beq.n	1a0065b6 <__multiply+0x72>
1a0065d0:	4677      	mov	r7, lr
1a0065d2:	464e      	mov	r6, r9
1a0065d4:	2000      	movs	r0, #0
1a0065d6:	e000      	b.n	1a0065da <__multiply+0x96>
1a0065d8:	4626      	mov	r6, r4
1a0065da:	f857 1b04 	ldr.w	r1, [r7], #4
1a0065de:	6834      	ldr	r4, [r6, #0]
1a0065e0:	b28b      	uxth	r3, r1
1a0065e2:	b2a5      	uxth	r5, r4
1a0065e4:	0c09      	lsrs	r1, r1, #16
1a0065e6:	0c24      	lsrs	r4, r4, #16
1a0065e8:	fb0b 5303 	mla	r3, fp, r3, r5
1a0065ec:	4403      	add	r3, r0
1a0065ee:	fb0b 4001 	mla	r0, fp, r1, r4
1a0065f2:	eb00 4013 	add.w	r0, r0, r3, lsr #16
1a0065f6:	4634      	mov	r4, r6
1a0065f8:	b29b      	uxth	r3, r3
1a0065fa:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
1a0065fe:	45bc      	cmp	ip, r7
1a006600:	ea4f 4010 	mov.w	r0, r0, lsr #16
1a006604:	f844 3b04 	str.w	r3, [r4], #4
1a006608:	d8e6      	bhi.n	1a0065d8 <__multiply+0x94>
1a00660a:	6070      	str	r0, [r6, #4]
1a00660c:	6815      	ldr	r5, [r2, #0]
1a00660e:	0c2d      	lsrs	r5, r5, #16
1a006610:	d0d3      	beq.n	1a0065ba <__multiply+0x76>
1a006612:	f8d9 3000 	ldr.w	r3, [r9]
1a006616:	4676      	mov	r6, lr
1a006618:	4618      	mov	r0, r3
1a00661a:	46cb      	mov	fp, r9
1a00661c:	2100      	movs	r1, #0
1a00661e:	e000      	b.n	1a006622 <__multiply+0xde>
1a006620:	46a3      	mov	fp, r4
1a006622:	8834      	ldrh	r4, [r6, #0]
1a006624:	0c00      	lsrs	r0, r0, #16
1a006626:	fb05 0004 	mla	r0, r5, r4, r0
1a00662a:	4401      	add	r1, r0
1a00662c:	b29b      	uxth	r3, r3
1a00662e:	465c      	mov	r4, fp
1a006630:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1a006634:	f844 3b04 	str.w	r3, [r4], #4
1a006638:	f856 3b04 	ldr.w	r3, [r6], #4
1a00663c:	f8db 0004 	ldr.w	r0, [fp, #4]
1a006640:	0c1b      	lsrs	r3, r3, #16
1a006642:	b287      	uxth	r7, r0
1a006644:	fb05 7303 	mla	r3, r5, r3, r7
1a006648:	eb03 4311 	add.w	r3, r3, r1, lsr #16
1a00664c:	45b4      	cmp	ip, r6
1a00664e:	ea4f 4113 	mov.w	r1, r3, lsr #16
1a006652:	d8e5      	bhi.n	1a006620 <__multiply+0xdc>
1a006654:	4592      	cmp	sl, r2
1a006656:	f8cb 3004 	str.w	r3, [fp, #4]
1a00665a:	f109 0904 	add.w	r9, r9, #4
1a00665e:	d1b0      	bne.n	1a0065c2 <__multiply+0x7e>
1a006660:	f8dd e004 	ldr.w	lr, [sp, #4]
1a006664:	f1b8 0f00 	cmp.w	r8, #0
1a006668:	dd0b      	ble.n	1a006682 <__multiply+0x13e>
1a00666a:	f85e 3c04 	ldr.w	r3, [lr, #-4]
1a00666e:	f1ae 0e04 	sub.w	lr, lr, #4
1a006672:	b11b      	cbz	r3, 1a00667c <__multiply+0x138>
1a006674:	e005      	b.n	1a006682 <__multiply+0x13e>
1a006676:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
1a00667a:	b913      	cbnz	r3, 1a006682 <__multiply+0x13e>
1a00667c:	f1b8 0801 	subs.w	r8, r8, #1
1a006680:	d1f9      	bne.n	1a006676 <__multiply+0x132>
1a006682:	9800      	ldr	r0, [sp, #0]
1a006684:	f8c0 8010 	str.w	r8, [r0, #16]
1a006688:	b003      	add	sp, #12
1a00668a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a00668e:	bf00      	nop

1a006690 <__pow5mult>:
1a006690:	f012 0303 	ands.w	r3, r2, #3
1a006694:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a006698:	4614      	mov	r4, r2
1a00669a:	4607      	mov	r7, r0
1a00669c:	d12e      	bne.n	1a0066fc <__pow5mult+0x6c>
1a00669e:	460d      	mov	r5, r1
1a0066a0:	10a4      	asrs	r4, r4, #2
1a0066a2:	d01c      	beq.n	1a0066de <__pow5mult+0x4e>
1a0066a4:	6cbe      	ldr	r6, [r7, #72]	; 0x48
1a0066a6:	b396      	cbz	r6, 1a00670e <__pow5mult+0x7e>
1a0066a8:	07e3      	lsls	r3, r4, #31
1a0066aa:	f04f 0800 	mov.w	r8, #0
1a0066ae:	d406      	bmi.n	1a0066be <__pow5mult+0x2e>
1a0066b0:	1064      	asrs	r4, r4, #1
1a0066b2:	d014      	beq.n	1a0066de <__pow5mult+0x4e>
1a0066b4:	6830      	ldr	r0, [r6, #0]
1a0066b6:	b1a8      	cbz	r0, 1a0066e4 <__pow5mult+0x54>
1a0066b8:	4606      	mov	r6, r0
1a0066ba:	07e3      	lsls	r3, r4, #31
1a0066bc:	d5f8      	bpl.n	1a0066b0 <__pow5mult+0x20>
1a0066be:	4632      	mov	r2, r6
1a0066c0:	4629      	mov	r1, r5
1a0066c2:	4638      	mov	r0, r7
1a0066c4:	f7ff ff3e 	bl	1a006544 <__multiply>
1a0066c8:	b1b5      	cbz	r5, 1a0066f8 <__pow5mult+0x68>
1a0066ca:	686a      	ldr	r2, [r5, #4]
1a0066cc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
1a0066ce:	1064      	asrs	r4, r4, #1
1a0066d0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1a0066d4:	6029      	str	r1, [r5, #0]
1a0066d6:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
1a0066da:	4605      	mov	r5, r0
1a0066dc:	d1ea      	bne.n	1a0066b4 <__pow5mult+0x24>
1a0066de:	4628      	mov	r0, r5
1a0066e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a0066e4:	4632      	mov	r2, r6
1a0066e6:	4631      	mov	r1, r6
1a0066e8:	4638      	mov	r0, r7
1a0066ea:	f7ff ff2b 	bl	1a006544 <__multiply>
1a0066ee:	6030      	str	r0, [r6, #0]
1a0066f0:	f8c0 8000 	str.w	r8, [r0]
1a0066f4:	4606      	mov	r6, r0
1a0066f6:	e7e0      	b.n	1a0066ba <__pow5mult+0x2a>
1a0066f8:	4605      	mov	r5, r0
1a0066fa:	e7d9      	b.n	1a0066b0 <__pow5mult+0x20>
1a0066fc:	3b01      	subs	r3, #1
1a0066fe:	4a0b      	ldr	r2, [pc, #44]	; (1a00672c <__pow5mult+0x9c>)
1a006700:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
1a006704:	2300      	movs	r3, #0
1a006706:	f7ff fe83 	bl	1a006410 <__multadd>
1a00670a:	4605      	mov	r5, r0
1a00670c:	e7c8      	b.n	1a0066a0 <__pow5mult+0x10>
1a00670e:	2101      	movs	r1, #1
1a006710:	4638      	mov	r0, r7
1a006712:	f7ff fe4d 	bl	1a0063b0 <_Balloc>
1a006716:	f240 2371 	movw	r3, #625	; 0x271
1a00671a:	6143      	str	r3, [r0, #20]
1a00671c:	2201      	movs	r2, #1
1a00671e:	2300      	movs	r3, #0
1a006720:	6102      	str	r2, [r0, #16]
1a006722:	4606      	mov	r6, r0
1a006724:	64b8      	str	r0, [r7, #72]	; 0x48
1a006726:	6003      	str	r3, [r0, #0]
1a006728:	e7be      	b.n	1a0066a8 <__pow5mult+0x18>
1a00672a:	bf00      	nop
1a00672c:	1a0079a8 	.word	0x1a0079a8

1a006730 <__lshift>:
1a006730:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1a006734:	4691      	mov	r9, r2
1a006736:	690a      	ldr	r2, [r1, #16]
1a006738:	460e      	mov	r6, r1
1a00673a:	ea4f 1469 	mov.w	r4, r9, asr #5
1a00673e:	e9d1 1301 	ldrd	r1, r3, [r1, #4]
1a006742:	eb04 0802 	add.w	r8, r4, r2
1a006746:	f108 0501 	add.w	r5, r8, #1
1a00674a:	429d      	cmp	r5, r3
1a00674c:	4607      	mov	r7, r0
1a00674e:	dd04      	ble.n	1a00675a <__lshift+0x2a>
1a006750:	005b      	lsls	r3, r3, #1
1a006752:	429d      	cmp	r5, r3
1a006754:	f101 0101 	add.w	r1, r1, #1
1a006758:	dcfa      	bgt.n	1a006750 <__lshift+0x20>
1a00675a:	4638      	mov	r0, r7
1a00675c:	f7ff fe28 	bl	1a0063b0 <_Balloc>
1a006760:	2c00      	cmp	r4, #0
1a006762:	f100 0314 	add.w	r3, r0, #20
1a006766:	dd37      	ble.n	1a0067d8 <__lshift+0xa8>
1a006768:	eb03 0184 	add.w	r1, r3, r4, lsl #2
1a00676c:	2200      	movs	r2, #0
1a00676e:	f843 2b04 	str.w	r2, [r3], #4
1a006772:	428b      	cmp	r3, r1
1a006774:	d1fb      	bne.n	1a00676e <__lshift+0x3e>
1a006776:	6934      	ldr	r4, [r6, #16]
1a006778:	f106 0314 	add.w	r3, r6, #20
1a00677c:	f019 091f 	ands.w	r9, r9, #31
1a006780:	eb03 0c84 	add.w	ip, r3, r4, lsl #2
1a006784:	d020      	beq.n	1a0067c8 <__lshift+0x98>
1a006786:	f1c9 0e20 	rsb	lr, r9, #32
1a00678a:	2200      	movs	r2, #0
1a00678c:	e000      	b.n	1a006790 <__lshift+0x60>
1a00678e:	4651      	mov	r1, sl
1a006790:	681c      	ldr	r4, [r3, #0]
1a006792:	468a      	mov	sl, r1
1a006794:	fa04 f409 	lsl.w	r4, r4, r9
1a006798:	4314      	orrs	r4, r2
1a00679a:	f84a 4b04 	str.w	r4, [sl], #4
1a00679e:	f853 2b04 	ldr.w	r2, [r3], #4
1a0067a2:	4563      	cmp	r3, ip
1a0067a4:	fa22 f20e 	lsr.w	r2, r2, lr
1a0067a8:	d3f1      	bcc.n	1a00678e <__lshift+0x5e>
1a0067aa:	604a      	str	r2, [r1, #4]
1a0067ac:	b10a      	cbz	r2, 1a0067b2 <__lshift+0x82>
1a0067ae:	f108 0502 	add.w	r5, r8, #2
1a0067b2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
1a0067b4:	6872      	ldr	r2, [r6, #4]
1a0067b6:	3d01      	subs	r5, #1
1a0067b8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1a0067bc:	6105      	str	r5, [r0, #16]
1a0067be:	6031      	str	r1, [r6, #0]
1a0067c0:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
1a0067c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a0067c8:	3904      	subs	r1, #4
1a0067ca:	f853 2b04 	ldr.w	r2, [r3], #4
1a0067ce:	f841 2f04 	str.w	r2, [r1, #4]!
1a0067d2:	459c      	cmp	ip, r3
1a0067d4:	d8f9      	bhi.n	1a0067ca <__lshift+0x9a>
1a0067d6:	e7ec      	b.n	1a0067b2 <__lshift+0x82>
1a0067d8:	4619      	mov	r1, r3
1a0067da:	e7cc      	b.n	1a006776 <__lshift+0x46>

1a0067dc <__mcmp>:
1a0067dc:	b430      	push	{r4, r5}
1a0067de:	690b      	ldr	r3, [r1, #16]
1a0067e0:	4605      	mov	r5, r0
1a0067e2:	6900      	ldr	r0, [r0, #16]
1a0067e4:	1ac0      	subs	r0, r0, r3
1a0067e6:	d10f      	bne.n	1a006808 <__mcmp+0x2c>
1a0067e8:	009b      	lsls	r3, r3, #2
1a0067ea:	3514      	adds	r5, #20
1a0067ec:	3114      	adds	r1, #20
1a0067ee:	4419      	add	r1, r3
1a0067f0:	442b      	add	r3, r5
1a0067f2:	e001      	b.n	1a0067f8 <__mcmp+0x1c>
1a0067f4:	429d      	cmp	r5, r3
1a0067f6:	d207      	bcs.n	1a006808 <__mcmp+0x2c>
1a0067f8:	f853 4d04 	ldr.w	r4, [r3, #-4]!
1a0067fc:	f851 2d04 	ldr.w	r2, [r1, #-4]!
1a006800:	4294      	cmp	r4, r2
1a006802:	d0f7      	beq.n	1a0067f4 <__mcmp+0x18>
1a006804:	d302      	bcc.n	1a00680c <__mcmp+0x30>
1a006806:	2001      	movs	r0, #1
1a006808:	bc30      	pop	{r4, r5}
1a00680a:	4770      	bx	lr
1a00680c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a006810:	e7fa      	b.n	1a006808 <__mcmp+0x2c>
1a006812:	bf00      	nop

1a006814 <__mdiff>:
1a006814:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a006818:	6913      	ldr	r3, [r2, #16]
1a00681a:	690d      	ldr	r5, [r1, #16]
1a00681c:	1aed      	subs	r5, r5, r3
1a00681e:	2d00      	cmp	r5, #0
1a006820:	460e      	mov	r6, r1
1a006822:	4690      	mov	r8, r2
1a006824:	f101 0414 	add.w	r4, r1, #20
1a006828:	f102 0714 	add.w	r7, r2, #20
1a00682c:	d114      	bne.n	1a006858 <__mdiff+0x44>
1a00682e:	009b      	lsls	r3, r3, #2
1a006830:	18e2      	adds	r2, r4, r3
1a006832:	443b      	add	r3, r7
1a006834:	e001      	b.n	1a00683a <__mdiff+0x26>
1a006836:	42a2      	cmp	r2, r4
1a006838:	d959      	bls.n	1a0068ee <__mdiff+0xda>
1a00683a:	f852 cd04 	ldr.w	ip, [r2, #-4]!
1a00683e:	f853 1d04 	ldr.w	r1, [r3, #-4]!
1a006842:	458c      	cmp	ip, r1
1a006844:	d0f7      	beq.n	1a006836 <__mdiff+0x22>
1a006846:	d209      	bcs.n	1a00685c <__mdiff+0x48>
1a006848:	4622      	mov	r2, r4
1a00684a:	4633      	mov	r3, r6
1a00684c:	463c      	mov	r4, r7
1a00684e:	4646      	mov	r6, r8
1a006850:	4617      	mov	r7, r2
1a006852:	4698      	mov	r8, r3
1a006854:	2501      	movs	r5, #1
1a006856:	e001      	b.n	1a00685c <__mdiff+0x48>
1a006858:	dbf6      	blt.n	1a006848 <__mdiff+0x34>
1a00685a:	2500      	movs	r5, #0
1a00685c:	6871      	ldr	r1, [r6, #4]
1a00685e:	f7ff fda7 	bl	1a0063b0 <_Balloc>
1a006862:	f8d8 3010 	ldr.w	r3, [r8, #16]
1a006866:	6936      	ldr	r6, [r6, #16]
1a006868:	60c5      	str	r5, [r0, #12]
1a00686a:	eb07 0e83 	add.w	lr, r7, r3, lsl #2
1a00686e:	46bc      	mov	ip, r7
1a006870:	f100 0514 	add.w	r5, r0, #20
1a006874:	eb04 0786 	add.w	r7, r4, r6, lsl #2
1a006878:	2300      	movs	r3, #0
1a00687a:	f85c 1b04 	ldr.w	r1, [ip], #4
1a00687e:	f854 8b04 	ldr.w	r8, [r4], #4
1a006882:	b28a      	uxth	r2, r1
1a006884:	fa13 f388 	uxtah	r3, r3, r8
1a006888:	0c09      	lsrs	r1, r1, #16
1a00688a:	1a9a      	subs	r2, r3, r2
1a00688c:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
1a006890:	eb03 4322 	add.w	r3, r3, r2, asr #16
1a006894:	b292      	uxth	r2, r2
1a006896:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
1a00689a:	45e6      	cmp	lr, ip
1a00689c:	f845 2b04 	str.w	r2, [r5], #4
1a0068a0:	ea4f 4323 	mov.w	r3, r3, asr #16
1a0068a4:	d8e9      	bhi.n	1a00687a <__mdiff+0x66>
1a0068a6:	42a7      	cmp	r7, r4
1a0068a8:	d917      	bls.n	1a0068da <__mdiff+0xc6>
1a0068aa:	46ae      	mov	lr, r5
1a0068ac:	46a4      	mov	ip, r4
1a0068ae:	f85c 2b04 	ldr.w	r2, [ip], #4
1a0068b2:	fa13 f382 	uxtah	r3, r3, r2
1a0068b6:	1419      	asrs	r1, r3, #16
1a0068b8:	eb01 4112 	add.w	r1, r1, r2, lsr #16
1a0068bc:	b29b      	uxth	r3, r3
1a0068be:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
1a0068c2:	4567      	cmp	r7, ip
1a0068c4:	f84e 2b04 	str.w	r2, [lr], #4
1a0068c8:	ea4f 4321 	mov.w	r3, r1, asr #16
1a0068cc:	d8ef      	bhi.n	1a0068ae <__mdiff+0x9a>
1a0068ce:	43e4      	mvns	r4, r4
1a0068d0:	4427      	add	r7, r4
1a0068d2:	f027 0703 	bic.w	r7, r7, #3
1a0068d6:	3704      	adds	r7, #4
1a0068d8:	443d      	add	r5, r7
1a0068da:	3d04      	subs	r5, #4
1a0068dc:	b922      	cbnz	r2, 1a0068e8 <__mdiff+0xd4>
1a0068de:	f855 3d04 	ldr.w	r3, [r5, #-4]!
1a0068e2:	3e01      	subs	r6, #1
1a0068e4:	2b00      	cmp	r3, #0
1a0068e6:	d0fa      	beq.n	1a0068de <__mdiff+0xca>
1a0068e8:	6106      	str	r6, [r0, #16]
1a0068ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a0068ee:	2100      	movs	r1, #0
1a0068f0:	f7ff fd5e 	bl	1a0063b0 <_Balloc>
1a0068f4:	2201      	movs	r2, #1
1a0068f6:	2300      	movs	r3, #0
1a0068f8:	e9c0 2304 	strd	r2, r3, [r0, #16]
1a0068fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

1a006900 <__d2b>:
1a006900:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1a006904:	460f      	mov	r7, r1
1a006906:	b083      	sub	sp, #12
1a006908:	2101      	movs	r1, #1
1a00690a:	ec55 4b10 	vmov	r4, r5, d0
1a00690e:	4616      	mov	r6, r2
1a006910:	f7ff fd4e 	bl	1a0063b0 <_Balloc>
1a006914:	f3c5 580a 	ubfx	r8, r5, #20, #11
1a006918:	4681      	mov	r9, r0
1a00691a:	f3c5 0313 	ubfx	r3, r5, #0, #20
1a00691e:	f1b8 0f00 	cmp.w	r8, #0
1a006922:	d001      	beq.n	1a006928 <__d2b+0x28>
1a006924:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
1a006928:	2c00      	cmp	r4, #0
1a00692a:	9301      	str	r3, [sp, #4]
1a00692c:	d024      	beq.n	1a006978 <__d2b+0x78>
1a00692e:	a802      	add	r0, sp, #8
1a006930:	f840 4d08 	str.w	r4, [r0, #-8]!
1a006934:	f7ff fdcc 	bl	1a0064d0 <__lo0bits>
1a006938:	2800      	cmp	r0, #0
1a00693a:	d136      	bne.n	1a0069aa <__d2b+0xaa>
1a00693c:	e9dd 2300 	ldrd	r2, r3, [sp]
1a006940:	f8c9 2014 	str.w	r2, [r9, #20]
1a006944:	2b00      	cmp	r3, #0
1a006946:	bf0c      	ite	eq
1a006948:	2101      	moveq	r1, #1
1a00694a:	2102      	movne	r1, #2
1a00694c:	f8c9 3018 	str.w	r3, [r9, #24]
1a006950:	f8c9 1010 	str.w	r1, [r9, #16]
1a006954:	f1b8 0f00 	cmp.w	r8, #0
1a006958:	d11b      	bne.n	1a006992 <__d2b+0x92>
1a00695a:	eb09 0381 	add.w	r3, r9, r1, lsl #2
1a00695e:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
1a006962:	6038      	str	r0, [r7, #0]
1a006964:	6918      	ldr	r0, [r3, #16]
1a006966:	f7ff fd93 	bl	1a006490 <__hi0bits>
1a00696a:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
1a00696e:	6030      	str	r0, [r6, #0]
1a006970:	4648      	mov	r0, r9
1a006972:	b003      	add	sp, #12
1a006974:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1a006978:	a801      	add	r0, sp, #4
1a00697a:	f7ff fda9 	bl	1a0064d0 <__lo0bits>
1a00697e:	9b01      	ldr	r3, [sp, #4]
1a006980:	f8c9 3014 	str.w	r3, [r9, #20]
1a006984:	2101      	movs	r1, #1
1a006986:	3020      	adds	r0, #32
1a006988:	f8c9 1010 	str.w	r1, [r9, #16]
1a00698c:	f1b8 0f00 	cmp.w	r8, #0
1a006990:	d0e3      	beq.n	1a00695a <__d2b+0x5a>
1a006992:	f2a8 4833 	subw	r8, r8, #1075	; 0x433
1a006996:	eb08 0300 	add.w	r3, r8, r0
1a00699a:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
1a00699e:	603b      	str	r3, [r7, #0]
1a0069a0:	6030      	str	r0, [r6, #0]
1a0069a2:	4648      	mov	r0, r9
1a0069a4:	b003      	add	sp, #12
1a0069a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1a0069aa:	e9dd 1300 	ldrd	r1, r3, [sp]
1a0069ae:	f1c0 0220 	rsb	r2, r0, #32
1a0069b2:	fa03 f202 	lsl.w	r2, r3, r2
1a0069b6:	430a      	orrs	r2, r1
1a0069b8:	40c3      	lsrs	r3, r0
1a0069ba:	9301      	str	r3, [sp, #4]
1a0069bc:	f8c9 2014 	str.w	r2, [r9, #20]
1a0069c0:	e7c0      	b.n	1a006944 <__d2b+0x44>
1a0069c2:	bf00      	nop

1a0069c4 <_realloc_r>:
1a0069c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a0069c8:	4692      	mov	sl, r2
1a0069ca:	b083      	sub	sp, #12
1a0069cc:	2900      	cmp	r1, #0
1a0069ce:	f000 80a1 	beq.w	1a006b14 <_realloc_r+0x150>
1a0069d2:	460d      	mov	r5, r1
1a0069d4:	4680      	mov	r8, r0
1a0069d6:	f10a 040b 	add.w	r4, sl, #11
1a0069da:	f7ff fcdd 	bl	1a006398 <__malloc_lock>
1a0069de:	f855 2c04 	ldr.w	r2, [r5, #-4]
1a0069e2:	2c16      	cmp	r4, #22
1a0069e4:	f022 0603 	bic.w	r6, r2, #3
1a0069e8:	f1a5 0708 	sub.w	r7, r5, #8
1a0069ec:	d83e      	bhi.n	1a006a6c <_realloc_r+0xa8>
1a0069ee:	2410      	movs	r4, #16
1a0069f0:	4621      	mov	r1, r4
1a0069f2:	45a2      	cmp	sl, r4
1a0069f4:	d83f      	bhi.n	1a006a76 <_realloc_r+0xb2>
1a0069f6:	428e      	cmp	r6, r1
1a0069f8:	eb07 0906 	add.w	r9, r7, r6
1a0069fc:	da74      	bge.n	1a006ae8 <_realloc_r+0x124>
1a0069fe:	4bc7      	ldr	r3, [pc, #796]	; (1a006d1c <_realloc_r+0x358>)
1a006a00:	6898      	ldr	r0, [r3, #8]
1a006a02:	4548      	cmp	r0, r9
1a006a04:	f000 80aa 	beq.w	1a006b5c <_realloc_r+0x198>
1a006a08:	f8d9 0004 	ldr.w	r0, [r9, #4]
1a006a0c:	f020 0301 	bic.w	r3, r0, #1
1a006a10:	444b      	add	r3, r9
1a006a12:	685b      	ldr	r3, [r3, #4]
1a006a14:	07db      	lsls	r3, r3, #31
1a006a16:	f140 8083 	bpl.w	1a006b20 <_realloc_r+0x15c>
1a006a1a:	07d2      	lsls	r2, r2, #31
1a006a1c:	d534      	bpl.n	1a006a88 <_realloc_r+0xc4>
1a006a1e:	4651      	mov	r1, sl
1a006a20:	4640      	mov	r0, r8
1a006a22:	f7ff f95d 	bl	1a005ce0 <_malloc_r>
1a006a26:	4682      	mov	sl, r0
1a006a28:	b1e0      	cbz	r0, 1a006a64 <_realloc_r+0xa0>
1a006a2a:	f855 3c04 	ldr.w	r3, [r5, #-4]
1a006a2e:	f023 0301 	bic.w	r3, r3, #1
1a006a32:	443b      	add	r3, r7
1a006a34:	f1a0 0208 	sub.w	r2, r0, #8
1a006a38:	4293      	cmp	r3, r2
1a006a3a:	f000 80f9 	beq.w	1a006c30 <_realloc_r+0x26c>
1a006a3e:	1f32      	subs	r2, r6, #4
1a006a40:	2a24      	cmp	r2, #36	; 0x24
1a006a42:	f200 8107 	bhi.w	1a006c54 <_realloc_r+0x290>
1a006a46:	2a13      	cmp	r2, #19
1a006a48:	6829      	ldr	r1, [r5, #0]
1a006a4a:	f200 80e6 	bhi.w	1a006c1a <_realloc_r+0x256>
1a006a4e:	4603      	mov	r3, r0
1a006a50:	462a      	mov	r2, r5
1a006a52:	6019      	str	r1, [r3, #0]
1a006a54:	6851      	ldr	r1, [r2, #4]
1a006a56:	6059      	str	r1, [r3, #4]
1a006a58:	6892      	ldr	r2, [r2, #8]
1a006a5a:	609a      	str	r2, [r3, #8]
1a006a5c:	4629      	mov	r1, r5
1a006a5e:	4640      	mov	r0, r8
1a006a60:	f7fe fe14 	bl	1a00568c <_free_r>
1a006a64:	4640      	mov	r0, r8
1a006a66:	f7ff fc9d 	bl	1a0063a4 <__malloc_unlock>
1a006a6a:	e04f      	b.n	1a006b0c <_realloc_r+0x148>
1a006a6c:	f024 0407 	bic.w	r4, r4, #7
1a006a70:	2c00      	cmp	r4, #0
1a006a72:	4621      	mov	r1, r4
1a006a74:	dabd      	bge.n	1a0069f2 <_realloc_r+0x2e>
1a006a76:	f04f 0a00 	mov.w	sl, #0
1a006a7a:	230c      	movs	r3, #12
1a006a7c:	4650      	mov	r0, sl
1a006a7e:	f8c8 3000 	str.w	r3, [r8]
1a006a82:	b003      	add	sp, #12
1a006a84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a006a88:	f855 3c08 	ldr.w	r3, [r5, #-8]
1a006a8c:	eba7 0b03 	sub.w	fp, r7, r3
1a006a90:	f8db 2004 	ldr.w	r2, [fp, #4]
1a006a94:	f022 0203 	bic.w	r2, r2, #3
1a006a98:	18b3      	adds	r3, r6, r2
1a006a9a:	428b      	cmp	r3, r1
1a006a9c:	dbbf      	blt.n	1a006a1e <_realloc_r+0x5a>
1a006a9e:	46da      	mov	sl, fp
1a006aa0:	f8db 100c 	ldr.w	r1, [fp, #12]
1a006aa4:	f85a 0f08 	ldr.w	r0, [sl, #8]!
1a006aa8:	1f32      	subs	r2, r6, #4
1a006aaa:	2a24      	cmp	r2, #36	; 0x24
1a006aac:	60c1      	str	r1, [r0, #12]
1a006aae:	eb0b 0903 	add.w	r9, fp, r3
1a006ab2:	6088      	str	r0, [r1, #8]
1a006ab4:	f200 80c6 	bhi.w	1a006c44 <_realloc_r+0x280>
1a006ab8:	2a13      	cmp	r2, #19
1a006aba:	6829      	ldr	r1, [r5, #0]
1a006abc:	f240 80c0 	bls.w	1a006c40 <_realloc_r+0x27c>
1a006ac0:	f8cb 1008 	str.w	r1, [fp, #8]
1a006ac4:	6869      	ldr	r1, [r5, #4]
1a006ac6:	f8cb 100c 	str.w	r1, [fp, #12]
1a006aca:	2a1b      	cmp	r2, #27
1a006acc:	68a9      	ldr	r1, [r5, #8]
1a006ace:	f200 80d8 	bhi.w	1a006c82 <_realloc_r+0x2be>
1a006ad2:	f10b 0210 	add.w	r2, fp, #16
1a006ad6:	3508      	adds	r5, #8
1a006ad8:	6011      	str	r1, [r2, #0]
1a006ada:	6869      	ldr	r1, [r5, #4]
1a006adc:	6051      	str	r1, [r2, #4]
1a006ade:	68a9      	ldr	r1, [r5, #8]
1a006ae0:	6091      	str	r1, [r2, #8]
1a006ae2:	461e      	mov	r6, r3
1a006ae4:	465f      	mov	r7, fp
1a006ae6:	4655      	mov	r5, sl
1a006ae8:	687b      	ldr	r3, [r7, #4]
1a006aea:	1b32      	subs	r2, r6, r4
1a006aec:	2a0f      	cmp	r2, #15
1a006aee:	f003 0301 	and.w	r3, r3, #1
1a006af2:	d822      	bhi.n	1a006b3a <_realloc_r+0x176>
1a006af4:	4333      	orrs	r3, r6
1a006af6:	607b      	str	r3, [r7, #4]
1a006af8:	f8d9 3004 	ldr.w	r3, [r9, #4]
1a006afc:	f043 0301 	orr.w	r3, r3, #1
1a006b00:	f8c9 3004 	str.w	r3, [r9, #4]
1a006b04:	4640      	mov	r0, r8
1a006b06:	f7ff fc4d 	bl	1a0063a4 <__malloc_unlock>
1a006b0a:	46aa      	mov	sl, r5
1a006b0c:	4650      	mov	r0, sl
1a006b0e:	b003      	add	sp, #12
1a006b10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a006b14:	4611      	mov	r1, r2
1a006b16:	b003      	add	sp, #12
1a006b18:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a006b1c:	f7ff b8e0 	b.w	1a005ce0 <_malloc_r>
1a006b20:	f020 0003 	bic.w	r0, r0, #3
1a006b24:	1833      	adds	r3, r6, r0
1a006b26:	428b      	cmp	r3, r1
1a006b28:	db61      	blt.n	1a006bee <_realloc_r+0x22a>
1a006b2a:	e9d9 1202 	ldrd	r1, r2, [r9, #8]
1a006b2e:	461e      	mov	r6, r3
1a006b30:	60ca      	str	r2, [r1, #12]
1a006b32:	eb07 0903 	add.w	r9, r7, r3
1a006b36:	6091      	str	r1, [r2, #8]
1a006b38:	e7d6      	b.n	1a006ae8 <_realloc_r+0x124>
1a006b3a:	1939      	adds	r1, r7, r4
1a006b3c:	4323      	orrs	r3, r4
1a006b3e:	f042 0201 	orr.w	r2, r2, #1
1a006b42:	607b      	str	r3, [r7, #4]
1a006b44:	604a      	str	r2, [r1, #4]
1a006b46:	f8d9 3004 	ldr.w	r3, [r9, #4]
1a006b4a:	f043 0301 	orr.w	r3, r3, #1
1a006b4e:	3108      	adds	r1, #8
1a006b50:	f8c9 3004 	str.w	r3, [r9, #4]
1a006b54:	4640      	mov	r0, r8
1a006b56:	f7fe fd99 	bl	1a00568c <_free_r>
1a006b5a:	e7d3      	b.n	1a006b04 <_realloc_r+0x140>
1a006b5c:	6840      	ldr	r0, [r0, #4]
1a006b5e:	f020 0903 	bic.w	r9, r0, #3
1a006b62:	44b1      	add	r9, r6
1a006b64:	f104 0010 	add.w	r0, r4, #16
1a006b68:	4581      	cmp	r9, r0
1a006b6a:	da77      	bge.n	1a006c5c <_realloc_r+0x298>
1a006b6c:	07d2      	lsls	r2, r2, #31
1a006b6e:	f53f af56 	bmi.w	1a006a1e <_realloc_r+0x5a>
1a006b72:	f855 2c08 	ldr.w	r2, [r5, #-8]
1a006b76:	eba7 0b02 	sub.w	fp, r7, r2
1a006b7a:	f8db 2004 	ldr.w	r2, [fp, #4]
1a006b7e:	f022 0203 	bic.w	r2, r2, #3
1a006b82:	4491      	add	r9, r2
1a006b84:	4548      	cmp	r0, r9
1a006b86:	dc87      	bgt.n	1a006a98 <_realloc_r+0xd4>
1a006b88:	46da      	mov	sl, fp
1a006b8a:	f8db 100c 	ldr.w	r1, [fp, #12]
1a006b8e:	f85a 0f08 	ldr.w	r0, [sl, #8]!
1a006b92:	1f32      	subs	r2, r6, #4
1a006b94:	2a24      	cmp	r2, #36	; 0x24
1a006b96:	60c1      	str	r1, [r0, #12]
1a006b98:	6088      	str	r0, [r1, #8]
1a006b9a:	f200 80a1 	bhi.w	1a006ce0 <_realloc_r+0x31c>
1a006b9e:	2a13      	cmp	r2, #19
1a006ba0:	6829      	ldr	r1, [r5, #0]
1a006ba2:	f240 809b 	bls.w	1a006cdc <_realloc_r+0x318>
1a006ba6:	f8cb 1008 	str.w	r1, [fp, #8]
1a006baa:	6869      	ldr	r1, [r5, #4]
1a006bac:	f8cb 100c 	str.w	r1, [fp, #12]
1a006bb0:	2a1b      	cmp	r2, #27
1a006bb2:	68a9      	ldr	r1, [r5, #8]
1a006bb4:	f200 809b 	bhi.w	1a006cee <_realloc_r+0x32a>
1a006bb8:	f10b 0210 	add.w	r2, fp, #16
1a006bbc:	3508      	adds	r5, #8
1a006bbe:	6011      	str	r1, [r2, #0]
1a006bc0:	6869      	ldr	r1, [r5, #4]
1a006bc2:	6051      	str	r1, [r2, #4]
1a006bc4:	68a9      	ldr	r1, [r5, #8]
1a006bc6:	6091      	str	r1, [r2, #8]
1a006bc8:	eb0b 0104 	add.w	r1, fp, r4
1a006bcc:	eba9 0204 	sub.w	r2, r9, r4
1a006bd0:	f042 0201 	orr.w	r2, r2, #1
1a006bd4:	6099      	str	r1, [r3, #8]
1a006bd6:	604a      	str	r2, [r1, #4]
1a006bd8:	f8db 3004 	ldr.w	r3, [fp, #4]
1a006bdc:	f003 0301 	and.w	r3, r3, #1
1a006be0:	431c      	orrs	r4, r3
1a006be2:	4640      	mov	r0, r8
1a006be4:	f8cb 4004 	str.w	r4, [fp, #4]
1a006be8:	f7ff fbdc 	bl	1a0063a4 <__malloc_unlock>
1a006bec:	e78e      	b.n	1a006b0c <_realloc_r+0x148>
1a006bee:	07d3      	lsls	r3, r2, #31
1a006bf0:	f53f af15 	bmi.w	1a006a1e <_realloc_r+0x5a>
1a006bf4:	f855 3c08 	ldr.w	r3, [r5, #-8]
1a006bf8:	eba7 0b03 	sub.w	fp, r7, r3
1a006bfc:	f8db 2004 	ldr.w	r2, [fp, #4]
1a006c00:	f022 0203 	bic.w	r2, r2, #3
1a006c04:	4410      	add	r0, r2
1a006c06:	1983      	adds	r3, r0, r6
1a006c08:	428b      	cmp	r3, r1
1a006c0a:	f6ff af45 	blt.w	1a006a98 <_realloc_r+0xd4>
1a006c0e:	e9d9 1202 	ldrd	r1, r2, [r9, #8]
1a006c12:	46da      	mov	sl, fp
1a006c14:	60ca      	str	r2, [r1, #12]
1a006c16:	6091      	str	r1, [r2, #8]
1a006c18:	e742      	b.n	1a006aa0 <_realloc_r+0xdc>
1a006c1a:	6001      	str	r1, [r0, #0]
1a006c1c:	686b      	ldr	r3, [r5, #4]
1a006c1e:	6043      	str	r3, [r0, #4]
1a006c20:	2a1b      	cmp	r2, #27
1a006c22:	d83a      	bhi.n	1a006c9a <_realloc_r+0x2d6>
1a006c24:	f105 0208 	add.w	r2, r5, #8
1a006c28:	f100 0308 	add.w	r3, r0, #8
1a006c2c:	68a9      	ldr	r1, [r5, #8]
1a006c2e:	e710      	b.n	1a006a52 <_realloc_r+0x8e>
1a006c30:	f850 3c04 	ldr.w	r3, [r0, #-4]
1a006c34:	f023 0303 	bic.w	r3, r3, #3
1a006c38:	441e      	add	r6, r3
1a006c3a:	eb07 0906 	add.w	r9, r7, r6
1a006c3e:	e753      	b.n	1a006ae8 <_realloc_r+0x124>
1a006c40:	4652      	mov	r2, sl
1a006c42:	e749      	b.n	1a006ad8 <_realloc_r+0x114>
1a006c44:	4629      	mov	r1, r5
1a006c46:	4650      	mov	r0, sl
1a006c48:	461e      	mov	r6, r3
1a006c4a:	465f      	mov	r7, fp
1a006c4c:	f7ff fb40 	bl	1a0062d0 <memmove>
1a006c50:	4655      	mov	r5, sl
1a006c52:	e749      	b.n	1a006ae8 <_realloc_r+0x124>
1a006c54:	4629      	mov	r1, r5
1a006c56:	f7ff fb3b 	bl	1a0062d0 <memmove>
1a006c5a:	e6ff      	b.n	1a006a5c <_realloc_r+0x98>
1a006c5c:	4427      	add	r7, r4
1a006c5e:	eba9 0904 	sub.w	r9, r9, r4
1a006c62:	f049 0201 	orr.w	r2, r9, #1
1a006c66:	609f      	str	r7, [r3, #8]
1a006c68:	607a      	str	r2, [r7, #4]
1a006c6a:	f855 3c04 	ldr.w	r3, [r5, #-4]
1a006c6e:	f003 0301 	and.w	r3, r3, #1
1a006c72:	431c      	orrs	r4, r3
1a006c74:	4640      	mov	r0, r8
1a006c76:	f845 4c04 	str.w	r4, [r5, #-4]
1a006c7a:	f7ff fb93 	bl	1a0063a4 <__malloc_unlock>
1a006c7e:	46aa      	mov	sl, r5
1a006c80:	e744      	b.n	1a006b0c <_realloc_r+0x148>
1a006c82:	f8cb 1010 	str.w	r1, [fp, #16]
1a006c86:	68e9      	ldr	r1, [r5, #12]
1a006c88:	f8cb 1014 	str.w	r1, [fp, #20]
1a006c8c:	2a24      	cmp	r2, #36	; 0x24
1a006c8e:	d010      	beq.n	1a006cb2 <_realloc_r+0x2ee>
1a006c90:	6929      	ldr	r1, [r5, #16]
1a006c92:	f10b 0218 	add.w	r2, fp, #24
1a006c96:	3510      	adds	r5, #16
1a006c98:	e71e      	b.n	1a006ad8 <_realloc_r+0x114>
1a006c9a:	68ab      	ldr	r3, [r5, #8]
1a006c9c:	6083      	str	r3, [r0, #8]
1a006c9e:	68eb      	ldr	r3, [r5, #12]
1a006ca0:	60c3      	str	r3, [r0, #12]
1a006ca2:	2a24      	cmp	r2, #36	; 0x24
1a006ca4:	d010      	beq.n	1a006cc8 <_realloc_r+0x304>
1a006ca6:	f105 0210 	add.w	r2, r5, #16
1a006caa:	f100 0310 	add.w	r3, r0, #16
1a006cae:	6929      	ldr	r1, [r5, #16]
1a006cb0:	e6cf      	b.n	1a006a52 <_realloc_r+0x8e>
1a006cb2:	692a      	ldr	r2, [r5, #16]
1a006cb4:	f8cb 2018 	str.w	r2, [fp, #24]
1a006cb8:	696a      	ldr	r2, [r5, #20]
1a006cba:	f8cb 201c 	str.w	r2, [fp, #28]
1a006cbe:	69a9      	ldr	r1, [r5, #24]
1a006cc0:	f10b 0220 	add.w	r2, fp, #32
1a006cc4:	3518      	adds	r5, #24
1a006cc6:	e707      	b.n	1a006ad8 <_realloc_r+0x114>
1a006cc8:	692b      	ldr	r3, [r5, #16]
1a006cca:	6103      	str	r3, [r0, #16]
1a006ccc:	696b      	ldr	r3, [r5, #20]
1a006cce:	6143      	str	r3, [r0, #20]
1a006cd0:	69a9      	ldr	r1, [r5, #24]
1a006cd2:	f105 0218 	add.w	r2, r5, #24
1a006cd6:	f100 0318 	add.w	r3, r0, #24
1a006cda:	e6ba      	b.n	1a006a52 <_realloc_r+0x8e>
1a006cdc:	4652      	mov	r2, sl
1a006cde:	e76e      	b.n	1a006bbe <_realloc_r+0x1fa>
1a006ce0:	4629      	mov	r1, r5
1a006ce2:	4650      	mov	r0, sl
1a006ce4:	9301      	str	r3, [sp, #4]
1a006ce6:	f7ff faf3 	bl	1a0062d0 <memmove>
1a006cea:	9b01      	ldr	r3, [sp, #4]
1a006cec:	e76c      	b.n	1a006bc8 <_realloc_r+0x204>
1a006cee:	f8cb 1010 	str.w	r1, [fp, #16]
1a006cf2:	68e9      	ldr	r1, [r5, #12]
1a006cf4:	f8cb 1014 	str.w	r1, [fp, #20]
1a006cf8:	2a24      	cmp	r2, #36	; 0x24
1a006cfa:	d004      	beq.n	1a006d06 <_realloc_r+0x342>
1a006cfc:	6929      	ldr	r1, [r5, #16]
1a006cfe:	f10b 0218 	add.w	r2, fp, #24
1a006d02:	3510      	adds	r5, #16
1a006d04:	e75b      	b.n	1a006bbe <_realloc_r+0x1fa>
1a006d06:	692a      	ldr	r2, [r5, #16]
1a006d08:	f8cb 2018 	str.w	r2, [fp, #24]
1a006d0c:	696a      	ldr	r2, [r5, #20]
1a006d0e:	f8cb 201c 	str.w	r2, [fp, #28]
1a006d12:	69a9      	ldr	r1, [r5, #24]
1a006d14:	f10b 0220 	add.w	r2, fp, #32
1a006d18:	3518      	adds	r5, #24
1a006d1a:	e750      	b.n	1a006bbe <_realloc_r+0x1fa>
1a006d1c:	100004b8 	.word	0x100004b8

1a006d20 <frexp>:
1a006d20:	ec53 2b10 	vmov	r2, r3, d0
1a006d24:	b570      	push	{r4, r5, r6, lr}
1a006d26:	4e16      	ldr	r6, [pc, #88]	; (1a006d80 <frexp+0x60>)
1a006d28:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
1a006d2c:	2500      	movs	r5, #0
1a006d2e:	42b1      	cmp	r1, r6
1a006d30:	4604      	mov	r4, r0
1a006d32:	6005      	str	r5, [r0, #0]
1a006d34:	dc21      	bgt.n	1a006d7a <frexp+0x5a>
1a006d36:	ee10 6a10 	vmov	r6, s0
1a006d3a:	430e      	orrs	r6, r1
1a006d3c:	d01d      	beq.n	1a006d7a <frexp+0x5a>
1a006d3e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
1a006d42:	4618      	mov	r0, r3
1a006d44:	da0c      	bge.n	1a006d60 <frexp+0x40>
1a006d46:	4619      	mov	r1, r3
1a006d48:	2200      	movs	r2, #0
1a006d4a:	ee10 0a10 	vmov	r0, s0
1a006d4e:	4b0d      	ldr	r3, [pc, #52]	; (1a006d84 <frexp+0x64>)
1a006d50:	f7fb f810 	bl	1a001d74 <__aeabi_dmul>
1a006d54:	f06f 0535 	mvn.w	r5, #53	; 0x35
1a006d58:	4602      	mov	r2, r0
1a006d5a:	4608      	mov	r0, r1
1a006d5c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
1a006d60:	f020 40ff 	bic.w	r0, r0, #2139095040	; 0x7f800000
1a006d64:	1509      	asrs	r1, r1, #20
1a006d66:	f420 00e0 	bic.w	r0, r0, #7340032	; 0x700000
1a006d6a:	f2a1 31fe 	subw	r1, r1, #1022	; 0x3fe
1a006d6e:	f040 537f 	orr.w	r3, r0, #1069547520	; 0x3fc00000
1a006d72:	4429      	add	r1, r5
1a006d74:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
1a006d78:	6021      	str	r1, [r4, #0]
1a006d7a:	ec43 2b10 	vmov	d0, r2, r3
1a006d7e:	bd70      	pop	{r4, r5, r6, pc}
1a006d80:	7fefffff 	.word	0x7fefffff
1a006d84:	43500000 	.word	0x43500000

1a006d88 <__sread>:
1a006d88:	b510      	push	{r4, lr}
1a006d8a:	460c      	mov	r4, r1
1a006d8c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
1a006d90:	f7f9 fcb4 	bl	1a0006fc <_read_r>
1a006d94:	2800      	cmp	r0, #0
1a006d96:	db03      	blt.n	1a006da0 <__sread+0x18>
1a006d98:	6d23      	ldr	r3, [r4, #80]	; 0x50
1a006d9a:	4403      	add	r3, r0
1a006d9c:	6523      	str	r3, [r4, #80]	; 0x50
1a006d9e:	bd10      	pop	{r4, pc}
1a006da0:	89a3      	ldrh	r3, [r4, #12]
1a006da2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
1a006da6:	81a3      	strh	r3, [r4, #12]
1a006da8:	bd10      	pop	{r4, pc}
1a006daa:	bf00      	nop

1a006dac <__swrite>:
1a006dac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a006db0:	4616      	mov	r6, r2
1a006db2:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
1a006db6:	461f      	mov	r7, r3
1a006db8:	05d3      	lsls	r3, r2, #23
1a006dba:	460c      	mov	r4, r1
1a006dbc:	4605      	mov	r5, r0
1a006dbe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
1a006dc2:	d507      	bpl.n	1a006dd4 <__swrite+0x28>
1a006dc4:	2200      	movs	r2, #0
1a006dc6:	2302      	movs	r3, #2
1a006dc8:	f7f9 fc93 	bl	1a0006f2 <_lseek_r>
1a006dcc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a006dd0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
1a006dd4:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
1a006dd8:	81a2      	strh	r2, [r4, #12]
1a006dda:	463b      	mov	r3, r7
1a006ddc:	4632      	mov	r2, r6
1a006dde:	4628      	mov	r0, r5
1a006de0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
1a006de4:	f7f9 bcb1 	b.w	1a00074a <_write_r>

1a006de8 <__sseek>:
1a006de8:	b510      	push	{r4, lr}
1a006dea:	460c      	mov	r4, r1
1a006dec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
1a006df0:	f7f9 fc7f 	bl	1a0006f2 <_lseek_r>
1a006df4:	89a3      	ldrh	r3, [r4, #12]
1a006df6:	1c42      	adds	r2, r0, #1
1a006df8:	bf0e      	itee	eq
1a006dfa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
1a006dfe:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
1a006e02:	6520      	strne	r0, [r4, #80]	; 0x50
1a006e04:	81a3      	strh	r3, [r4, #12]
1a006e06:	bd10      	pop	{r4, pc}

1a006e08 <__sclose>:
1a006e08:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
1a006e0c:	f7f9 bc5e 	b.w	1a0006cc <_close_r>

1a006e10 <strncpy>:
1a006e10:	ea40 0301 	orr.w	r3, r0, r1
1a006e14:	079b      	lsls	r3, r3, #30
1a006e16:	b470      	push	{r4, r5, r6}
1a006e18:	d12a      	bne.n	1a006e70 <strncpy+0x60>
1a006e1a:	2a03      	cmp	r2, #3
1a006e1c:	d928      	bls.n	1a006e70 <strncpy+0x60>
1a006e1e:	460c      	mov	r4, r1
1a006e20:	4603      	mov	r3, r0
1a006e22:	4621      	mov	r1, r4
1a006e24:	f854 6b04 	ldr.w	r6, [r4], #4
1a006e28:	f1a6 3501 	sub.w	r5, r6, #16843009	; 0x1010101
1a006e2c:	ea25 0506 	bic.w	r5, r5, r6
1a006e30:	f015 3f80 	tst.w	r5, #2155905152	; 0x80808080
1a006e34:	d106      	bne.n	1a006e44 <strncpy+0x34>
1a006e36:	3a04      	subs	r2, #4
1a006e38:	2a03      	cmp	r2, #3
1a006e3a:	f843 6b04 	str.w	r6, [r3], #4
1a006e3e:	4621      	mov	r1, r4
1a006e40:	d8ef      	bhi.n	1a006e22 <strncpy+0x12>
1a006e42:	b19a      	cbz	r2, 1a006e6c <strncpy+0x5c>
1a006e44:	780c      	ldrb	r4, [r1, #0]
1a006e46:	701c      	strb	r4, [r3, #0]
1a006e48:	3a01      	subs	r2, #1
1a006e4a:	3301      	adds	r3, #1
1a006e4c:	b13c      	cbz	r4, 1a006e5e <strncpy+0x4e>
1a006e4e:	b16a      	cbz	r2, 1a006e6c <strncpy+0x5c>
1a006e50:	f811 4f01 	ldrb.w	r4, [r1, #1]!
1a006e54:	f803 4b01 	strb.w	r4, [r3], #1
1a006e58:	3a01      	subs	r2, #1
1a006e5a:	2c00      	cmp	r4, #0
1a006e5c:	d1f7      	bne.n	1a006e4e <strncpy+0x3e>
1a006e5e:	b12a      	cbz	r2, 1a006e6c <strncpy+0x5c>
1a006e60:	441a      	add	r2, r3
1a006e62:	2100      	movs	r1, #0
1a006e64:	f803 1b01 	strb.w	r1, [r3], #1
1a006e68:	4293      	cmp	r3, r2
1a006e6a:	d1fb      	bne.n	1a006e64 <strncpy+0x54>
1a006e6c:	bc70      	pop	{r4, r5, r6}
1a006e6e:	4770      	bx	lr
1a006e70:	4603      	mov	r3, r0
1a006e72:	e7e6      	b.n	1a006e42 <strncpy+0x32>

1a006e74 <__sprint_r.part.0>:
1a006e74:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a006e78:	6e4b      	ldr	r3, [r1, #100]	; 0x64
1a006e7a:	049c      	lsls	r4, r3, #18
1a006e7c:	4692      	mov	sl, r2
1a006e7e:	d52d      	bpl.n	1a006edc <__sprint_r.part.0+0x68>
1a006e80:	6893      	ldr	r3, [r2, #8]
1a006e82:	6812      	ldr	r2, [r2, #0]
1a006e84:	b343      	cbz	r3, 1a006ed8 <__sprint_r.part.0+0x64>
1a006e86:	460e      	mov	r6, r1
1a006e88:	4607      	mov	r7, r0
1a006e8a:	f102 0908 	add.w	r9, r2, #8
1a006e8e:	e959 5b02 	ldrd	r5, fp, [r9, #-8]
1a006e92:	ea5f 089b 	movs.w	r8, fp, lsr #2
1a006e96:	d015      	beq.n	1a006ec4 <__sprint_r.part.0+0x50>
1a006e98:	3d04      	subs	r5, #4
1a006e9a:	2400      	movs	r4, #0
1a006e9c:	e001      	b.n	1a006ea2 <__sprint_r.part.0+0x2e>
1a006e9e:	45a0      	cmp	r8, r4
1a006ea0:	d00e      	beq.n	1a006ec0 <__sprint_r.part.0+0x4c>
1a006ea2:	4632      	mov	r2, r6
1a006ea4:	f855 1f04 	ldr.w	r1, [r5, #4]!
1a006ea8:	4638      	mov	r0, r7
1a006eaa:	f000 f915 	bl	1a0070d8 <_fputwc_r>
1a006eae:	1c43      	adds	r3, r0, #1
1a006eb0:	f104 0401 	add.w	r4, r4, #1
1a006eb4:	d1f3      	bne.n	1a006e9e <__sprint_r.part.0+0x2a>
1a006eb6:	2300      	movs	r3, #0
1a006eb8:	e9ca 3301 	strd	r3, r3, [sl, #4]
1a006ebc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a006ec0:	f8da 3008 	ldr.w	r3, [sl, #8]
1a006ec4:	f02b 0b03 	bic.w	fp, fp, #3
1a006ec8:	eba3 030b 	sub.w	r3, r3, fp
1a006ecc:	f8ca 3008 	str.w	r3, [sl, #8]
1a006ed0:	f109 0908 	add.w	r9, r9, #8
1a006ed4:	2b00      	cmp	r3, #0
1a006ed6:	d1da      	bne.n	1a006e8e <__sprint_r.part.0+0x1a>
1a006ed8:	2000      	movs	r0, #0
1a006eda:	e7ec      	b.n	1a006eb6 <__sprint_r.part.0+0x42>
1a006edc:	f7fe fcca 	bl	1a005874 <__sfvwrite_r>
1a006ee0:	2300      	movs	r3, #0
1a006ee2:	e9ca 3301 	strd	r3, r3, [sl, #4]
1a006ee6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a006eea:	bf00      	nop

1a006eec <__sprint_r>:
1a006eec:	6893      	ldr	r3, [r2, #8]
1a006eee:	b10b      	cbz	r3, 1a006ef4 <__sprint_r+0x8>
1a006ef0:	f7ff bfc0 	b.w	1a006e74 <__sprint_r.part.0>
1a006ef4:	b410      	push	{r4}
1a006ef6:	4618      	mov	r0, r3
1a006ef8:	6053      	str	r3, [r2, #4]
1a006efa:	f85d 4b04 	ldr.w	r4, [sp], #4
1a006efe:	4770      	bx	lr

1a006f00 <_calloc_r>:
1a006f00:	b510      	push	{r4, lr}
1a006f02:	fb02 f101 	mul.w	r1, r2, r1
1a006f06:	f7fe feeb 	bl	1a005ce0 <_malloc_r>
1a006f0a:	4604      	mov	r4, r0
1a006f0c:	b1d8      	cbz	r0, 1a006f46 <_calloc_r+0x46>
1a006f0e:	f850 2c04 	ldr.w	r2, [r0, #-4]
1a006f12:	f022 0203 	bic.w	r2, r2, #3
1a006f16:	3a04      	subs	r2, #4
1a006f18:	2a24      	cmp	r2, #36	; 0x24
1a006f1a:	d81d      	bhi.n	1a006f58 <_calloc_r+0x58>
1a006f1c:	2a13      	cmp	r2, #19
1a006f1e:	d914      	bls.n	1a006f4a <_calloc_r+0x4a>
1a006f20:	2300      	movs	r3, #0
1a006f22:	2a1b      	cmp	r2, #27
1a006f24:	e9c0 3300 	strd	r3, r3, [r0]
1a006f28:	d91b      	bls.n	1a006f62 <_calloc_r+0x62>
1a006f2a:	2a24      	cmp	r2, #36	; 0x24
1a006f2c:	e9c0 3302 	strd	r3, r3, [r0, #8]
1a006f30:	bf0a      	itet	eq
1a006f32:	e9c0 3304 	strdeq	r3, r3, [r0, #16]
1a006f36:	f100 0210 	addne.w	r2, r0, #16
1a006f3a:	f100 0218 	addeq.w	r2, r0, #24
1a006f3e:	2300      	movs	r3, #0
1a006f40:	e9c2 3300 	strd	r3, r3, [r2]
1a006f44:	6093      	str	r3, [r2, #8]
1a006f46:	4620      	mov	r0, r4
1a006f48:	bd10      	pop	{r4, pc}
1a006f4a:	4602      	mov	r2, r0
1a006f4c:	2300      	movs	r3, #0
1a006f4e:	e9c2 3300 	strd	r3, r3, [r2]
1a006f52:	6093      	str	r3, [r2, #8]
1a006f54:	4620      	mov	r0, r4
1a006f56:	bd10      	pop	{r4, pc}
1a006f58:	2100      	movs	r1, #0
1a006f5a:	f7fb fb5b 	bl	1a002614 <memset>
1a006f5e:	4620      	mov	r0, r4
1a006f60:	bd10      	pop	{r4, pc}
1a006f62:	f100 0208 	add.w	r2, r0, #8
1a006f66:	e7f1      	b.n	1a006f4c <_calloc_r+0x4c>

1a006f68 <_fclose_r>:
1a006f68:	b570      	push	{r4, r5, r6, lr}
1a006f6a:	2900      	cmp	r1, #0
1a006f6c:	d048      	beq.n	1a007000 <_fclose_r+0x98>
1a006f6e:	4605      	mov	r5, r0
1a006f70:	460c      	mov	r4, r1
1a006f72:	b110      	cbz	r0, 1a006f7a <_fclose_r+0x12>
1a006f74:	6b83      	ldr	r3, [r0, #56]	; 0x38
1a006f76:	2b00      	cmp	r3, #0
1a006f78:	d048      	beq.n	1a00700c <_fclose_r+0xa4>
1a006f7a:	6e62      	ldr	r2, [r4, #100]	; 0x64
1a006f7c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a006f80:	07d0      	lsls	r0, r2, #31
1a006f82:	d440      	bmi.n	1a007006 <_fclose_r+0x9e>
1a006f84:	0599      	lsls	r1, r3, #22
1a006f86:	d530      	bpl.n	1a006fea <_fclose_r+0x82>
1a006f88:	4621      	mov	r1, r4
1a006f8a:	4628      	mov	r0, r5
1a006f8c:	f7fe f9f0 	bl	1a005370 <__sflush_r>
1a006f90:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
1a006f92:	4606      	mov	r6, r0
1a006f94:	b133      	cbz	r3, 1a006fa4 <_fclose_r+0x3c>
1a006f96:	69e1      	ldr	r1, [r4, #28]
1a006f98:	4628      	mov	r0, r5
1a006f9a:	4798      	blx	r3
1a006f9c:	2800      	cmp	r0, #0
1a006f9e:	bfb8      	it	lt
1a006fa0:	f04f 36ff 	movlt.w	r6, #4294967295	; 0xffffffff
1a006fa4:	89a3      	ldrh	r3, [r4, #12]
1a006fa6:	061a      	lsls	r2, r3, #24
1a006fa8:	d43c      	bmi.n	1a007024 <_fclose_r+0xbc>
1a006faa:	6b21      	ldr	r1, [r4, #48]	; 0x30
1a006fac:	b141      	cbz	r1, 1a006fc0 <_fclose_r+0x58>
1a006fae:	f104 0340 	add.w	r3, r4, #64	; 0x40
1a006fb2:	4299      	cmp	r1, r3
1a006fb4:	d002      	beq.n	1a006fbc <_fclose_r+0x54>
1a006fb6:	4628      	mov	r0, r5
1a006fb8:	f7fe fb68 	bl	1a00568c <_free_r>
1a006fbc:	2300      	movs	r3, #0
1a006fbe:	6323      	str	r3, [r4, #48]	; 0x30
1a006fc0:	6c61      	ldr	r1, [r4, #68]	; 0x44
1a006fc2:	b121      	cbz	r1, 1a006fce <_fclose_r+0x66>
1a006fc4:	4628      	mov	r0, r5
1a006fc6:	f7fe fb61 	bl	1a00568c <_free_r>
1a006fca:	2300      	movs	r3, #0
1a006fcc:	6463      	str	r3, [r4, #68]	; 0x44
1a006fce:	f7fe fb01 	bl	1a0055d4 <__sfp_lock_acquire>
1a006fd2:	6e63      	ldr	r3, [r4, #100]	; 0x64
1a006fd4:	2200      	movs	r2, #0
1a006fd6:	07db      	lsls	r3, r3, #31
1a006fd8:	81a2      	strh	r2, [r4, #12]
1a006fda:	d51f      	bpl.n	1a00701c <_fclose_r+0xb4>
1a006fdc:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a006fde:	f7fe fe01 	bl	1a005be4 <__retarget_lock_close_recursive>
1a006fe2:	f7fe fafd 	bl	1a0055e0 <__sfp_lock_release>
1a006fe6:	4630      	mov	r0, r6
1a006fe8:	bd70      	pop	{r4, r5, r6, pc}
1a006fea:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a006fec:	f7fe fdfc 	bl	1a005be8 <__retarget_lock_acquire_recursive>
1a006ff0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a006ff4:	2b00      	cmp	r3, #0
1a006ff6:	d1c7      	bne.n	1a006f88 <_fclose_r+0x20>
1a006ff8:	6e66      	ldr	r6, [r4, #100]	; 0x64
1a006ffa:	f016 0601 	ands.w	r6, r6, #1
1a006ffe:	d016      	beq.n	1a00702e <_fclose_r+0xc6>
1a007000:	2600      	movs	r6, #0
1a007002:	4630      	mov	r0, r6
1a007004:	bd70      	pop	{r4, r5, r6, pc}
1a007006:	2b00      	cmp	r3, #0
1a007008:	d0fa      	beq.n	1a007000 <_fclose_r+0x98>
1a00700a:	e7bd      	b.n	1a006f88 <_fclose_r+0x20>
1a00700c:	f7fe fab6 	bl	1a00557c <__sinit>
1a007010:	6e62      	ldr	r2, [r4, #100]	; 0x64
1a007012:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a007016:	07d0      	lsls	r0, r2, #31
1a007018:	d4f5      	bmi.n	1a007006 <_fclose_r+0x9e>
1a00701a:	e7b3      	b.n	1a006f84 <_fclose_r+0x1c>
1a00701c:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a00701e:	f7fe fde5 	bl	1a005bec <__retarget_lock_release_recursive>
1a007022:	e7db      	b.n	1a006fdc <_fclose_r+0x74>
1a007024:	6921      	ldr	r1, [r4, #16]
1a007026:	4628      	mov	r0, r5
1a007028:	f7fe fb30 	bl	1a00568c <_free_r>
1a00702c:	e7bd      	b.n	1a006faa <_fclose_r+0x42>
1a00702e:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a007030:	f7fe fddc 	bl	1a005bec <__retarget_lock_release_recursive>
1a007034:	4630      	mov	r0, r6
1a007036:	bd70      	pop	{r4, r5, r6, pc}

1a007038 <__fputwc>:
1a007038:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1a00703c:	b082      	sub	sp, #8
1a00703e:	4681      	mov	r9, r0
1a007040:	4688      	mov	r8, r1
1a007042:	4614      	mov	r4, r2
1a007044:	f000 f87a 	bl	1a00713c <__locale_mb_cur_max>
1a007048:	2801      	cmp	r0, #1
1a00704a:	d103      	bne.n	1a007054 <__fputwc+0x1c>
1a00704c:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
1a007050:	2bfe      	cmp	r3, #254	; 0xfe
1a007052:	d933      	bls.n	1a0070bc <__fputwc+0x84>
1a007054:	4642      	mov	r2, r8
1a007056:	f104 035c 	add.w	r3, r4, #92	; 0x5c
1a00705a:	a901      	add	r1, sp, #4
1a00705c:	4648      	mov	r0, r9
1a00705e:	f000 f8e9 	bl	1a007234 <_wcrtomb_r>
1a007062:	1c42      	adds	r2, r0, #1
1a007064:	4606      	mov	r6, r0
1a007066:	d02f      	beq.n	1a0070c8 <__fputwc+0x90>
1a007068:	b320      	cbz	r0, 1a0070b4 <__fputwc+0x7c>
1a00706a:	f89d c004 	ldrb.w	ip, [sp, #4]
1a00706e:	2500      	movs	r5, #0
1a007070:	f10d 0a04 	add.w	sl, sp, #4
1a007074:	e009      	b.n	1a00708a <__fputwc+0x52>
1a007076:	6823      	ldr	r3, [r4, #0]
1a007078:	1c5a      	adds	r2, r3, #1
1a00707a:	6022      	str	r2, [r4, #0]
1a00707c:	f883 c000 	strb.w	ip, [r3]
1a007080:	3501      	adds	r5, #1
1a007082:	42b5      	cmp	r5, r6
1a007084:	d216      	bcs.n	1a0070b4 <__fputwc+0x7c>
1a007086:	f815 c00a 	ldrb.w	ip, [r5, sl]
1a00708a:	68a3      	ldr	r3, [r4, #8]
1a00708c:	3b01      	subs	r3, #1
1a00708e:	2b00      	cmp	r3, #0
1a007090:	60a3      	str	r3, [r4, #8]
1a007092:	daf0      	bge.n	1a007076 <__fputwc+0x3e>
1a007094:	69a7      	ldr	r7, [r4, #24]
1a007096:	42bb      	cmp	r3, r7
1a007098:	4661      	mov	r1, ip
1a00709a:	4622      	mov	r2, r4
1a00709c:	4648      	mov	r0, r9
1a00709e:	db02      	blt.n	1a0070a6 <__fputwc+0x6e>
1a0070a0:	f1bc 0f0a 	cmp.w	ip, #10
1a0070a4:	d1e7      	bne.n	1a007076 <__fputwc+0x3e>
1a0070a6:	f000 f86d 	bl	1a007184 <__swbuf_r>
1a0070aa:	1c43      	adds	r3, r0, #1
1a0070ac:	d1e8      	bne.n	1a007080 <__fputwc+0x48>
1a0070ae:	b002      	add	sp, #8
1a0070b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a0070b4:	4640      	mov	r0, r8
1a0070b6:	b002      	add	sp, #8
1a0070b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a0070bc:	fa5f fc88 	uxtb.w	ip, r8
1a0070c0:	4606      	mov	r6, r0
1a0070c2:	f88d c004 	strb.w	ip, [sp, #4]
1a0070c6:	e7d2      	b.n	1a00706e <__fputwc+0x36>
1a0070c8:	89a3      	ldrh	r3, [r4, #12]
1a0070ca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a0070ce:	81a3      	strh	r3, [r4, #12]
1a0070d0:	b002      	add	sp, #8
1a0070d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a0070d6:	bf00      	nop

1a0070d8 <_fputwc_r>:
1a0070d8:	b530      	push	{r4, r5, lr}
1a0070da:	4605      	mov	r5, r0
1a0070dc:	6e50      	ldr	r0, [r2, #100]	; 0x64
1a0070de:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
1a0070e2:	07c0      	lsls	r0, r0, #31
1a0070e4:	4614      	mov	r4, r2
1a0070e6:	b083      	sub	sp, #12
1a0070e8:	b29a      	uxth	r2, r3
1a0070ea:	d401      	bmi.n	1a0070f0 <_fputwc_r+0x18>
1a0070ec:	0590      	lsls	r0, r2, #22
1a0070ee:	d51c      	bpl.n	1a00712a <_fputwc_r+0x52>
1a0070f0:	0490      	lsls	r0, r2, #18
1a0070f2:	d406      	bmi.n	1a007102 <_fputwc_r+0x2a>
1a0070f4:	6e62      	ldr	r2, [r4, #100]	; 0x64
1a0070f6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
1a0070fa:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
1a0070fe:	81a3      	strh	r3, [r4, #12]
1a007100:	6662      	str	r2, [r4, #100]	; 0x64
1a007102:	4628      	mov	r0, r5
1a007104:	4622      	mov	r2, r4
1a007106:	f7ff ff97 	bl	1a007038 <__fputwc>
1a00710a:	6e63      	ldr	r3, [r4, #100]	; 0x64
1a00710c:	07da      	lsls	r2, r3, #31
1a00710e:	4605      	mov	r5, r0
1a007110:	d402      	bmi.n	1a007118 <_fputwc_r+0x40>
1a007112:	89a3      	ldrh	r3, [r4, #12]
1a007114:	059b      	lsls	r3, r3, #22
1a007116:	d502      	bpl.n	1a00711e <_fputwc_r+0x46>
1a007118:	4628      	mov	r0, r5
1a00711a:	b003      	add	sp, #12
1a00711c:	bd30      	pop	{r4, r5, pc}
1a00711e:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a007120:	f7fe fd64 	bl	1a005bec <__retarget_lock_release_recursive>
1a007124:	4628      	mov	r0, r5
1a007126:	b003      	add	sp, #12
1a007128:	bd30      	pop	{r4, r5, pc}
1a00712a:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a00712c:	9101      	str	r1, [sp, #4]
1a00712e:	f7fe fd5b 	bl	1a005be8 <__retarget_lock_acquire_recursive>
1a007132:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a007136:	9901      	ldr	r1, [sp, #4]
1a007138:	b29a      	uxth	r2, r3
1a00713a:	e7d9      	b.n	1a0070f0 <_fputwc_r+0x18>

1a00713c <__locale_mb_cur_max>:
1a00713c:	4b04      	ldr	r3, [pc, #16]	; (1a007150 <__locale_mb_cur_max+0x14>)
1a00713e:	4a05      	ldr	r2, [pc, #20]	; (1a007154 <__locale_mb_cur_max+0x18>)
1a007140:	681b      	ldr	r3, [r3, #0]
1a007142:	6b5b      	ldr	r3, [r3, #52]	; 0x34
1a007144:	2b00      	cmp	r3, #0
1a007146:	bf08      	it	eq
1a007148:	4613      	moveq	r3, r2
1a00714a:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
1a00714e:	4770      	bx	lr
1a007150:	10000088 	.word	0x10000088
1a007154:	100008c8 	.word	0x100008c8

1a007158 <__ascii_mbtowc>:
1a007158:	b082      	sub	sp, #8
1a00715a:	b149      	cbz	r1, 1a007170 <__ascii_mbtowc+0x18>
1a00715c:	b15a      	cbz	r2, 1a007176 <__ascii_mbtowc+0x1e>
1a00715e:	b16b      	cbz	r3, 1a00717c <__ascii_mbtowc+0x24>
1a007160:	7813      	ldrb	r3, [r2, #0]
1a007162:	600b      	str	r3, [r1, #0]
1a007164:	7812      	ldrb	r2, [r2, #0]
1a007166:	1c10      	adds	r0, r2, #0
1a007168:	bf18      	it	ne
1a00716a:	2001      	movne	r0, #1
1a00716c:	b002      	add	sp, #8
1a00716e:	4770      	bx	lr
1a007170:	a901      	add	r1, sp, #4
1a007172:	2a00      	cmp	r2, #0
1a007174:	d1f3      	bne.n	1a00715e <__ascii_mbtowc+0x6>
1a007176:	4610      	mov	r0, r2
1a007178:	b002      	add	sp, #8
1a00717a:	4770      	bx	lr
1a00717c:	f06f 0001 	mvn.w	r0, #1
1a007180:	e7f4      	b.n	1a00716c <__ascii_mbtowc+0x14>
1a007182:	bf00      	nop

1a007184 <__swbuf_r>:
1a007184:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a007186:	460d      	mov	r5, r1
1a007188:	4614      	mov	r4, r2
1a00718a:	4606      	mov	r6, r0
1a00718c:	b110      	cbz	r0, 1a007194 <__swbuf_r+0x10>
1a00718e:	6b83      	ldr	r3, [r0, #56]	; 0x38
1a007190:	2b00      	cmp	r3, #0
1a007192:	d043      	beq.n	1a00721c <__swbuf_r+0x98>
1a007194:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a007198:	69a3      	ldr	r3, [r4, #24]
1a00719a:	60a3      	str	r3, [r4, #8]
1a00719c:	b291      	uxth	r1, r2
1a00719e:	0708      	lsls	r0, r1, #28
1a0071a0:	d51b      	bpl.n	1a0071da <__swbuf_r+0x56>
1a0071a2:	6923      	ldr	r3, [r4, #16]
1a0071a4:	b1cb      	cbz	r3, 1a0071da <__swbuf_r+0x56>
1a0071a6:	b2ed      	uxtb	r5, r5
1a0071a8:	0489      	lsls	r1, r1, #18
1a0071aa:	462f      	mov	r7, r5
1a0071ac:	d522      	bpl.n	1a0071f4 <__swbuf_r+0x70>
1a0071ae:	6822      	ldr	r2, [r4, #0]
1a0071b0:	6961      	ldr	r1, [r4, #20]
1a0071b2:	1ad3      	subs	r3, r2, r3
1a0071b4:	4299      	cmp	r1, r3
1a0071b6:	dd29      	ble.n	1a00720c <__swbuf_r+0x88>
1a0071b8:	3301      	adds	r3, #1
1a0071ba:	68a1      	ldr	r1, [r4, #8]
1a0071bc:	1c50      	adds	r0, r2, #1
1a0071be:	3901      	subs	r1, #1
1a0071c0:	60a1      	str	r1, [r4, #8]
1a0071c2:	6020      	str	r0, [r4, #0]
1a0071c4:	7015      	strb	r5, [r2, #0]
1a0071c6:	6962      	ldr	r2, [r4, #20]
1a0071c8:	429a      	cmp	r2, r3
1a0071ca:	d02a      	beq.n	1a007222 <__swbuf_r+0x9e>
1a0071cc:	89a3      	ldrh	r3, [r4, #12]
1a0071ce:	07db      	lsls	r3, r3, #31
1a0071d0:	d501      	bpl.n	1a0071d6 <__swbuf_r+0x52>
1a0071d2:	2d0a      	cmp	r5, #10
1a0071d4:	d025      	beq.n	1a007222 <__swbuf_r+0x9e>
1a0071d6:	4638      	mov	r0, r7
1a0071d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a0071da:	4621      	mov	r1, r4
1a0071dc:	4630      	mov	r0, r6
1a0071de:	f7fd f8bf 	bl	1a004360 <__swsetup_r>
1a0071e2:	bb20      	cbnz	r0, 1a00722e <__swbuf_r+0xaa>
1a0071e4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a0071e8:	6923      	ldr	r3, [r4, #16]
1a0071ea:	b291      	uxth	r1, r2
1a0071ec:	b2ed      	uxtb	r5, r5
1a0071ee:	0489      	lsls	r1, r1, #18
1a0071f0:	462f      	mov	r7, r5
1a0071f2:	d4dc      	bmi.n	1a0071ae <__swbuf_r+0x2a>
1a0071f4:	6e61      	ldr	r1, [r4, #100]	; 0x64
1a0071f6:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
1a0071fa:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
1a0071fe:	81a2      	strh	r2, [r4, #12]
1a007200:	6822      	ldr	r2, [r4, #0]
1a007202:	6661      	str	r1, [r4, #100]	; 0x64
1a007204:	6961      	ldr	r1, [r4, #20]
1a007206:	1ad3      	subs	r3, r2, r3
1a007208:	4299      	cmp	r1, r3
1a00720a:	dcd5      	bgt.n	1a0071b8 <__swbuf_r+0x34>
1a00720c:	4621      	mov	r1, r4
1a00720e:	4630      	mov	r0, r6
1a007210:	f7fe f958 	bl	1a0054c4 <_fflush_r>
1a007214:	b958      	cbnz	r0, 1a00722e <__swbuf_r+0xaa>
1a007216:	6822      	ldr	r2, [r4, #0]
1a007218:	2301      	movs	r3, #1
1a00721a:	e7ce      	b.n	1a0071ba <__swbuf_r+0x36>
1a00721c:	f7fe f9ae 	bl	1a00557c <__sinit>
1a007220:	e7b8      	b.n	1a007194 <__swbuf_r+0x10>
1a007222:	4621      	mov	r1, r4
1a007224:	4630      	mov	r0, r6
1a007226:	f7fe f94d 	bl	1a0054c4 <_fflush_r>
1a00722a:	2800      	cmp	r0, #0
1a00722c:	d0d3      	beq.n	1a0071d6 <__swbuf_r+0x52>
1a00722e:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
1a007232:	e7d0      	b.n	1a0071d6 <__swbuf_r+0x52>

1a007234 <_wcrtomb_r>:
1a007234:	b5f0      	push	{r4, r5, r6, r7, lr}
1a007236:	4c11      	ldr	r4, [pc, #68]	; (1a00727c <_wcrtomb_r+0x48>)
1a007238:	6824      	ldr	r4, [r4, #0]
1a00723a:	b085      	sub	sp, #20
1a00723c:	4606      	mov	r6, r0
1a00723e:	6b64      	ldr	r4, [r4, #52]	; 0x34
1a007240:	461f      	mov	r7, r3
1a007242:	b151      	cbz	r1, 1a00725a <_wcrtomb_r+0x26>
1a007244:	4d0e      	ldr	r5, [pc, #56]	; (1a007280 <_wcrtomb_r+0x4c>)
1a007246:	2c00      	cmp	r4, #0
1a007248:	bf08      	it	eq
1a00724a:	462c      	moveq	r4, r5
1a00724c:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
1a007250:	47a0      	blx	r4
1a007252:	1c43      	adds	r3, r0, #1
1a007254:	d00c      	beq.n	1a007270 <_wcrtomb_r+0x3c>
1a007256:	b005      	add	sp, #20
1a007258:	bdf0      	pop	{r4, r5, r6, r7, pc}
1a00725a:	4a09      	ldr	r2, [pc, #36]	; (1a007280 <_wcrtomb_r+0x4c>)
1a00725c:	2c00      	cmp	r4, #0
1a00725e:	bf08      	it	eq
1a007260:	4614      	moveq	r4, r2
1a007262:	460a      	mov	r2, r1
1a007264:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
1a007268:	a901      	add	r1, sp, #4
1a00726a:	47a0      	blx	r4
1a00726c:	1c43      	adds	r3, r0, #1
1a00726e:	d1f2      	bne.n	1a007256 <_wcrtomb_r+0x22>
1a007270:	2200      	movs	r2, #0
1a007272:	238a      	movs	r3, #138	; 0x8a
1a007274:	603a      	str	r2, [r7, #0]
1a007276:	6033      	str	r3, [r6, #0]
1a007278:	b005      	add	sp, #20
1a00727a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1a00727c:	10000088 	.word	0x10000088
1a007280:	100008c8 	.word	0x100008c8

1a007284 <__ascii_wctomb>:
1a007284:	b121      	cbz	r1, 1a007290 <__ascii_wctomb+0xc>
1a007286:	2aff      	cmp	r2, #255	; 0xff
1a007288:	d804      	bhi.n	1a007294 <__ascii_wctomb+0x10>
1a00728a:	700a      	strb	r2, [r1, #0]
1a00728c:	2001      	movs	r0, #1
1a00728e:	4770      	bx	lr
1a007290:	4608      	mov	r0, r1
1a007292:	4770      	bx	lr
1a007294:	238a      	movs	r3, #138	; 0x8a
1a007296:	6003      	str	r3, [r0, #0]
1a007298:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a00729c:	4770      	bx	lr
1a00729e:	bf00      	nop

1a0072a0 <__gedf2>:
1a0072a0:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
1a0072a4:	e006      	b.n	1a0072b4 <__cmpdf2+0x4>
1a0072a6:	bf00      	nop

1a0072a8 <__ledf2>:
1a0072a8:	f04f 0c01 	mov.w	ip, #1
1a0072ac:	e002      	b.n	1a0072b4 <__cmpdf2+0x4>
1a0072ae:	bf00      	nop

1a0072b0 <__cmpdf2>:
1a0072b0:	f04f 0c01 	mov.w	ip, #1
1a0072b4:	f84d cd04 	str.w	ip, [sp, #-4]!
1a0072b8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1a0072bc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a0072c0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1a0072c4:	bf18      	it	ne
1a0072c6:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
1a0072ca:	d01b      	beq.n	1a007304 <__cmpdf2+0x54>
1a0072cc:	b001      	add	sp, #4
1a0072ce:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
1a0072d2:	bf0c      	ite	eq
1a0072d4:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
1a0072d8:	ea91 0f03 	teqne	r1, r3
1a0072dc:	bf02      	ittt	eq
1a0072de:	ea90 0f02 	teqeq	r0, r2
1a0072e2:	2000      	moveq	r0, #0
1a0072e4:	4770      	bxeq	lr
1a0072e6:	f110 0f00 	cmn.w	r0, #0
1a0072ea:	ea91 0f03 	teq	r1, r3
1a0072ee:	bf58      	it	pl
1a0072f0:	4299      	cmppl	r1, r3
1a0072f2:	bf08      	it	eq
1a0072f4:	4290      	cmpeq	r0, r2
1a0072f6:	bf2c      	ite	cs
1a0072f8:	17d8      	asrcs	r0, r3, #31
1a0072fa:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
1a0072fe:	f040 0001 	orr.w	r0, r0, #1
1a007302:	4770      	bx	lr
1a007304:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1a007308:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a00730c:	d102      	bne.n	1a007314 <__cmpdf2+0x64>
1a00730e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
1a007312:	d107      	bne.n	1a007324 <__cmpdf2+0x74>
1a007314:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1a007318:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a00731c:	d1d6      	bne.n	1a0072cc <__cmpdf2+0x1c>
1a00731e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
1a007322:	d0d3      	beq.n	1a0072cc <__cmpdf2+0x1c>
1a007324:	f85d 0b04 	ldr.w	r0, [sp], #4
1a007328:	4770      	bx	lr
1a00732a:	bf00      	nop

1a00732c <__aeabi_cdrcmple>:
1a00732c:	4684      	mov	ip, r0
1a00732e:	4610      	mov	r0, r2
1a007330:	4662      	mov	r2, ip
1a007332:	468c      	mov	ip, r1
1a007334:	4619      	mov	r1, r3
1a007336:	4663      	mov	r3, ip
1a007338:	e000      	b.n	1a00733c <__aeabi_cdcmpeq>
1a00733a:	bf00      	nop

1a00733c <__aeabi_cdcmpeq>:
1a00733c:	b501      	push	{r0, lr}
1a00733e:	f7ff ffb7 	bl	1a0072b0 <__cmpdf2>
1a007342:	2800      	cmp	r0, #0
1a007344:	bf48      	it	mi
1a007346:	f110 0f00 	cmnmi.w	r0, #0
1a00734a:	bd01      	pop	{r0, pc}

1a00734c <__aeabi_dcmpeq>:
1a00734c:	f84d ed08 	str.w	lr, [sp, #-8]!
1a007350:	f7ff fff4 	bl	1a00733c <__aeabi_cdcmpeq>
1a007354:	bf0c      	ite	eq
1a007356:	2001      	moveq	r0, #1
1a007358:	2000      	movne	r0, #0
1a00735a:	f85d fb08 	ldr.w	pc, [sp], #8
1a00735e:	bf00      	nop

1a007360 <__aeabi_dcmplt>:
1a007360:	f84d ed08 	str.w	lr, [sp, #-8]!
1a007364:	f7ff ffea 	bl	1a00733c <__aeabi_cdcmpeq>
1a007368:	bf34      	ite	cc
1a00736a:	2001      	movcc	r0, #1
1a00736c:	2000      	movcs	r0, #0
1a00736e:	f85d fb08 	ldr.w	pc, [sp], #8
1a007372:	bf00      	nop

1a007374 <__aeabi_dcmple>:
1a007374:	f84d ed08 	str.w	lr, [sp, #-8]!
1a007378:	f7ff ffe0 	bl	1a00733c <__aeabi_cdcmpeq>
1a00737c:	bf94      	ite	ls
1a00737e:	2001      	movls	r0, #1
1a007380:	2000      	movhi	r0, #0
1a007382:	f85d fb08 	ldr.w	pc, [sp], #8
1a007386:	bf00      	nop

1a007388 <__aeabi_dcmpge>:
1a007388:	f84d ed08 	str.w	lr, [sp, #-8]!
1a00738c:	f7ff ffce 	bl	1a00732c <__aeabi_cdrcmple>
1a007390:	bf94      	ite	ls
1a007392:	2001      	movls	r0, #1
1a007394:	2000      	movhi	r0, #0
1a007396:	f85d fb08 	ldr.w	pc, [sp], #8
1a00739a:	bf00      	nop

1a00739c <__aeabi_dcmpgt>:
1a00739c:	f84d ed08 	str.w	lr, [sp, #-8]!
1a0073a0:	f7ff ffc4 	bl	1a00732c <__aeabi_cdrcmple>
1a0073a4:	bf34      	ite	cc
1a0073a6:	2001      	movcc	r0, #1
1a0073a8:	2000      	movcs	r0, #0
1a0073aa:	f85d fb08 	ldr.w	pc, [sp], #8
1a0073ae:	bf00      	nop

1a0073b0 <__aeabi_dcmpun>:
1a0073b0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1a0073b4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a0073b8:	d102      	bne.n	1a0073c0 <__aeabi_dcmpun+0x10>
1a0073ba:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
1a0073be:	d10a      	bne.n	1a0073d6 <__aeabi_dcmpun+0x26>
1a0073c0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1a0073c4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a0073c8:	d102      	bne.n	1a0073d0 <__aeabi_dcmpun+0x20>
1a0073ca:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
1a0073ce:	d102      	bne.n	1a0073d6 <__aeabi_dcmpun+0x26>
1a0073d0:	f04f 0000 	mov.w	r0, #0
1a0073d4:	4770      	bx	lr
1a0073d6:	f04f 0001 	mov.w	r0, #1
1a0073da:	4770      	bx	lr

1a0073dc <__aeabi_d2iz>:
1a0073dc:	ea4f 0241 	mov.w	r2, r1, lsl #1
1a0073e0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
1a0073e4:	d215      	bcs.n	1a007412 <__aeabi_d2iz+0x36>
1a0073e6:	d511      	bpl.n	1a00740c <__aeabi_d2iz+0x30>
1a0073e8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
1a0073ec:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
1a0073f0:	d912      	bls.n	1a007418 <__aeabi_d2iz+0x3c>
1a0073f2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
1a0073f6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
1a0073fa:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
1a0073fe:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
1a007402:	fa23 f002 	lsr.w	r0, r3, r2
1a007406:	bf18      	it	ne
1a007408:	4240      	negne	r0, r0
1a00740a:	4770      	bx	lr
1a00740c:	f04f 0000 	mov.w	r0, #0
1a007410:	4770      	bx	lr
1a007412:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
1a007416:	d105      	bne.n	1a007424 <__aeabi_d2iz+0x48>
1a007418:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
1a00741c:	bf08      	it	eq
1a00741e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
1a007422:	4770      	bx	lr
1a007424:	f04f 0000 	mov.w	r0, #0
1a007428:	4770      	bx	lr
1a00742a:	bf00      	nop
1a00742c:	7379654b 	.word	0x7379654b
1a007430:	2066654d 	.word	0x2066654d
1a007434:	6c626150 	.word	0x6c626150
1a007438:	434a206f 	.word	0x434a206f
1a00743c:	6f6c4120 	.word	0x6f6c4120
1a007440:	206f736e 	.word	0x206f736e
1a007444:	74736143 	.word	0x74736143
1a007448:	6f6c6c69 	.word	0x6f6c6c69
1a00744c:	31303220 	.word	0x31303220
1a007450:	ffff0039 	.word	0xffff0039
1a007454:	5f59454b 	.word	0x5f59454b
1a007458:	5f525241 	.word	0x5f525241
1a00745c:	524f4853 	.word	0x524f4853
1a007460:	09203a54 	.word	0x09203a54
1a007464:	79656b20 	.word	0x79656b20
1a007468:	6925203a 	.word	0x6925203a
1a00746c:	67200920 	.word	0x67200920
1a007470:	3a6f6970 	.word	0x3a6f6970
1a007474:	0a692520 	.word	0x0a692520
1a007478:	00000000 	.word	0x00000000
1a00747c:	5f59454b 	.word	0x5f59454b
1a007480:	5f525241 	.word	0x5f525241
1a007484:	474e4f4c 	.word	0x474e4f4c
1a007488:	2009203a 	.word	0x2009203a
1a00748c:	3a79656b 	.word	0x3a79656b
1a007490:	20692520 	.word	0x20692520
1a007494:	70672009 	.word	0x70672009
1a007498:	203a6f69 	.word	0x203a6f69
1a00749c:	0a0a6925 	.word	0x0a0a6925
1a0074a0:	00000000 	.word	0x00000000
1a0074a4:	5f59454b 	.word	0x5f59454b
1a0074a8:	5f414241 	.word	0x5f414241
1a0074ac:	524f4853 	.word	0x524f4853
1a0074b0:	09203a54 	.word	0x09203a54
1a0074b4:	79656b20 	.word	0x79656b20
1a0074b8:	6925203a 	.word	0x6925203a
1a0074bc:	67200920 	.word	0x67200920
1a0074c0:	3a6f6970 	.word	0x3a6f6970
1a0074c4:	0a692520 	.word	0x0a692520
1a0074c8:	00000000 	.word	0x00000000
1a0074cc:	5f59454b 	.word	0x5f59454b
1a0074d0:	5f414241 	.word	0x5f414241
1a0074d4:	474e4f4c 	.word	0x474e4f4c
1a0074d8:	2009203a 	.word	0x2009203a
1a0074dc:	3a79656b 	.word	0x3a79656b
1a0074e0:	20692520 	.word	0x20692520
1a0074e4:	70672009 	.word	0x70672009
1a0074e8:	203a6f69 	.word	0x203a6f69
1a0074ec:	000a6925 	.word	0x000a6925
1a0074f0:	4e455645 	.word	0x4e455645
1a0074f4:	454b5f54 	.word	0x454b5f54
1a0074f8:	4f445f59 	.word	0x4f445f59
1a0074fc:	203a4e57 	.word	0x203a4e57
1a007500:	656b2009 	.word	0x656b2009
1a007504:	25203a79 	.word	0x25203a79
1a007508:	20092069 	.word	0x20092069
1a00750c:	6f697067 	.word	0x6f697067
1a007510:	6925203a 	.word	0x6925203a
1a007514:	0000000a 	.word	0x0000000a
1a007518:	4e455645 	.word	0x4e455645
1a00751c:	454b5f54 	.word	0x454b5f54
1a007520:	4c435f59 	.word	0x4c435f59
1a007524:	3a4b4349 	.word	0x3a4b4349
1a007528:	6b200920 	.word	0x6b200920
1a00752c:	203a7965 	.word	0x203a7965
1a007530:	09206925 	.word	0x09206925
1a007534:	69706720 	.word	0x69706720
1a007538:	25203a6f 	.word	0x25203a6f
1a00753c:	00000a69 	.word	0x00000a69
1a007540:	4e455645 	.word	0x4e455645
1a007544:	454b5f54 	.word	0x454b5f54
1a007548:	50555f59 	.word	0x50555f59
1a00754c:	2009203a 	.word	0x2009203a
1a007550:	3a79656b 	.word	0x3a79656b
1a007554:	20692520 	.word	0x20692520
1a007558:	70672009 	.word	0x70672009
1a00755c:	203a6f69 	.word	0x203a6f69
1a007560:	000a6925 	.word	0x000a6925
1a007564:	4556450a 	.word	0x4556450a
1a007568:	4b5f544e 	.word	0x4b5f544e
1a00756c:	325f5945 	.word	0x325f5945
1a007570:	43494c43 	.word	0x43494c43
1a007574:	09203a4b 	.word	0x09203a4b
1a007578:	79656b20 	.word	0x79656b20
1a00757c:	6925203a 	.word	0x6925203a
1a007580:	67200920 	.word	0x67200920
1a007584:	3a6f6970 	.word	0x3a6f6970
1a007588:	0a692520 	.word	0x0a692520
1a00758c:	ffff000a 	.word	0xffff000a

1a007590 <ExtRateIn>:
1a007590:	00000000                                ....

1a007594 <GpioButtons>:
1a007594:	08000400 09010900                       ........

1a00759c <GpioLeds>:
1a00759c:	01050005 0e000205 0c010b01              ............

1a0075a8 <GpioPorts>:
1a0075a8:	03030003 0f050403 05031005 07030603     ................
1a0075b8:	ffff0802                                ....

1a0075bc <OscRateIn>:
1a0075bc:	00b71b00                                ....

1a0075c0 <InitClkStates>:
1a0075c0:	01010f01                                ....

1a0075c4 <pinmuxing>:
1a0075c4:	00440002 00440102 00440202 00400a02     ..D...D...D...@.
1a0075d4:	00400b02 00400c02 00500001 00500101     ..@...@...P...P.
1a0075e4:	00500201 00500601 00500106 00500406     ..P...P...P...P.
1a0075f4:	00500506 00540706 00540806 00500906     ..P...T...T...P.
1a007604:	00500a06 00500b06 00500c06 00f0040f     ..P...P...P.....
1a007614:	00d50301 00d50401 00160107 00560207     ..............V.
1a007624:	00520302 00520402 00520509 00570609     ..R...R...R...W.
1a007634:	00570206                                ..W.

1a007638 <UART_BClock>:
1a007638:	01a201c2 01620182                       ......b.

1a007640 <UART_PClock>:
1a007640:	00820081 00a200a1 08040201 0f0f0f03     ................
1a007650:	ffff00ff                                ....

1a007654 <periph_to_base>:
1a007654:	00050000 0020000a 00090024 00400040     ...... .$...@.@.
1a007664:	00600005 000400a6 00c300c0 00e00002     ..`.............
1a007674:	000100e0 01000100 01200003 00060120     .......... . ...
1a007684:	01400140 0142000c 00190142 01620162     @.@...B.B...b.b.
1a007694:	01820013 00120182 01a201a2 01c20011     ................
1a0076a4:	001001c2 01e201e2 0202000f 000e0202     ................
1a0076b4:	02220222 0223000d 001c0223              "."...#.#...

1a0076c0 <InitClkStates>:
1a0076c0:	00010100 00010909 0001090a 01010701     ................
1a0076d0:	00010902 00010906 0101090c 0001090d     ................
1a0076e0:	0001090e 0001090f 00010910 00010911     ................
1a0076f0:	00010912 00010913 00011114 00011119     ................
1a007700:	0001111a 0001111b                       ........

1a007708 <gpioPinsInit>:
1a007708:	02000104 00050701 05010d03 04080100     ................
1a007718:	02020002 02000304 00000403 04070002     ................
1a007728:	030c0300 09050402 05040103 04030208     ................
1a007738:	04020305 06040504 0802000c 03000b06     ................
1a007748:	00090607 07060503 060f0504 03030004     ................
1a007758:	02000404 00050404 06040502 04060200     ................
1a007768:	0c050408 05040a04 0003010e 14010a00     ................
1a007778:	010f0000 0d000012 00001101 0010010c     ................
1a007788:	07070300 000f0300 01000001 00000000     ................
1a007798:	000a0600 08060603 06100504 04030005     ................
1a0077a8:	03000106 04090400 04010d05 010b0000     ................
1a0077b8:	0200000f 00000001 00010104 02010800     ................
1a0077c8:	01090000 09010006 05040002 04010200     ................
1a0077d8:	02020105 02020504 0e00000a 01000b02     ................
1a0077e8:	000c020b 00040c01 04000200 01020001     ................
1a0077f8:	02000204 00030402 03070302 070b0300     ................
1a007808:	0c030004 03000507 0006070d 01020e03     ................
1a007818:	04010504 06020006 02000504 00040405     ................
1a007828:	08040402 040c0504 0d050409 05040a04     ................
1a007838:	0005010e ffff0801                       ........

1a007840 <ultrasonicSensorsIrqMap>:
1a007840:	ff020100 00464e49 00666e69 004e414e     ....INF.inf.NAN.
1a007850:	006e616e 33323130 37363534 62613938     nan.0123456789ab
1a007860:	66656463 00000000 33323130 37363534     cdef....01234567
1a007870:	42413938 46454443 00000000 6c756e28     89ABCDEF....(nul
1a007880:	0000296c ffff0030                       l)..0...

1a007888 <blanks.8605>:
1a007888:	20202020 20202020 20202020 20202020                     

1a007898 <zeroes.8606>:
1a007898:	30303030 30303030 30303030 30303030     0000000000000000
1a0078a8:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.

1a0078b8 <__mprec_bigtens>:
1a0078b8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
1a0078c8:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
1a0078d8:	7f73bf3c 75154fdd                       <.s..O.u

1a0078e0 <__mprec_tens>:
1a0078e0:	00000000 3ff00000 00000000 40240000     .......?......$@
1a0078f0:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
1a007900:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
1a007910:	00000000 412e8480 00000000 416312d0     .......A......cA
1a007920:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
1a007930:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
1a007940:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
1a007950:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
1a007960:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
1a007970:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
1a007980:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
1a007990:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
1a0079a0:	79d99db4 44ea7843                       ...yCx.D

1a0079a8 <p05.7367>:
1a0079a8:	00000005 00000019 0000007d 00000043     ........}...C...
1a0079b8:	49534f50 ffff0058 0000002e              POSIX.......

1a0079c4 <_ctype_>:
1a0079c4:	20202000 20202020 28282020 20282828     .         ((((( 
1a0079d4:	20202020 20202020 20202020 20202020                     
1a0079e4:	10108820 10101010 10101010 10101010      ...............
1a0079f4:	04040410 04040404 10040404 10101010     ................
1a007a04:	41411010 41414141 01010101 01010101     ..AAAAAA........
1a007a14:	01010101 01010101 01010101 10101010     ................
1a007a24:	42421010 42424242 02020202 02020202     ..BBBBBB........
1a007a34:	02020202 02020202 02020202 10101010     ................
1a007a44:	00000020 00000000 00000000 00000000      ...............
	...
1a007ac4:	ffffff00                                ....
